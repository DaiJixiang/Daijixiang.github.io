<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>1.2-python</title>
      <link href="/2019/06/25/1-2-python/"/>
      <url>/2019/06/25/1-2-python/</url>
      
        <content type="html"><![CDATA[<h5 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h5><p>在[]内，可以存储多个任意类型的值<br>以逗号分开</p><p>列表可以使用和字符串相同的操作</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">students = [<span class="string">'A'</span> , <span class="string">'B'</span> , <span class="string">'C'</span>]</span><br><span class="line">print(students[<span class="number">1</span>])<span class="comment">#B</span></span><br><span class="line">student_info = [<span class="string">'A'</span> , <span class="number">18</span> , <span class="string">'男'</span> , [<span class="string">'AA'</span> , <span class="string">'BB'</span>]]</span><br><span class="line">print(student_info[<span class="number">3</span>])<span class="comment">#['AA' , 'BB']</span></span><br><span class="line">print(student_info[<span class="number">3</span>][<span class="number">1</span>])<span class="comment">#'AA'</span></span><br><span class="line">print(student_info[<span class="number">0</span>:<span class="number">2</span>])  <span class="comment"># ['A', 18]</span></span><br><span class="line"><span class="comment">#判断A是否在列表中</span></span><br><span class="line">print(<span class="string">'A'</span> <span class="keyword">in</span> student_info)</span><br><span class="line"><span class="comment">#追加</span></span><br><span class="line">student_info.append(<span class="string">'hfuu'</span>)</span><br><span class="line">print(student_info)</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line"><span class="keyword">del</span> student_info[<span class="number">3</span>]  <span class="comment"># 删除索引是3的值</span></span><br><span class="line">print(student_info)</span><br><span class="line">print(len(student_info))</span><br><span class="line"><span class="comment">#获取列表中某个值的索引</span></span><br><span class="line">print(student_info.index(<span class="string">'hfuu'</span>))</span><br><span class="line"><span class="comment">#pop取值</span></span><br><span class="line"><span class="comment">#默认取列表中最后一个值</span></span><br><span class="line"><span class="comment">#若括号中取了索引，则取索引对应的值</span></span><br><span class="line">student_info.append(<span class="string">'hhh'</span>)</span><br><span class="line">print(student_info)</span><br><span class="line">student_info.pop()</span><br><span class="line">print(student_info)</span><br><span class="line">college = student_info.pop(<span class="number">3</span>)</span><br><span class="line">print(college)</span><br><span class="line">name = student_info.remove(<span class="string">'A'</span>)</span><br><span class="line">print(name)<span class="comment">#None</span></span><br><span class="line">print(student_info)</span><br><span class="line"><span class="comment">#插入</span></span><br><span class="line">student_info.insert(<span class="number">2</span>,<span class="string">'hfuu'</span>)</span><br><span class="line">print(student_info)<span class="comment">#[18, '男', 'hfuu']</span></span><br><span class="line"><span class="comment">#列表的合并</span></span><br><span class="line">student_info1 = [<span class="string">'A'</span>, <span class="number">18</span>, <span class="string">'男'</span>, [<span class="string">'AA'</span>, <span class="string">'BB'</span>]]</span><br><span class="line">student_info2 = [<span class="string">'C'</span>, <span class="number">28</span>, <span class="string">'男'</span>, [<span class="string">'AX'</span>, <span class="string">'XX'</span>]]</span><br><span class="line">student_info1.extend(student_info2)</span><br><span class="line">print(student_info1)<span class="comment">#['A', 18, '男', ['AA', 'BB'], 'C', 28, '男', ['AX', 'XX']]</span></span><br></pre></td></tr></table></figure><hr><h5 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h5><p>在（）内可存放的多个任意类型的值，并以逗号隔开</p><p>只能在定义时修改</p><hr><h5 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h5><p>if判断 </p><p>while循环</p><p>for循环</p><hr><h5 id="文件处理"><a href="#文件处理" class="headerlink" title="文件处理"></a>文件处理</h5><p>open()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#参数一：文件存放的绝对路径，参数二：文件的操作模式，参数三：必须制定字符编码（必须指定）</span></span><br><span class="line"><span class="comment">#wt：写  rt：读  at：追加文本</span></span><br><span class="line">f = open(<span class="string">'file.txt'</span>, mode=<span class="string">'wt'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">f.write(<span class="string">'AAA'</span>)</span><br></pre></td></tr></table></figure><p>文件处理：上下文管理with</p><p>可以管理open打开的文件，会在with执行完毕后自动调用close关闭文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#读取文件</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'file.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment">#as称为句柄</span></span><br><span class="line">    x = f.read()</span><br><span class="line">    print(x)</span><br><span class="line"><span class="comment">#写文件</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'file.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">'ABC'</span>)</span><br></pre></td></tr></table></figure><hr><h5 id="对图片、视频、音频进行读写"><a href="#对图片、视频、音频进行读写" class="headerlink" title="对图片、视频、音频进行读写"></a>对图片、视频、音频进行读写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取图片</span></span><br><span class="line"><span class="comment">#rb模式读取二进制不需要指定编码</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'000.png'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    x = f.read()</span><br><span class="line">    print(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#写入001.png</span></span><br><span class="line">png = x</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'001.png'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(png)</span><br><span class="line"></span><br><span class="line"><span class="comment">#with可以管理多个文件 </span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'000.png'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f1, open(<span class="string">'002.png'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f2:</span><br><span class="line">    x = f1.read()</span><br><span class="line">    f2.write(x)</span><br></pre></td></tr></table></figure><hr><h5 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h5><p>使用函数的好处：</p><p>​    1.解决代码冗余问题</p><p>​    2.使得代码的结构更清晰</p><p>​    3.易于管理</p><p> 函数的使用必须遵循先定义，后调用的原则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#语法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> 函数名<span class="params">(参数一，参数二...)</span>:</span></span><br><span class="line">    <span class="string">'''声明函数'''</span></span><br><span class="line">    逻辑代码</span><br><span class="line">    retuen 返回值</span><br></pre></td></tr></table></figure><p>函数名必须：看其名知其意</p><p>（）：接收外部传入的参数</p><p>注释：用来声明函数的作用</p><p>return：返回给调用者的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数的三种形式：</span></span><br><span class="line"><span class="comment"># 无参函数（不需要接收外部传入的参数），有参函数（需要接收外部传入的参数），空函数（pass）</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    user = input(<span class="string">'请输入用户名：'</span>).strip()</span><br><span class="line">    pwd = input(<span class="string">'请输入密码：'</span>).strip()</span><br><span class="line">    <span class="keyword">if</span> user == <span class="string">'jack'</span> <span class="keyword">and</span> pwd == <span class="string">'123'</span>:</span><br><span class="line">        print(<span class="string">'login success'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'login error'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数的内存地址</span></span><br><span class="line">print(login)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数调用</span></span><br><span class="line">login()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 有参函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(username, password)</span>:</span></span><br><span class="line">    user = input(<span class="string">'请输入用户名：'</span>).strip()</span><br><span class="line">    pwd = input(<span class="string">'请输入密码：'</span>).strip()</span><br><span class="line">    <span class="keyword">if</span> user == username <span class="keyword">and</span> pwd == password:</span><br><span class="line">        print(<span class="string">'login success'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'login error'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数的时候需要传入参数，否则会报错</span></span><br><span class="line">login(<span class="string">'jack'</span>, <span class="string">'123'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 空函数</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">ATM:</span></span><br><span class="line"><span class="string">    1、登录</span></span><br><span class="line"><span class="string">    2、注册</span></span><br><span class="line"><span class="string">    3、提现</span></span><br><span class="line"><span class="string">    4、取款</span></span><br><span class="line"><span class="string">    5、转账</span></span><br><span class="line"><span class="string">    6、还款</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 代表什么都不做</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.1-python</title>
      <link href="/2019/06/25/1.1-python/"/>
      <url>/2019/06/25/1.1-python/</url>
      
        <content type="html"><![CDATA[<h5 id="1-什么是编程语言"><a href="#1-什么是编程语言" class="headerlink" title="1.什么是编程语言"></a>1.什么是编程语言</h5><p>是用来定义计算机程序的形式语言。它是一种被标准化的交流技巧，用来向计算机发出指令。一种计算机语言让程序员能够准确地定义计算机所需要使用的数据，并精确地定义在不同情况下所应当采取的行动。</p><h5 id="2-计算机组成部分"><a href="#2-计算机组成部分" class="headerlink" title="2.计算机组成部分"></a>2.计算机组成部分</h5><p>cpu</p><p>内存</p><p>外存</p><p>输入设备</p><p>输出设备</p><h5 id="3-什么是变量"><a href="#3-什么是变量" class="headerlink" title="3.什么是变量"></a>3.什么是变量</h5><h6 id="变量，可变化的量"><a href="#变量，可变化的量" class="headerlink" title="变量，可变化的量"></a>变量，可变化的量</h6><p>#变量值：‘tank’会在内存中产生一份变量地址</p><p>#变量名：与变量值进行绑定</p><p>#=：把变量值绑定给变量</p><h6 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h6><p>驼峰命名法：</p><p>#Python推荐使用</p><p>下划线命名法：</p><h6 id="变量名定义规范"><a href="#变量名定义规范" class="headerlink" title="变量名定义规范"></a>变量名定义规范</h6><p>1、要以英文字母或下划线开头</p><p>2、不能以数字开头</p><p>3、不能以关键字开头</p><h6 id="定义变量不好的方式"><a href="#定义变量不好的方式" class="headerlink" title="定义变量不好的方式"></a>定义变量不好的方式</h6><p>1、不以中文命名</p><p>2、变量名过长</p><p>3、变量名词不达意</p><h6 id="定义变量的三大特征"><a href="#定义变量的三大特征" class="headerlink" title="定义变量的三大特征"></a>定义变量的三大特征</h6><p>id：用来表示变量的值在内存中的唯一的内存地址</p><p>Python优化机制：在某一个长度内Python把值相同的变量统一存放在同一个地址中</p><p>type：变量的类型</p><p>value：变量的值</p><h5 id="4-常量"><a href="#4-常量" class="headerlink" title="4.常量"></a>4.常量</h5><p>常量：指的是不变的量</p><p>常量本质上也是变量，在Python中没有任何机制会组织修改常量</p><p>对于大写的变量都不应该对其进行修改</p><h6 id="命名规范："><a href="#命名规范：" class="headerlink" title="命名规范："></a>命名规范：</h6><p>变量名全大写</p><h6 id="5-用户与程序交互"><a href="#5-用户与程序交互" class="headerlink" title="5.用户与程序交互"></a>5.用户与程序交互</h6><p>输入：input</p><p>input内输入法人任何数据类型都是字符串（Python3）</p><p>输出：print</p><h6 id="6-格式化输出："><a href="#6-格式化输出：" class="headerlink" title="6.格式化输出："></a>6.格式化输出：</h6><p>通过某种占位符，用于替换字符串中某个位置的字符</p><p>%s：可以替换任意类型</p><p>%d：可以替换整型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">"话费余额%s元，还剩%d元。"</span>%(一百,<span class="number">100</span>)</span><br><span class="line">print(str1)</span><br></pre></td></tr></table></figure><h6 id="7-注释："><a href="#7-注释：" class="headerlink" title="7.注释："></a>7.注释：</h6><p>#：单行注释</p><p>‘’’   ‘’’或”””    “””：多行注释</p><h5 id="8-基本数据类型"><a href="#8-基本数据类型" class="headerlink" title="8.基本数据类型"></a>8.基本数据类型</h5><h6 id="数字类型："><a href="#数字类型：" class="headerlink" title="数字类型："></a>数字类型：</h6><p>1、整型（int）：年龄、身份证ID</p><p>例： age = int（18）</p><p>2、浮点型（float）：身高体重</p><h6 id="字符串类型："><a href="#字符串类型：" class="headerlink" title="字符串类型："></a>字符串类型：</h6><p>字符串方法 </p><p> （各种方法）</p><p>按索引取值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'hello tank!'</span></span><br><span class="line"><span class="comment">#正向取</span></span><br><span class="line">print(str[<span class="number">0</span>])<span class="comment">#h</span></span><br><span class="line">print(str[<span class="number">9</span>])<span class="comment">#k</span></span><br><span class="line"><span class="comment">#反向取</span></span><br><span class="line">print(str[<span class="number">-2</span>])<span class="comment">#k</span></span><br></pre></td></tr></table></figure><p>切片（顾尾不顾头，步长）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'hello tank!'</span></span><br><span class="line">print(str1[<span class="number">0</span>:<span class="number">11</span>])<span class="comment">#hello tank</span></span><br><span class="line">print(str1[<span class="number">0</span>:<span class="number">11</span>:<span class="number">2</span>])<span class="comment">#hlotn</span></span><br></pre></td></tr></table></figure><p>长度length</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'hello tank!'</span></span><br><span class="line">print(len(str1))</span><br></pre></td></tr></table></figure><p>成员运算in|not in</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'hello tank!'</span></span><br><span class="line">print(<span class="string">'e'</span> <span class="keyword">in</span> str1)<span class="comment">#true</span></span><br><span class="line">print(<span class="string">'e'</span> <span class="keyword">not</span> <span class="keyword">in</span> str1)<span class="comment">#false</span></span><br></pre></td></tr></table></figure><p>去掉空格</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#去掉空格</span></span><br><span class="line"><span class="comment">#strip，lstrip，rstrip</span></span><br><span class="line">str1 = <span class="string">"   hello   "</span></span><br><span class="line">print(str1.strip())</span><br><span class="line">print(str1.lstrip())</span><br><span class="line">print(str1.rstrip())</span><br></pre></td></tr></table></figure><p>字符串格式化输出format</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">"my name is tank , my age is 18."</span></span><br><span class="line"><span class="comment">#对用户的姓名和年龄进行格式化输出</span></span><br><span class="line"><span class="comment">#方式一</span></span><br><span class="line">print(<span class="string">'my name is &#123;&#125;, my age is &#123;&#125;.'</span>.format(<span class="string">'tank'</span>,<span class="number">18</span>))</span><br><span class="line"><span class="comment">#方式二</span></span><br><span class="line">print(<span class="string">'my name is &#123;0&#125;, my age is &#123;1&#125;'</span>.format(<span class="string">'tank'</span>,<span class="number">18</span>))</span><br><span class="line"><span class="comment">#方式三</span></span><br><span class="line">print(<span class="string">'my name is &#123;name&#125;, my age is &#123;age&#125;'</span>.format(name=<span class="string">'tank'</span>,age=<span class="number">18</span>))</span><br></pre></td></tr></table></figure><p>split ：字符串切分</p><p>根据某个字符进行切分并把结果放到一个列表里面</p><p>join：字符串拼接</p><p>把列表中的每一个字符串进行拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">' '</span>.join([<span class="string">'tank'</span>,<span class="string">'18'</span>]))<span class="comment">#只允许拼接字符串，不允许有其他的类型</span></span><br><span class="line"><span class="comment">#根据空格对字符串进行拼接</span></span><br><span class="line">print(<span class="string">'_'</span>.join([<span class="string">'tank'</span>,<span class="string">'18'</span>]))<span class="comment">#只允许拼接字符串，不允许有其他的类型</span></span><br><span class="line"><span class="comment">#根据_对字符串进行拼接</span></span><br></pre></td></tr></table></figure><p>replace：字符串的替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'my name is A.'</span></span><br><span class="line">str1 = str1.replace(<span class="string">'A'</span>,<span class="string">'B'</span>)</span><br><span class="line">print(str1)</span><br></pre></td></tr></table></figure><p>isdigit：判断是否是数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">choose = input(<span class="string">'请选择功能：[0,1,2]:'</span>)</span><br><span class="line"><span class="comment">#input里面输入的内容都会变成字符串</span></span><br><span class="line">print(<span class="string">'choice.isdigit()'</span>)<span class="comment">#返回布尔值</span></span><br></pre></td></tr></table></figure><p>循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'hello tank!'</span></span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> str1:</span><br><span class="line">    print(l)</span><br></pre></td></tr></table></figure><p>大小写转换lower/upper</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'hello Tank!'</span></span><br><span class="line">print(str1.lower())</span><br><span class="line">print(str1.upper())</span><br></pre></td></tr></table></figure><h5 id="今日作业"><a href="#今日作业" class="headerlink" title="今日作业"></a>今日作业</h5><p>1、name = “  aleX”</p><p> 1) 移除 name 变量对应的值两边的空格,并输出处理结果 </p><p>2) 判断 name 变量对应的值是否以 “al” 开头,并输出结果</p><p>3) 判断 name 变量对应的值是否以 “X” 结尾,并输出结果</p><p>4) 将 name 变量对应的值中的 “l” 替换为 “p”,并输出结果</p><p>5) 将 name 变量对应的值根据 “l” 分割,并输出结果。</p><p>6) 将 name 变量对应的值变大写,并输出结果</p><p>7) 将 name 变量对应的值变小写,并输出结果</p><p>8) 请输出 name 变量对应的值的第 2 个字符</p><p>9) 请输出 name 变量对应的值的前 3 个字符</p><p>10) 请输出 name 变量对应的值的后 2 个字符</p><p>11) 请输出 name 变量对应的值中 “e” 所在索引位置</p><p>12) 获取子序列,去掉最后一个字符。如: oldboy 则获取 oldbo。</p><h5 id="答："><a href="#答：" class="headerlink" title="答："></a>答：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">' aleX'</span></span><br><span class="line">print(<span class="string">'name是:'</span> + name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#1) 移除 name 变量对应的值两边的空格,并输出处理结果</span></span><br><span class="line"></span><br><span class="line">str1 = name.lstrip(<span class="string">' '</span>)</span><br><span class="line">print(<span class="string">'移除 name 变量对应的值两边的空格后: '</span> + str1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#2) 判断 name 变量对应的值是否以 "al" 开头,并输出结果</span></span><br><span class="line"></span><br><span class="line">b1 = name.startswith(<span class="string">'al'</span>)</span><br><span class="line">print(<span class="string">'name 变量对应的值是否以 "al" 开头: '</span> + str(b1))</span><br><span class="line"></span><br><span class="line"><span class="comment">#3) 判断 name 变量对应的值是否以 "X" 结尾,并输出结果</span></span><br><span class="line"></span><br><span class="line">b2 = name.endswith(<span class="string">'X'</span>)</span><br><span class="line">print(<span class="string">'name 变量对应的值是否以 "X" 结尾: '</span> + str(b2))</span><br><span class="line"></span><br><span class="line"><span class="comment">#4) 将 name 变量对应的值中的 “l” 替换为 “p”,并输出结果</span></span><br><span class="line"></span><br><span class="line">str2 = name.replace(<span class="string">'l'</span>,<span class="string">'p'</span>)</span><br><span class="line">print(<span class="string">'将 name 变量对应的值中的 “l” 替换为 “p”: '</span> + str2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#5) 将 name 变量对应的值根据 “l” 分割,并输出结果。</span></span><br><span class="line"></span><br><span class="line">str3 = name.split(<span class="string">'l'</span>)</span><br><span class="line">print(<span class="string">'将 name 变量对应的值根据 “l” 分割: '</span>, end=<span class="string">''</span>)</span><br><span class="line">print(str3)</span><br><span class="line"></span><br><span class="line"><span class="comment">#6) 将 name 变量对应的值变大写,并输出结果</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'将 name 变量对应的值变大写: '</span> + name.upper())</span><br><span class="line"></span><br><span class="line"><span class="comment">#7) 将 name 变量对应的值变小写,并输出结果</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'将 name 变量对应的值变小写: '</span> + name.lower())</span><br><span class="line"></span><br><span class="line"><span class="comment">#8) 请输出 name 变量对应的值的第 2 个字符</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'name 变量对应的值的第 2 个字符: '</span> + name[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#9) 请输出 name 变量对应的值的前 3 个字符</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'name 变量对应的值的前 3 个字符: '</span> + name[<span class="number">0</span>:<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#10) 请输出 name 变量对应的值的后 2 个字符</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'name 变量对应的值的后 2 个字符: '</span> + name[<span class="number">-2</span>:])</span><br><span class="line"></span><br><span class="line"><span class="comment">#11) 请输出 name 变量对应的值中 “e” 所在索引位置</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'name 变量对应的值中 “e” 所在索引位置: '</span> + str(name.find(<span class="string">'e'</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#12) 获取子序列,去掉最后一个字符。如: oldboy 则获取 oldbo。</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'获取去掉最后一个字符的子序列: '</span> + name[<span class="number">-2</span>:<span class="number">0</span>:<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><p>运行截图：</p><p><img src="https://i.loli.net/2019/06/24/5d10a8e02ba8975143.png" alt="1561371465596.png"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>负载均衡</title>
      <link href="/2019/03/03/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
      <url>/2019/03/03/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<p><strong>负载均衡图例</strong><br><a id="more"></a><br><img src="https://i.loli.net/2019/03/03/5c7b9421628d3.png" alt="02.png"><br><img src="https://i.loli.net/2019/03/03/5c7b94216e450.png" alt="01.png"><br><img src="https://i.loli.net/2019/03/03/5c7b942196ddc.png" alt="04.png"><br><img src="https://i.loli.net/2019/03/03/5c7b94219da97.png" alt="03.png"><br><img src="https://i.loli.net/2019/03/03/5c7b94219efe1.png" alt="06.png"><br><img src="https://i.loli.net/2019/03/03/5c7b94219e4ec.png" alt="07.png"><br><img src="https://i.loli.net/2019/03/03/5c7b9421b0e90.png" alt="08.png"><br><img src="https://i.loli.net/2019/03/03/5c7b9421eb60c.png" alt="05.png"><br><img src="https://i.loli.net/2019/03/03/5c7b944240b3b.png" alt="09.png"><br><img src="https://i.loli.net/2019/03/03/5c7b94424a626.png" alt="10.png"><br><img src="https://i.loli.net/2019/03/03/5c7b94425b522.png" alt="11.png"></p>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>直接排序</title>
      <link href="/2019/02/27/%E7%9B%B4%E6%8E%A5%E6%8E%92%E5%BA%8F/"/>
      <url>/2019/02/27/%E7%9B%B4%E6%8E%A5%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="直接排序"><a href="#直接排序" class="headerlink" title="直接排序"></a>直接排序</h2><h3 id="一-算法描述："><a href="#一-算法描述：" class="headerlink" title="一.算法描述："></a>一.算法描述：</h3><p>1.选择排序（Selection Sort）是一种简单直观的排序算法。</p><p>2.选择排序的基本思想：</p><p>每一躺从待排序的数据元素中选出最小（或最大）的一个元素，顺序放在已排好序的数列最后，直到全部待排序的数据元素排完。</p><p>比如：在一个长度为N的无序数组中，第一趟遍历N个数据，找出其中最小的数值与第一个元素交换；第二趟遍历剩下的N-1个数据，找出其中最小的数值与第二个元素交换……第N-1趟遍历剩下的2个数据，找出其中最小的数值与第N-1个元素交换，至此选择排序完成。</p><h3 id="二-算法分析："><a href="#二-算法分析：" class="headerlink" title="二.算法分析："></a>二.算法分析：</h3><p>需求：定义一个函数接收一个int类型的数组对象，把数组中的元素按从大到小排序。数组元素初始值为[12,5,17,8,9]</p><p>1.第一趟排序结果及其分析：</p><p>（1）结果：把最大值放在首位置，第一趟的排序结果为[17,5,12,8,9]</p><p>（2）关键代码：<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for(int i = <span class="number">1</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">if(arr<span class="string">[i]</span> &gt; arr<span class="string">[0]</span>)&#123;</span><br><span class="line">//交换位置</span><br><span class="line">int temp = arr<span class="string">[i]</span>;</span><br><span class="line">arr<span class="string">[i]</span> = arr<span class="string">[0]</span>;</span><br><span class="line">arr<span class="string">[0]</span> = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（3）分析：</p><p>以arr[0]为基准，从i=1依次遍历剩下的元素，如果有比arr[0]大的，就和arr[0]交换位置，比如给出的原始数组中比较的过程如下：</p><p>   ①以arr[0]中存储的数据12为基准，先和arr[1]中存储的数据5比，12比5大，所以不用交换。</p><p>   ②仍然以arr[0]中存储的数据12为基准，再和arr[2]中存储的数据17比，12比17小，需要交换位置。</p><p>   ③此时以arr[0]中存储的数据17为基准，再和arr[3]中存储的数据8比，17比8大，不用交换位置。</p><p>   ④仍然以arr[0]中存储的数据17为基准，再和arr[4]中存储的数据9比，17比9大，不用交换位置。</p><p>经过以上一轮比较，则把最大值17放在了第一位。</p><p>2.第二趟排序结果及其分析：</p><p>（1）结果：把第二个大的数据放在第二个位置上。第二趟排序的结果为[17,12,5,8,9]。</p><p>（2）关键代码：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(int <span class="built_in">i</span> = <span class="number">2</span>;<span class="built_in">i</span>&lt; arr.<span class="built_in">length</span>;<span class="built_in">i</span>++)&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[<span class="built_in">i</span>]&gt;arr[<span class="number">1</span>])&#123;</span><br><span class="line">int temp = arr[<span class="built_in">i</span>];</span><br><span class="line">arr[<span class="built_in">i</span>] = arr[<span class="number">1</span>];</span><br><span class="line">arr[<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（3）分析：</p><p>因为第一趟已经将最大值放在了首位置上，所以第二趟排序就不用去管arr[0]上存储的数据，以arr[1]为基准，从i=2开始依次遍历剩下的元素，如果有比arr[1]大的，就和arr[1]交换位置，比较过程如下：</p><p>   ①以arr[1]中存储的数据5为基准，先和arr[2]中存储的数据12比，12比5大，所以交换位置。</p><p>   ②此时以arr[1]中存储的数据12为基准，再和arr[3]中存储的数据8比，12比8大，不用交换位置。</p><p>   ④仍然以arr[1]中存储的数据12为基准，再和arr[4]中存储的数据9比，12比9大，不用交换位置。</p><p>经过以上一轮比较，则把第二大的数值12放在了第二个位置上。</p><p>3.第三趟排序结果及其分析</p><p>（1）结果：把第三个大的数据放在第三个位置上。第三趟排序的结果为[17,12,9,5,8]。</p><p>（2）关键代码：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(int <span class="built_in">i</span> = <span class="number">3</span>;<span class="built_in">i</span> &lt; arr.<span class="built_in">length</span>;<span class="built_in">i</span>++)&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[<span class="built_in">i</span>]&gt;arr[<span class="number">2</span>])&#123;</span><br><span class="line">int temp = arr[<span class="built_in">i</span>];</span><br><span class="line">arr[<span class="built_in">i</span>] = arr[<span class="number">2</span>];</span><br><span class="line">arr[<span class="number">2</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（3）分析：</p><p>因为第二趟已经将最大值放在了第二个位置上，所以第三趟排序就不用去管arr[1]上存储的数据，以arr[2]为基准，从i=3开始依次遍历剩下的元素，如果有比arr[2]大的，就和arr[2]交换位置，比较过程如下：</p><p>   ①以arr[2]中存储的数据5为基准，先和arr[3]中存储的数据8比，5比8小，所以需要交换位置。</p><p>   ②此时以arr[2]中存储的数据8为基准，再和arr[4]中存储的数据9比，8比9小，需要交换位置。</p><p>经过以上一轮比较，则把第三大的数值9放在了第三个位置上。</p><p>4.第四趟排序结果及其分析</p><p>（1）结果：把第四个大的数据放在第四个位置上。第四趟排序的结果为[17,12,9,8,5]。</p><p>（2）关键代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(int <span class="built_in">i</span> = <span class="number">4</span>;<span class="built_in">i</span> &lt; arr.<span class="built_in">length</span>;<span class="built_in">i</span>++)&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[<span class="built_in">i</span>]&gt;arr[<span class="number">3</span>])&#123;</span><br><span class="line">int temp = arr[<span class="built_in">i</span>];</span><br><span class="line">arr[<span class="built_in">i</span>] = arr[<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">3</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（3）分析：</p><p>因为第三趟已经将最大值放在了第三个位置上，所以第四趟排序就不用去管arr[2]上存储的数据，以arr[3]为基准，从i=4开始依次遍历剩下的元素，如果有比arr[3]大的，就和arr[3]交换位置，比较过程如下：</p><p>   ①以arr[3]中存储的数据5为基准，先和arr[4]中存储的数据8比，5比8小，所以需要交换位置。</p><p>经过以上一轮比较，则把第四大的数值8放在了第四个位置上。因为总共有5个数据，前四个已经按从大到小排序，所以最后一个数据的位置也定了下来。</p><h3 id="三-算法实现"><a href="#三-算法实现" class="headerlink" title="三.算法实现"></a>三.算法实现</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Demo5</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span> &#123;</span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">12</span>,<span class="number">5</span>,<span class="number">17</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;  <span class="comment">//对于5元素的数组，只需要找出4个最大值就可以排序了。</span></span><br><span class="line">selectSort(arr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span>(<span class="params"><span class="keyword">int</span>[] arr</span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; arr.length<span class="number">-1</span>;j++)&#123;  <span class="comment">//控制的是轮数。减1的原因是因为5个元素只需要   //找4个最大值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = j+<span class="number">1</span>;i &lt; arr.length;i++)&#123; <span class="comment">// 找出最大值</span></span><br><span class="line"><span class="keyword">if</span>(arr[i]&gt;arr[j])&#123;</span><br><span class="line"><span class="comment">//交换位置</span></span><br><span class="line"><span class="keyword">int</span> temp = arr[i];</span><br><span class="line">arr[i] = arr[j];</span><br><span class="line">arr[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历数组，查看效果</span></span><br><span class="line">System.<span class="keyword">out</span>.print(<span class="string">"目前的元素："</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt;arr.length  ;i++)&#123;</span><br><span class="line">System.<span class="keyword">out</span>.print(arr[i]+<span class="string">","</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java数据结构和算法（七）--链表</title>
      <link href="/2019/02/25/Java%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%EF%BC%88%E4%B8%83%EF%BC%89-%E9%93%BE%E8%A1%A8/"/>
      <url>/2019/02/25/Java%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%EF%BC%88%E4%B8%83%EF%BC%89-%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<center>单向链表的具体实现</center><a id="more"></a><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ys.datastructure;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> SingleLinkedList &#123;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">int</span> <span class="keyword">size</span>;<span class="comment">//链表节点的个数</span></span><br><span class="line">     <span class="keyword">private</span> Node head;<span class="comment">//头节点</span></span><br><span class="line">     </span><br><span class="line">     <span class="keyword">public</span> SingleLinkedList()&#123;</span><br><span class="line">         <span class="keyword">size</span> = <span class="number">0</span>;</span><br><span class="line">         head = <span class="keyword">null</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//链表的每个节点类</span></span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">class</span> Node&#123;</span><br><span class="line">         <span class="keyword">private</span> Object data;<span class="comment">//每个节点的数据</span></span><br><span class="line">         <span class="keyword">private</span> Node <span class="keyword">next</span>;<span class="comment">//每个节点指向下一个节点的连接</span></span><br><span class="line">         </span><br><span class="line">         <span class="keyword">public</span> Node(Object data)&#123;</span><br><span class="line">             <span class="keyword">this</span>.data = data;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//在链表头添加元素</span></span><br><span class="line">     <span class="keyword">public</span> Object addHead(Object obj)&#123;</span><br><span class="line">         Node newHead = <span class="keyword">new</span> Node(obj);</span><br><span class="line">         <span class="keyword">if</span>(<span class="keyword">size</span> == <span class="number">0</span>)&#123;</span><br><span class="line">             head = newHead;</span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             newHead.<span class="keyword">next</span> = head;</span><br><span class="line">             head = newHead;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">size</span>++;</span><br><span class="line">         <span class="keyword">return</span> obj;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//在链表头删除元素</span></span><br><span class="line">     <span class="keyword">public</span> Object deleteHead()&#123;</span><br><span class="line">         Object obj = head.data;</span><br><span class="line">         head = head.<span class="keyword">next</span>;</span><br><span class="line">         <span class="keyword">size</span>--;</span><br><span class="line">         <span class="keyword">return</span> obj;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//查找指定元素，找到了返回节点Node，找不到返回null</span></span><br><span class="line">     <span class="keyword">public</span> Node <span class="keyword">find</span>(Object obj)&#123;</span><br><span class="line">         Node current = head;</span><br><span class="line">         <span class="keyword">int</span> tempSize = <span class="keyword">size</span>;</span><br><span class="line">         <span class="keyword">while</span>(tempSize &gt; <span class="number">0</span>)&#123;</span><br><span class="line">             <span class="keyword">if</span>(obj.equals(current.data))&#123;</span><br><span class="line">                 <span class="keyword">return</span> current;</span><br><span class="line">             &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 current = current.<span class="keyword">next</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             tempSize--;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//删除指定的元素，删除成功返回true</span></span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="keyword">delete</span>(Object value)&#123;</span><br><span class="line">         <span class="keyword">if</span>(<span class="keyword">size</span> == <span class="number">0</span>)&#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         Node current = head;</span><br><span class="line">         Node <span class="keyword">previous</span> = head;</span><br><span class="line">         <span class="keyword">while</span>(current.data != value)&#123;</span><br><span class="line">             <span class="keyword">if</span>(current.<span class="keyword">next</span> == <span class="keyword">null</span>)&#123;</span><br><span class="line">                 <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">             &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="keyword">previous</span> = current;</span><br><span class="line">                 current = current.<span class="keyword">next</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//如果删除的节点是第一个节点</span></span><br><span class="line">         <span class="keyword">if</span>(current == head)&#123;</span><br><span class="line">             head = current.<span class="keyword">next</span>;</span><br><span class="line">             <span class="keyword">size</span>--;</span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;<span class="comment">//删除的节点不是第一个节点</span></span><br><span class="line">             <span class="keyword">previous</span>.<span class="keyword">next</span> = current.<span class="keyword">next</span>;</span><br><span class="line">             <span class="keyword">size</span>--;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//判断链表是否为空</span></span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">boolean</span> isEmpty()&#123;</span><br><span class="line">         <span class="keyword">return</span> (<span class="keyword">size</span> == <span class="number">0</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//显示节点信息</span></span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">void</span> display()&#123;</span><br><span class="line">         <span class="keyword">if</span>(<span class="keyword">size</span> &gt;<span class="number">0</span>)&#123;</span><br><span class="line">             Node node = head;</span><br><span class="line">             <span class="keyword">int</span> tempSize = <span class="keyword">size</span>;</span><br><span class="line">             <span class="keyword">if</span>(tempSize == <span class="number">1</span>)&#123;<span class="comment">//当前链表只有一个节点</span></span><br><span class="line">                 System.out.<span class="keyword">println</span>(<span class="string">"["</span>+node.data+<span class="string">"]"</span>);</span><br><span class="line">                 <span class="keyword">return</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">while</span>(tempSize&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                 <span class="keyword">if</span>(node.equals(head))&#123;</span><br><span class="line">                                      System.out.<span class="keyword">print</span>(<span class="string">"["</span>+node.data+<span class="string">"-&gt;"</span>);</span><br><span class="line">                 &#125;<span class="keyword">else</span> <span class="keyword">if</span>(node.<span class="keyword">next</span> == <span class="keyword">null</span>)&#123;</span><br><span class="line">                     System.out.<span class="keyword">print</span>(node.data+<span class="string">"]"</span>);</span><br><span class="line">                 &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                     System.out.<span class="keyword">print</span>(node.data+<span class="string">"-&gt;"</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 node = node.<span class="keyword">next</span>;</span><br><span class="line">                 tempSize--;</span><br><span class="line">             &#125;</span><br><span class="line">             System.out.<span class="keyword">println</span>();</span><br><span class="line">         &#125;<span class="keyword">else</span>&#123;<span class="comment">//如果链表一个节点都没有，直接打印[]</span></span><br><span class="line">             System.out.<span class="keyword">println</span>(<span class="string">"[]"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p> 　　测试：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> testSingleLinkedList()&#123;</span><br><span class="line">     SingleLinkedList singleList = <span class="keyword">new</span> SingleLinkedList();</span><br><span class="line">     singleList.addHead(<span class="string">"A"</span>);</span><br><span class="line">     singleList.addHead(<span class="string">"B"</span>);</span><br><span class="line">     singleList.addHead(<span class="string">"C"</span>);</span><br><span class="line">     singleList.addHead(<span class="string">"D"</span>);</span><br><span class="line">     <span class="comment">//打印当前链表信息</span></span><br><span class="line">     singleList.<span class="built_in">display</span>();</span><br><span class="line">     <span class="comment">//删除C</span></span><br><span class="line">     singleList.<span class="keyword">delete</span>(<span class="string">"C"</span>);</span><br><span class="line">     singleList.<span class="built_in">display</span>();</span><br><span class="line">     <span class="comment">//查找B</span></span><br><span class="line">     System.out.<span class="built_in">println</span>(singleList.<span class="built_in">find</span>(<span class="string">"B"</span>));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PreparedStatement实现增删查改</title>
      <link href="/2019/02/25/PreparedStatement%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9/"/>
      <url>/2019/02/25/PreparedStatement%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="1-插入数据"><a href="#1-插入数据" class="headerlink" title="1 插入数据"></a>1 插入数据</h3><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">ChaRu3</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag=<span class="keyword">true</span>;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps=<span class="keyword">null</span>;    <span class="comment">//创建PreparedStatement 对象</span></span><br><span class="line">        String sql= <span class="string">"insert into user (name,pwd) values(?,?)"</span>;  <span class="comment">//sql语句不再采用拼接方式，应用占位符问号的方式写sql语句。</span></span><br><span class="line">        conn=DBConnUtil.getConn();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">            ps=conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>, user.getName()); <span class="comment">//对占位符设置值，占位符顺序从1开始，第一个参数是占位符的位置，第二个参数是占位符的值。</span></span><br><span class="line">            ps.setString(<span class="number">2</span>, user.getPwd()); </span><br><span class="line"><span class="keyword">int</span> i=ps.executeUpdate();</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)&#123;</span><br><span class="line">                flag=<span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            DBConnUtil.closeAll(<span class="keyword">null</span>, ps, conn);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-修改数据"><a href="#2-修改数据" class="headerlink" title="2 修改数据"></a>2 修改数据</h3><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">XiuGai3</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag=<span class="keyword">true</span>;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps=<span class="keyword">null</span>;</span><br><span class="line">        String sql=<span class="string">"update user set pwd=? where name=?"</span>;</span><br><span class="line">        conn=DBConnUtil.getConn();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">            ps=conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>, user.getPwd());</span><br><span class="line">            ps.setString(<span class="number">2</span>, user.getName());</span><br><span class="line"><span class="keyword">int</span> i= ps.executeUpdate();</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)&#123;</span><br><span class="line">                flag=<span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            DBConnUtil.closeAll(<span class="keyword">null</span>, ps, conn);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-删除数据"><a href="#3-删除数据" class="headerlink" title="3 删除数据"></a>3 删除数据</h3><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">ShanChu3</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag=<span class="keyword">true</span>;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps=<span class="keyword">null</span>;</span><br><span class="line">        String sql=<span class="string">"delete from user where id=?"</span>;</span><br><span class="line">        conn=DBConnUtil.getConn();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">            ps=conn.prepareStatement(sql);</span><br><span class="line">            ps.setInt(<span class="number">1</span>, id);</span><br><span class="line"><span class="keyword">int</span> i=ps.executeUpdate();</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)&#123;</span><br><span class="line">                flag=<span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            DBConnUtil.closeAll(<span class="keyword">null</span>, ps, conn);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4-查看数据"><a href="#4-查看数据" class="headerlink" title="4 查看数据"></a>4 查看数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">List</span>&lt;User&gt; ChaKan3()&#123;</span><br><span class="line">         <span class="keyword">List</span>&lt;User&gt; <span class="keyword">list</span>= <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line">         Connection conn=<span class="keyword">null</span>;</span><br><span class="line">         PreparedStatement ps=<span class="keyword">null</span>;</span><br><span class="line">         ResultSet rs=<span class="keyword">null</span>;</span><br><span class="line">         String sql=<span class="string">"select * from user"</span>;</span><br><span class="line">         conn=DBConnUtil.getConn();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">               ps=conn.prepareStatement(sql);</span><br><span class="line">             rs=ps.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                User user= <span class="keyword">new</span> User();</span><br><span class="line">                user.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">                <span class="keyword">list</span>.add(user);</span><br><span class="line">             &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            DBConnUtil.closeAll(rs, ps, conn);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">list</span>;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><hr><p><em><a href="https://blog.csdn.net/superit401/article/details/49999163" target="_blank" rel="noopener">https://blog.csdn.net/superit401/article/details/49999163</a></em></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySql的基础语句（增删查改）</title>
      <link href="/2019/02/25/MySql%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E5%8F%A5%EF%BC%88%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%EF%BC%89/"/>
      <url>/2019/02/25/MySql%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E5%8F%A5%EF%BC%88%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="1-数据库驱动：Driver"><a href="#1-数据库驱动：Driver" class="headerlink" title="1.数据库驱动：Driver"></a>1.数据库驱动：Driver</h3><p>加载mysql驱动：Class.forName(“com.mysql.jdbc.Driver”);</p><p>加载oracle驱动：Class.forName(“oracle.jdbc.driver.OracleDriver”);</p><p>加载相应的驱动需要导入相应的包，如MySQL则需要导入：mysql-connector-java-5.1.13-bin.jar</p><p>否则无法正常执行。</p><h3 id="2-获取数据库链接：Connection"><a href="#2-获取数据库链接：Connection" class="headerlink" title="2.获取数据库链接：Connection"></a>2.获取数据库链接：Connection</h3><p>Connetion类主要用来链接数据库，常通过DriverManager.getConnection()来获取一个连接对象。<br>这里有3个参数，分别是url，user，passwrod。对应的是要链接的数据库，用户名，密码等。如：<br>url=jdbc:mysql://localhost:3306/jdbc?useUnicode=true&amp;characterEncoding=utf-8<br>user=root<br>password=root</p><h3 id="3-执行sql语句：Statement"><a href="#3-执行sql语句：Statement" class="headerlink" title="3.执行sql语句：Statement"></a>3.执行sql语句：Statement</h3><p>Statement对象用于执行sql语句，有以下3种：</p><p>（1）Statement对象用于执行不带参数的简单的SQL语句；</p><p>（2）PerparedStatement对象用于执行带或不带参数的预编译SQL语句；</p><p>（3）CallableStatement对象用于执行对数据库已存储过程的调用；</p><p>   Statement的常用方法：</p><p>（1）executeQuery()方法：运行查询语句，返回ReaultSet对象。</p><p>（2）executeUpdata()方法：运行增，删，改操作，返回更新的行数。</p><p>（3）addBatch(String sql) ：把多条sql语句放到一个批处理中。</p><p>（4）executeBatch()：向数据库发送一批sql语句执行。</p><h3 id="4-结果集：ResultSet"><a href="#4-结果集：ResultSet" class="headerlink" title="4.结果集：ResultSet"></a>4.结果集：ResultSet</h3><p>执行executeQuery()方法后返回的结果集</p><p>  常用方法：<br>（1）getString(String columnName)：获得当前行的某一string类型的字段<br>（2）getFloat(String columnName)：获得当前行的某一string类型的字段<br>（3）getDate(String columnName)：获得当前行的某一date类型的字段<br>（4）getBoolean(String columnName)：获得在当前行的某一Boolean类型的字段<br>（5）getObject(String columnName)：获取当前行的某一任意类型的字段<br>（6）next()：移动到下一行</p><h3 id="实际代码"><a href="#实际代码" class="headerlink" title="实际代码"></a>实际代码</h3><p>首先建立一个配置文件，内容如下：</p><p> #数据库驱动<br>driver=com.mysql.jdbc.Driver</p><p>#连接数据库的URL<br>url=jdbc:mysql://localhost:3306/jdbc?useUnicode=true&amp;characterEncoding=utf-8</p><p>#用户名<br>user=root</p><p>#密码<br>password=root<br>接着写一个连接数据库的通用工具类：<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> driver;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> url;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> user;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//读取配置文件</span></span><br><span class="line">InputStream <span class="keyword">in</span> = DBUtil.class.getResourceAsStream(<span class="string">"db.properties"</span>);</span><br><span class="line">Properties properties = <span class="keyword">new</span> <span class="type">Properties</span>();</span><br><span class="line"><span class="comment">//加载配置文件</span></span><br><span class="line">properties.load(<span class="keyword">in</span>);</span><br><span class="line"><span class="comment">//获取配置文件中的数据</span></span><br><span class="line">driver = properties.getProperty(<span class="string">"driver"</span>);</span><br><span class="line">url = properties.getProperty(<span class="string">"url"</span>);</span><br><span class="line">user = properties.getProperty(<span class="string">"user"</span>);</span><br><span class="line">password = properties.getProperty(<span class="string">"password"</span>);</span><br><span class="line"><span class="comment">//加载数据库链接驱动</span></span><br><span class="line">Class.forName(driver);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取一个数据库链接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Connection getConnection() throws SQLException&#123;</span><br><span class="line"><span class="keyword">return</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>实现简单的增删改查：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> class jdbcTest &#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> createTable() <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line"><span class="keyword">String</span> sql = <span class="string">"CREATE TABLE IF NOT EXISTS `user`("</span></span><br><span class="line">     +<span class="string">"`id` INT UNSIGNED AUTO_INCREMENT,"</span></span><br><span class="line">   +<span class="string">" `user_name` VARCHAR(100),"</span></span><br><span class="line">   +<span class="string">" `user_password` VARCHAR(100),"</span></span><br><span class="line">   +<span class="string">" `user_age` INT(11),"</span></span><br><span class="line">   +<span class="string">"PRIMARY KEY ( `id` )"</span></span><br><span class="line">   +<span class="string">")ENGINE=InnoDB DEFAULT CHARSET=utf8;"</span>;</span><br><span class="line">Connection conn = DBUtil.getConnection();</span><br><span class="line"><span class="comment">//开启事务</span></span><br><span class="line">conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">PreparedStatement preparedStatement = conn.prepareStatement(sql);</span><br><span class="line">preparedStatement.executeUpdate();</span><br><span class="line"><span class="comment">//提交事务</span></span><br><span class="line">conn.commit();</span><br><span class="line"><span class="comment">//要注意关闭连接（在实际中最好不要像这样关闭，最好标准一点）</span></span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 增加数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="built_in">add</span>() <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line"><span class="keyword">String</span> sql = <span class="string">"INSERT INTO USER (user_name,user_password,user_age) VALUES('老王','123456',18)"</span>;</span><br><span class="line">Connection conn = DBUtil.getConnection();</span><br><span class="line">conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">PreparedStatement preparedStatement = conn.prepareStatement(sql);</span><br><span class="line">preparedStatement.executeUpdate();</span><br><span class="line">conn.commit();</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> delete() <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line"><span class="keyword">String</span> sql = <span class="string">"DELETE FROM USER WHERE USER.user_name = '老王'"</span>;</span><br><span class="line">Connection conn = DBUtil.getConnection();</span><br><span class="line">conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">PreparedStatement preparedStatement = conn.prepareStatement(sql);</span><br><span class="line">preparedStatement.executeUpdate();</span><br><span class="line">conn.commit();</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> updata() <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line"><span class="keyword">String</span> sql = <span class="string">"UPDATE USER SET USER.user_name = '老李'"</span>;</span><br><span class="line">Connection conn = DBUtil.getConnection();</span><br><span class="line">conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">PreparedStatement preparedStatement = conn.prepareStatement(sql);</span><br><span class="line">preparedStatement.executeUpdate();</span><br><span class="line">conn.commit();</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查找数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> query() <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line"><span class="keyword">String</span> sql = <span class="string">"SELECT * FROM USER"</span>;</span><br><span class="line">Connection conn = DBUtil.getConnection();</span><br><span class="line">conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">PreparedStatement preparedStatement = conn.prepareStatement(sql);</span><br><span class="line"><span class="comment">//执行查询语句并返回结果集</span></span><br><span class="line">ResultSet resultSet = preparedStatement.executeQuery();</span><br><span class="line"><span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line"><span class="comment">//注意：这里要与数据库里的字段对应</span></span><br><span class="line"><span class="keyword">String</span> username = resultSet.getString(<span class="string">"user_name"</span>);</span><br><span class="line"><span class="keyword">String</span> password = resultSet.getString(<span class="string">"user_password"</span>);</span><br><span class="line"><span class="keyword">String</span> age = resultSet.getString(<span class="string">"user_age"</span>);</span><br><span class="line">System.out.<span class="built_in">println</span>(username + <span class="string">" "</span> + password + <span class="string">" "</span> + age);</span><br><span class="line">&#125;</span><br><span class="line">conn.commit();</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql连接问题</title>
      <link href="/2019/02/24/mysql%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98/"/>
      <url>/2019/02/24/mysql%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<center>MySQL安装问题–Can’t connect to MySQL server on localhost (10061)解决方法</center><p>有时候安装mysql后使用mysql命令时报错 Can’t connect to MySQL server on localhost (10061)，或者用net start mysql 时报服务名无效，一般是因为mysql服务没有启动。</p><p><img src="https://i.loli.net/2019/02/24/5c727c3c58c93.png" alt="01.png"></p><p>这时候可以用管理身份运行cmd.exe(注意必须是管理员身份运行),否则会报Install/Remove of the Service Denied! 可以在下图路径中找到cmd.exe，右键用管理员身份运行。</p><p><img src="https://i.loli.net/2019/02/24/5c727c3c626ad.png" alt="02.png"></p><p>然后将mysql加入到Windows的服务中。切换到mysql安装目录下的bin文件夹，命令行运行”mysqld –install”。</p><p>C:\Program Files\MySQL\MySQL Server 5.6\bin&gt;mysqld –install<br>此时使用“net start mysql”成功启动msyql，一般就可以正常启动mysql了</p><hr><center>修改密码</center><p>ALTER USER “root”@”localhost” IDENTIFIED  BY “你的新密码”;</p><p> 注意：重点啊，如果你没有设置认证方式，默认的密码加密方式是：caching_sha2_password，而现在很多客户端工具还不支持这种加密认证方式，连接测试的时候就会报错：client does not support  authentication protocol requested by server; consider upgrading MySQL client，这里的错误信息就是不支持身份认证方式，没关系，去my.ini里面在[mysqld]下面加上这句话即可：</p><p>default_authentication_plugin=mysql_native_password</p><hr><p><center>Navicat连接数据库MySQL报错2059</center><br>解释原因：据说，mysql8 之前的版本中加密规则是mysql_native_password,而在mysql8之后,加密规则是caching_sha2_password, 解决问题方法有两种,一种是升级navicat驱动,一种是把mysql用户登录密码加密规则还原成mysql_native_password. 现在说第二种方式<br>命令行进入MySQL数据库<br>输入以下指令，逐行输入，每行后加一个回车</p><pre><code>ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos; PASSWORD EXPIRE NEVER; #修改加密规则 ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;password&apos;; #更新一下用户的密码 FLUSH PRIVILEGES; #刷新权限</code></pre><p>就像这样<br><img src="https://i.loli.net/2019/02/24/5c727d403bb1d.png" alt="03.png"></p><p>5.然后按理说应该是可以了</p><p>6.Tips：命令行中用的“password”即为更新后的数据库密码，可改为自己想设置的密码，比如“123”什么的，之后再用Navicat连接MySQL就连接成功了</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java_MySql</title>
      <link href="/2019/02/24/java-MySql/"/>
      <url>/2019/02/24/java-MySql/</url>
      
        <content type="html"><![CDATA[<p>加载驱动：</p><ol><li>在工程目录中创建lib文件夹，将下载好的JDBC放到该文件夹下，如下图所示：<br><img src="https://i.loli.net/2019/02/24/5c7188ba0753e.png" alt="001.png"></li></ol><p>　　</p><ol start="2"><li>右键工程名，在java build path中的Libraries分页中选择Add JARs…，选择刚才添加的JDBC，如下图：</li></ol><p>　　<img src="https://i.loli.net/2019/02/24/5c7188ba4c674.png" alt="002.png"></p><p>数据包准备：</p><p>　　在数据库sqltestdb中创建如下数据表emp:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp(</span><br><span class="line">   empno            <span class="built_in">INT</span>(<span class="number">4</span>)          PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">   ename            <span class="built_in">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">   job              <span class="built_in">VARCHAR</span>(<span class="number">9</span>),</span><br><span class="line">   hiredate         <span class="built_in">DATE</span>,</span><br><span class="line">   sal              <span class="built_in">FLOAT</span>(<span class="number">7</span>,<span class="number">2</span>)</span><br><span class="line">) ;</span><br></pre></td></tr></table></figure><p>　　添加数据：</p><p>　　<img src="https://i.loli.net/2019/02/24/5c7188ba1faa2.png" alt="003.png"></p><p>连接数据库并读取数据：</p><p>　　数据库名称：sqltestdb</p><p>　　数据包名称：emp</p><p>　　端口号：3306</p><p>　　用户名：root</p><p>　　密码：root</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sqldemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> class main &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">        <span class="comment">//声明Connection对象</span></span><br><span class="line">        Connection con;</span><br><span class="line">        <span class="comment">//驱动程序名</span></span><br><span class="line">        <span class="keyword">String</span> driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line">        <span class="comment">//URL指向要访问的数据库名mydata</span></span><br><span class="line">        <span class="keyword">String</span> url = <span class="string">"jdbc:mysql://localhost:3306/sqltestdb"</span>;</span><br><span class="line">        <span class="comment">//MySQL配置时的用户名</span></span><br><span class="line">        <span class="keyword">String</span> user = <span class="string">"root"</span>;</span><br><span class="line">        <span class="comment">//MySQL配置时的密码</span></span><br><span class="line">        <span class="keyword">String</span> password = <span class="string">"123456"</span>;</span><br><span class="line">        <span class="comment">//遍历查询结果集</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//加载驱动程序</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            <span class="comment">//1.getConnection()方法，连接MySQL数据库！！</span></span><br><span class="line">            con = DriverManager.getConnection(url,user,password);</span><br><span class="line">            <span class="keyword">if</span>(!con.isClosed())</span><br><span class="line">                System.out.<span class="built_in">println</span>(<span class="string">"Succeeded connecting to the Database!"</span>);</span><br><span class="line">            <span class="comment">//2.创建statement类对象，用来执行SQL语句！！</span></span><br><span class="line">            Statement statement = con.createStatement();</span><br><span class="line">            <span class="comment">//要执行的SQL语句</span></span><br><span class="line">            <span class="keyword">String</span> sql = <span class="string">"select * from emp"</span>;</span><br><span class="line">            <span class="comment">//3.ResultSet类，用来存放获取的结果集！！</span></span><br><span class="line">            ResultSet rs = statement.executeQuery(sql);</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"执行结果如下所示:"</span>);  </span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);  </span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"姓名"</span> + <span class="string">"\t"</span> + <span class="string">"职称"</span>);  </span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);  </span><br><span class="line">             </span><br><span class="line">            <span class="keyword">String</span> job = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">String</span> id = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                <span class="comment">//获取stuname这列数据</span></span><br><span class="line">                job = rs.getString(<span class="string">"job"</span>);</span><br><span class="line">                <span class="comment">//获取stuid这列数据</span></span><br><span class="line">                id = rs.getString(<span class="string">"ename"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//输出结果</span></span><br><span class="line">                System.out.<span class="built_in">println</span>(id + <span class="string">"\t"</span> + job);</span><br><span class="line">            &#125;</span><br><span class="line">            rs.close();</span><br><span class="line">            con.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span>(ClassNotFoundException e) &#123;   </span><br><span class="line">            <span class="comment">//数据库驱动类异常处理</span></span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"Sorry,can`t find the Driver!"</span>);   </span><br><span class="line">            e.printStackTrace();   </span><br><span class="line">            &#125; <span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">            <span class="comment">//数据库连接失败异常处理</span></span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"数据库数据成功获取！！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　运行结果：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Succeeded connecting to the Database!</span><br><span class="line">-----------------</span><br><span class="line">执行结果如下所示:</span><br><span class="line">-----------------</span><br><span class="line">姓名  职称</span><br><span class="line">-----------------</span><br><span class="line">李兴华 经理</span><br><span class="line">张三  总监</span><br><span class="line">王五  厂长</span><br><span class="line">齐秦  书记</span><br><span class="line">张刚  组长</span><br><span class="line">曹操  财务</span><br><span class="line">李四  总裁</span><br><span class="line">数据库数据成功获取！！</span><br><span class="line">增加、删除和修改数据：</span><br></pre></td></tr></table></figure><p>　　增加数据：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">String</span> name;</span><br><span class="line"><span class="keyword">String</span> id;</span><br><span class="line">  </span><br><span class="line">PreparedStatement psql;</span><br><span class="line">ResultSet res;</span><br><span class="line"><span class="comment">//预处理添加数据，其中有两个参数--“？”</span></span><br><span class="line">psql = <span class="built_in">con</span>.prepareStatement(<span class="string">"insert into emp (empno,ename,job,hiredate,sal) "</span></span><br><span class="line">        + <span class="string">"values(?,?,?,?,?)"</span>);</span><br><span class="line">psql.setInt(<span class="number">1</span>, <span class="number">3212</span>);              <span class="comment">//设置参数1，创建id为3212的数据</span></span><br><span class="line">psql.setString(<span class="number">2</span>, <span class="string">"王刚"</span>);      <span class="comment">//设置参数2，name 为王刚</span></span><br><span class="line">psql.setString(<span class="number">3</span>, <span class="string">"总裁"</span>);</span><br><span class="line"> </span><br><span class="line">DateFormat dateFormat2 = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line"><span class="built_in">Date</span> myDate2 = dateFormat2.<span class="built_in">parse</span>(<span class="string">"2010-09-13"</span>);</span><br><span class="line">psql.setDate(<span class="number">4</span>,<span class="keyword">new</span> java.sql.<span class="built_in">Date</span>(myDate2.getTime()));</span><br><span class="line">psql.setFloat(<span class="number">5</span>, (float) <span class="number">2000.3</span>);</span><br><span class="line">psql.executeUpdate();           <span class="comment">//执行更新</span></span><br></pre></td></tr></table></figure><p>　　运行结果：</p><p>　　<img src="https://i.loli.net/2019/02/24/5c7188ba33657.png" alt="004.png"></p><p>　　更新数据：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">　PreparedStatement psql;</span><br><span class="line"><span class="comment">//预处理更新（修改）数据，将王刚的sal改为5000.0</span></span><br><span class="line">psql = con.prepareStatement(<span class="string">"update emp set sal = ? where ename = ?"</span>);</span><br><span class="line">psql.setFloat(<span class="number">1</span>,(<span class="type">float</span>) <span class="number">5000.0</span>);      </span><br><span class="line">psql.setString(<span class="number">2</span>,<span class="string">"王刚"</span>);             </span><br><span class="line">psql.executeUpdate();</span><br></pre></td></tr></table></figure><p>　　更改结果：</p><p>　　<img src="https://i.loli.net/2019/02/24/5c7188ba337f3.png" alt="005.png"></p><p>　　删除数据：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PreparedStatement psql;</span><br><span class="line"><span class="comment">//预处理删除数据</span></span><br><span class="line">psql = <span class="built_in">con</span>.prepareStatement(<span class="string">"delete from emp where sal &gt; ?"</span>);</span><br><span class="line">psql.setFloat(<span class="number">1</span>, <span class="number">4500</span>);</span><br><span class="line">psql.executeUpdate();</span><br><span class="line">psql.<span class="built_in">close</span>();</span><br></pre></td></tr></table></figure><p>　　删除结果：</p><p><img src="https://i.loli.net/2019/02/24/5c7188ba3364f.png" alt="006.png"></p><hr><p>出现的问题：</p><p>在我们使用连接MySQL数据库时会出现这样的提示：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Tue Aug <span class="number">29</span> <span class="number">13</span>:<span class="number">24</span>:<span class="number">29</span> CST <span class="number">2017</span> WARN: Establishing SSL connection <span class="keyword">without</span> server's </span><br><span class="line">identity verification <span class="keyword">is</span> <span class="keyword">not</span> recommended. According <span class="keyword">to</span> MySQL <span class="number">5.5</span><span class="number">.45</span>+, <span class="number">5.6</span><span class="number">.26</span>+ <span class="keyword">and</span> </span><br><span class="line"><span class="number">5.7</span><span class="number">.6</span>+ requirements SSL connection must be established <span class="keyword">by</span> default <span class="keyword">if</span> explicit option </span><br><span class="line"><span class="keyword">isn't</span> <span class="keyword">set</span>. For compliance <span class="keyword">with</span> existing applications <span class="keyword">not</span> using SSL <span class="keyword">the</span> </span><br><span class="line">verifyServerCertificate <span class="keyword">property</span> <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> '<span class="literal">false</span>'. You need either <span class="keyword">to</span> explicitly</span><br><span class="line"> disable SSL <span class="keyword">by</span> setting useSSL=<span class="literal">false</span>, <span class="keyword">or</span> <span class="keyword">set</span> useSSL=<span class="literal">true</span> <span class="keyword">and</span> provide truststore <span class="keyword">for</span></span><br><span class="line"> server certificate verification.</span><br></pre></td></tr></table></figure></p><p>翻译如下：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不推荐服务器身份验证，不需要建立SSL连接。根据MySQL <span class="number">5.5</span><span class="number">.45</span> +，+，+ <span class="number">5.6</span><span class="number">.26</span> <span class="number">5.7</span><span class="number">.6</span>要求SSL连接必须建</span><br><span class="line">立明确的选项默认情况下如果不设置。符合现有的应用程序不使用SSL的verifyservercertificate属性设置</span><br><span class="line">为“false”。你需要显式禁用SSL设置usessl = false，或设置usessl =真实提供服务器证书验证信任库</span><br></pre></td></tr></table></figure><p>由此可见解决方案如下<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在URL加入useSSL=<span class="keyword">true</span>或者<span class="keyword">false</span>即可，如下所示<span class="symbol">:</span></span><br><span class="line"></span><br><span class="line">/<span class="regexp">/原先报错程序</span></span><br><span class="line"><span class="regexp">Connection conn = DriverManager.getConnection("jdbc:mysql:/</span><span class="regexp">/localhost:3306/scott</span>,<span class="string">"root"</span>, <span class="string">"123456"</span>);</span><br><span class="line">/<span class="regexp">/更改后正确程序</span></span><br><span class="line"><span class="regexp">Connection conn = DriverManager.getConnection("jdbc:mysql:/</span><span class="regexp">/localhost:3306/scott</span>?useSSL=<span class="keyword">false</span><span class="string">", "</span>root<span class="string">", "</span><span class="number">123456</span><span class="string">");</span></span><br><span class="line"><span class="string">//也可以使用如下</span></span><br><span class="line"><span class="string">Connection conn = DriverManager.getConnection("</span><span class="symbol">jdbc:</span><span class="symbol">mysql:</span>/<span class="regexp">/localhost:3306/scott</span>?useUnicode=<span class="keyword">true</span>&amp;characterEncoding=utf-<span class="number">8</span>&amp;useSSL=<span class="keyword">false</span><span class="string">", "</span>root<span class="string">", "</span><span class="number">123456</span><span class="string">");</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>centos7修改系统语言为简体中文</title>
      <link href="/2019/02/23/centos7%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E8%AF%AD%E8%A8%80%E4%B8%BA%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87/"/>
      <url>/2019/02/23/centos7%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E8%AF%AD%E8%A8%80%E4%B8%BA%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p>说明<br>自己装系统时一般都可以自定义选择系统语言。可是云端服务器一般都是安装好的镜像，默认系统语言为英文，对于初学者可能还会有搞不懂的计算机词汇。这里简单说一下centos7怎么修改系统语言为中文。</p><p>修改centos7系统语言<br>查看系当前语言包<br>locale<br>查看系统拥有语言包<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">locale -a</span></span><br></pre></td></tr></table></figure></p><p>（zh_CN.UTF-8是简体中文，如果没有zh_CN.UTF-8,就安装语言包，如果存在可以直接设置)</p><p>安装简体中文语言包<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> kde-l10n-Chinese</span><br></pre></td></tr></table></figure></p><p>设置为中文<br>临时修改，重启服务器之后就会还原之前的设置<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LANG=<span class="string">"zh_CN.UTF-8"</span>    <span class="comment">#修改为中文</span></span><br><span class="line">LANG=<span class="string">"en_US.UTF-8"</span>    <span class="comment">#修改为英文</span></span><br></pre></td></tr></table></figure></p><p>永久修改就要把配置写入文件里面<br>方法（一）<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/locale.conf</span><br><span class="line"><span class="comment">##加下面内容到第一行，设置中文</span></span><br><span class="line">LANG=zh_CN.UTF8</span><br></pre></td></tr></table></figure></p><p>方法（二）第二种方法使用方便<br><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">localectl </span> <span class="built_in">set-locale</span> <span class="string">LANG=</span><span class="string">zh_CN.</span><span class="string">UTF8</span></span><br></pre></td></tr></table></figure></p><p>其他<br>修改时区为亚洲上海<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf <span class="regexp">/usr/</span>share<span class="regexp">/zoneinfo/</span>Asia<span class="regexp">/Shanghai /</span>etc<span class="regexp">/localtime</span></span><br></pre></td></tr></table></figure></p><p>查看ip时bash: ifconfig: command not found 解决办法<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools      ##一般是没有安装这个</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Navicat远程连接腾讯云MySQL数据库</title>
      <link href="/2019/02/22/Navicat%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%85%BE%E8%AE%AF%E4%BA%91MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/02/22/Navicat%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E8%85%BE%E8%AE%AF%E4%BA%91MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>原因<br>默认情况下，mysql帐号不允许从远程登陆，只能在localhost登录，若想远程连接云服务器，需要进行授权。</p><p>方法步骤：<br>一、远程登录授权<br>授予全部权限 给 所有库的所有表 用户名为root 密码为123456<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; grant <span class="literal">all</span> privileges <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'root'</span>@<span class="string">'%'</span> identified <span class="keyword">by</span> <span class="string">'123456'</span> <span class="keyword">with</span> grant option;</span><br><span class="line">mysql &gt; grant <span class="literal">all</span> privileges <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'root'</span>@<span class="string">'%'</span> identified <span class="keyword">by</span> <span class="string">'123456'</span> <span class="keyword">with</span> grant option;</span><br></pre></td></tr></table></figure></p><p>刷新MySQL的系统权限相关表，在不重启MySQL服务的情况下直接生效<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;flush privileges<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>查看修改权限后的user表 ，有host为%，user为root，表示修改成功。<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">select</span> host,<span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure></p><p>二、 解绑3306端口绑定的IP地址<br>查看3306端口是否状态<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -an <span class="string">| grep 3306</span></span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tcp6</span>        0      0 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:3306</span>          0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span>:*               <span class="selector-tag">LISTEN</span></span><br></pre></td></tr></table></figure><p>显示3306端口绑定的IP地址是本地的127.0.0.1，需要解绑</p><p>修改Mysql配置文件<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mysql/mysql<span class="selector-class">.conf</span><span class="selector-class">.d</span>/mysqld.cnf</span><br></pre></td></tr></table></figure></p><p>找到bind-address = 127.0.0.1，在前面加上#， 注释该行<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#bind-address = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></p><p>重启Mysql让配置文件生效<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/mysql restart</span></span><br></pre></td></tr></table></figure></p><p>再看3306端口状态<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an <span class="string">| grep 3306</span></span><br></pre></td></tr></table></figure></p><p>显示如下，表明解绑成功<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp6       <span class="number">0</span>      <span class="number">0</span> ::<span class="symbol">:</span><span class="number">3306</span>                 ::<span class="symbol">:*</span>                    LISTEN</span><br></pre></td></tr></table></figure></p><p>三、设置腾讯云安全组规则<br>打开腾讯云“安全组”<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>console.cloud.tencent.com<span class="regexp">/cvm/</span>securitygroup</span><br></pre></td></tr></table></figure></p><p>点击新建，出于安全考虑，选择开放部分端口或自定义<br>入站规则 - 添加规则，输入如下值<br><img src="https://i.loli.net/2019/02/22/5c6fe02ca33d1.png" alt="05.png"></p><p>四、登录navicat<br>在navicat或其他MySQL数据库管理工具登录，即可成功连接云服务器的数据库</p><hr><p><em><a href="https://blog.csdn.net/weixin_41471128/article/details/83189083" target="_blank" rel="noopener">https://blog.csdn.net/weixin_41471128/article/details/83189083</a></em></p>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos7.3 安装Mysql5.7并修改初始密码</title>
      <link href="/2019/02/22/Centos7-3-%E5%AE%89%E8%A3%85Mysql5-7%E5%B9%B6%E4%BF%AE%E6%94%B9%E5%88%9D%E5%A7%8B%E5%AF%86%E7%A0%81/"/>
      <url>/2019/02/22/Centos7-3-%E5%AE%89%E8%A3%85Mysql5-7%E5%B9%B6%E4%BF%AE%E6%94%B9%E5%88%9D%E5%A7%8B%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>1、官方安装文档<br><a href="http://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/" target="_blank" rel="noopener">http://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/</a></p><p>2、下载 Mysql yum包<br><a href="http://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">http://dev.mysql.com/downloads/repo/yum/</a></p><p><img src="https://i.loli.net/2019/02/22/5c6fd7967d767.png" alt="01.png"></p><p>下载到本地再上传到服务器，或者使用wget 直接下载</p><p>wget <a href="http://repo.mysql.com/mysql57-community-release-el7-10.noarch.rpm" target="_blank" rel="noopener">http://repo.mysql.com/mysql57-community-release-el7-10.noarch.rpm</a></p><p>3、安转软件源<br>将platform-and-version-specific-package-name 替换为你下载的rpm名</p><p>sudo rpm -Uvh platform-and-version-specific-package-name.rpm</p><p>例如</p><p>rpm -Uvh mysql57-community-release-el7-10.noarch.rpm</p><p><img src="https://i.loli.net/2019/02/22/5c6fd796706f6.png" alt="02.png"></p><p>4、安装mysql服务端<br> yum install  -y  mysql-community-server</p><p>如果网络环境不是很好，执行完命令就可以去泡杯茶��或者荣耀杀一局</p><p>5、启动mysql<br>service mysqld start</p><p>systemctl start mysqld.service</p><p>6、检查mysql 的运行状态<br>service mysqld status</p><p>systemctl status mysqld.service</p><p>7、修改临时密码<br>Mysql5.7默认安装之后root是有密码的。</p><p>7.1 获取MySQL的临时密码</p><p>为了加强安全性，MySQL5.7为root用户随机生成了一个密码，在error log中，关于error log的位置，如果安装的是RPM包，则默认是/var/log/mysqld.log。<br>只有启动过一次mysql才可以查看临时密码</p><p>grep ‘temporary password’ /var/log/mysqld.log</p><p> <img src="https://i.loli.net/2019/02/22/5c6fd79603edf.png" alt="03.png"></p><p>这里的密码是YdsGaxOq&gt;2n!</p><p>7.2 登陆并修改密码<br>使用默认的密码登陆</p><p>mysql -uroot -p</p><p>用该密码登录到服务端后，必须马上修改密码，不然会报如下错误：</p><p>mysql&gt; select @@log_error;<br>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.<br>mysql&gt;<br>修改密码</p><p>ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘root123’;</p><p>如果密码设置太简单出现以下的提示</p><p><img src="https://i.loli.net/2019/02/22/5c6fd796070d2.png" alt="04.png"></p><p>如何解决ERROR 1819 (HY000): Your password does not satisfy the current policy requirements呢？ 这里直接提供解决方案文末有详细的说明</p><p>必须修改两个全局参数：<br>首先，修改validate_password_policy参数的值</p><p>mysql&gt; set global validate_password_policy=0; </p><p>再修改密码的长度</p><p>set global validate_password_length=1;</p><p>再次执行修改密码就可以了</p><p>ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘root123’;</p><p>8、授权其他机器登陆<br>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘mypassword’ WITH GRANT OPTION;</p><p>FLUSH  PRIVILEGES;</p><p>9、关于密码设置的详细说明</p><h2 id="ERROR-1819-HY000-Your-password-does-not-satisfy-the-current-policy-requirements"><a href="#ERROR-1819-HY000-Your-password-does-not-satisfy-the-current-policy-requirements" class="headerlink" title="ERROR 1819 (HY000): Your password does not satisfy the current policy requirements"></a>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</h2><p><em><a href="https://blog.csdn.net/zyw_java/article/details/70949596" target="_blank" rel="noopener">https://blog.csdn.net/zyw_java/article/details/70949596</a></em></p>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7.4 使用yum源安装MySQL 5.7.21</title>
      <link href="/2019/02/22/CentOS-7-4-%E4%BD%BF%E7%94%A8yum%E6%BA%90%E5%AE%89%E8%A3%85MySQL-5-7-21/"/>
      <url>/2019/02/22/CentOS-7-4-%E4%BD%BF%E7%94%A8yum%E6%BA%90%E5%AE%89%E8%A3%85MySQL-5-7-21/</url>
      
        <content type="html"><![CDATA[<p>从CentOS 7.0发布以来，yum源中开始使用mariadb来代替MySQL的安装。即使你输入的是yum install mysql , 显示的也是mariadb的安装内容。</p><p>输入yum install mysql-server，提示yum没有可用的安装包。</p><p>因此，如果使用yum安装MySQL的话，就需要去下载官方指定的yum源。</p><p>网址为： <a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/repo/yum/</a></p><p>先卸载mariadb。</p><p>检查mariadb是否已安装<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># yum list installed | grep mariadb</span></span><br><span class="line">mariadb-libs.x86_64                    <span class="number">1</span><span class="symbol">:</span><span class="number">5.5</span>.<span class="number">56</span>-<span class="number">2</span>.el7                  <span class="variable">@anaconda</span></span><br><span class="line">全部卸载</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># yum -y remove mariadb*</span></span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line">正在解决依赖关系</span><br><span class="line">--&gt; 正在检查事务</span><br><span class="line">---&gt; 软件包 mariadb-libs.x86_64.<span class="number">1.5</span>.<span class="number">5.56</span>-<span class="number">2</span>.el7 将被 删除</span><br><span class="line">--&gt; 正在处理依赖关系 libmysqlclient.so.<span class="number">18</span>()(<span class="number">64</span>bit)，它被软件包 <span class="number">2</span><span class="symbol">:postfix-</span><span class="number">2.10</span>.<span class="number">1</span>-<span class="number">6</span>.el7.x86_64 需要</span><br><span class="line">--&gt; 正在处理依赖关系 libmysqlclient.so.<span class="number">18</span>(libmysqlclient_18)(<span class="number">64</span>bit)，它被软件包 <span class="number">2</span><span class="symbol">:postfix-</span><span class="number">2.10</span>.<span class="number">1</span>-<span class="number">6</span>.el7.x86_64 需要</span><br><span class="line">--&gt; 正在检查事务</span><br><span class="line">---&gt; 软件包 postfix.x86_64.<span class="number">2.2</span>.<span class="number">10.1</span>-<span class="number">6</span>.el7 将被 删除</span><br><span class="line">--&gt; 解决依赖关系完成</span><br><span class="line"></span><br><span class="line">依赖关系解决</span><br><span class="line"></span><br><span class="line">====================================================================================================</span><br><span class="line"> Package                  架构               版本                       源                     大小</span><br><span class="line">====================================================================================================</span><br><span class="line">正在删除<span class="symbol">:</span></span><br><span class="line"> mariadb-libs             x86_64             <span class="number">1</span><span class="symbol">:</span><span class="number">5.5</span>.<span class="number">56</span>-<span class="number">2</span>.el7             <span class="variable">@anaconda</span>             <span class="number">4.4</span> M</span><br><span class="line">为依赖而移除<span class="symbol">:</span></span><br><span class="line"> postfix                  x86_64             <span class="number">2</span><span class="symbol">:</span><span class="number">2.10</span>.<span class="number">1</span>-<span class="number">6</span>.el7             <span class="variable">@anaconda</span>              <span class="number">12</span> M</span><br><span class="line"></span><br><span class="line">事务概要</span><br><span class="line">====================================================================================================</span><br><span class="line">移除  <span class="number">1</span> 软件包 (+<span class="number">1</span> 依赖软件包)</span><br><span class="line"></span><br><span class="line">安装大小：<span class="number">17</span> M</span><br><span class="line">Downloading <span class="symbol">packages:</span></span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  正在删除    : <span class="number">2</span><span class="symbol">:postfix-</span><span class="number">2.10</span>.<span class="number">1</span>-<span class="number">6</span>.el7.x86_64                                                   <span class="number">1</span>/<span class="number">2</span></span><br><span class="line">  正在删除    : <span class="number">1</span><span class="symbol">:mariadb-libs-</span><span class="number">5.5</span>.<span class="number">56</span>-<span class="number">2</span>.el7.x86_64                                              <span class="number">2</span>/<span class="number">2</span></span><br><span class="line">  验证中      : <span class="number">1</span><span class="symbol">:mariadb-libs-</span><span class="number">5.5</span>.<span class="number">56</span>-<span class="number">2</span>.el7.x86_64                                              <span class="number">1</span>/<span class="number">2</span></span><br><span class="line">  验证中      : <span class="number">2</span><span class="symbol">:postfix-</span><span class="number">2.10</span>.<span class="number">1</span>-<span class="number">6</span>.el7.x86_64                                                   <span class="number">2</span>/<span class="number">2</span></span><br><span class="line"></span><br><span class="line">删除<span class="symbol">:</span></span><br><span class="line">  mariadb-libs.x86_64 <span class="number">1</span><span class="symbol">:</span><span class="number">5.5</span>.<span class="number">56</span>-<span class="number">2</span>.el7</span><br><span class="line"></span><br><span class="line">作为依赖被删除<span class="symbol">:</span></span><br><span class="line">  postfix.x86_64 <span class="number">2</span><span class="symbol">:</span><span class="number">2.10</span>.<span class="number">1</span>-<span class="number">6</span>.el7</span><br><span class="line"></span><br><span class="line">完毕！</span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment"># yum list installed | grep mariadb</span></span><br><span class="line">[root<span class="variable">@localhost</span> ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></p><p>下面进行MySQL的安装。</p><p>一、下载安装官方提供的yum rpm包</p><p>打开网页：<a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/repo/yum/</a></p><p>点击Red Hat Enterprise Linux 7 / Oracle Linux 7 (Architecture Independent), RPM Package后面的download，进入新的页面点击No thanks, just start my download.就可以看到下载源地址了。</p><p>进入如下目录<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd /usr/local/src/</span><br><span class="line">下载rpm包：wget https:<span class="comment">//dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span></span><br><span class="line"></span><br><span class="line">[root@localhost src]# wget https:<span class="comment">//dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span></span><br><span class="line">-<span class="number">-2018</span><span class="number">-02</span><span class="number">-11</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">03</span>--  https:<span class="comment">//dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span></span><br><span class="line">正在解析主机 dev.mysql.com (dev.mysql.com)... <span class="number">137.254</span><span class="number">.60</span><span class="number">.11</span></span><br><span class="line">正在连接 dev.mysql.com (dev.mysql.com)|<span class="number">137.254</span><span class="number">.60</span><span class="number">.11</span>|:<span class="number">443.</span>.. 已连接。</span><br><span class="line">已发出 HTTP 请求，正在等待回应... <span class="number">302</span> Found</span><br><span class="line">位置：https:<span class="comment">//repo.mysql.com//mysql57-community-release-el7-11.noarch.rpm [跟随至新的 URL]</span></span><br><span class="line">-<span class="number">-2018</span><span class="number">-02</span><span class="number">-11</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">05</span>--  https:<span class="comment">//repo.mysql.com//mysql57-community-release-el7-11.noarch.rpm</span></span><br><span class="line">正在解析主机 repo.mysql.com (repo.mysql.com)... <span class="number">96.6</span><span class="number">.11</span><span class="number">.178</span></span><br><span class="line">正在连接 repo.mysql.com (repo.mysql.com)|<span class="number">96.6</span><span class="number">.11</span><span class="number">.178</span>|:<span class="number">443.</span>.. 已连接。</span><br><span class="line">已发出 HTTP 请求，正在等待回应... <span class="number">200</span> OK</span><br><span class="line">长度：<span class="number">25680</span> (<span class="number">25</span>K) [application/x-redhat-package-manager]</span><br><span class="line">正在保存至: “mysql57-community-release-el7<span class="number">-11.</span>noarch.rpm”</span><br><span class="line"></span><br><span class="line"><span class="number">100</span>%[==========================================================&gt;] <span class="number">25</span>,<span class="number">680</span>      <span class="number">99.4</span>KB/s 用时 <span class="number">0.3</span>s</span><br><span class="line"></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-11</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">06</span> (<span class="number">99.4</span> KB/s) - 已保存 “mysql57-community-release-el7<span class="number">-11.</span>noarch.rpm” [<span class="number">25680</span>/<span class="number">25680</span>])</span><br><span class="line"></span><br><span class="line">[root@localhost src]# ll</span><br><span class="line">总用量 <span class="number">28</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">25680</span> <span class="number">4</span>月  <span class="number">27</span> <span class="number">2017</span> mysql57-community-release-el7<span class="number">-11.</span>noarch.rpm</span><br><span class="line">[root@localhost src]#</span><br><span class="line">安装rpm包：rpm -ivh mysql57-community-release-el7<span class="number">-11.</span>noarch.rpm</span><br><span class="line">[root@localhost src]# rpm -ivh mysql57-community-release-el7<span class="number">-11.</span>noarch.rpm</span><br><span class="line">警告：mysql57-community-release-el7<span class="number">-11.</span>noarch.rpm: 头V3 DSA/SHA1 Signature, 密钥 ID <span class="number">5072e1</span>f5: NOKEY</span><br><span class="line">准备中...                          ################################# [<span class="number">100</span>%]</span><br><span class="line">正在升级/安装...</span><br><span class="line">   <span class="number">1</span>:mysql57-community-release-el7<span class="number">-11</span> ################################# [<span class="number">100</span>%]</span><br><span class="line">检查mysql的yum源是否安装成功：yum repolist enabled | grep <span class="string">"mysql.*-community.*"</span> </span><br><span class="line"></span><br><span class="line">[root@localhost src]# yum repolist enabled | grep <span class="string">"mysql.*-community.*"</span></span><br><span class="line">mysql-connectors-community/x86_64        MySQL Connectors Community           <span class="number">45</span></span><br><span class="line">mysql-tools-community/x86_64             MySQL Tools Community                <span class="number">57</span></span><br><span class="line">mysql57-community/x86_64                 MySQL <span class="number">5.7</span> Community Server          <span class="number">247</span></span><br></pre></td></tr></table></figure></p><p>看到如上，表示安装成功。</p><p>再次使用yum来安装mysql-server，就不会提示没有可用软件包。</p><p>二、使用yum install mysql-server安装<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]# yum install mysql-server</span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.zju.edu.cn</span><br><span class="line"> * extras: centos.ustc.edu.cn</span><br><span class="line"> * updates: mirrors.zju.edu.cn</span><br><span class="line">正在解决依赖关系</span><br><span class="line">--&gt; 正在检查事务</span><br><span class="line">---&gt; 软件包 mysql-community-server.x86_64<span class="meta">.0</span><span class="meta">.5</span><span class="meta">.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7 将被 安装</span><br><span class="line">--&gt; 正在处理依赖关系 mysql-community-<span class="meta">common</span>(x86-<span class="number">64</span>) = <span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7，它被软件包 mysql-community-server-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64 需要</span><br><span class="line">--&gt; 正在处理依赖关系 mysql-community-client(x86-<span class="number">64</span>) &gt;= <span class="number">5.7</span><span class="meta">.9</span>，它被软件包 mysql-community-server-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64 需要</span><br><span class="line">--&gt; 正在检查事务</span><br><span class="line">---&gt; 软件包 mysql-community-client.x86_64<span class="meta">.0</span><span class="meta">.5</span><span class="meta">.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7 将被 安装</span><br><span class="line">--&gt; 正在处理依赖关系 mysql-community-libs(x86-<span class="number">64</span>) &gt;= <span class="number">5.7</span><span class="meta">.9</span>，它被软件包 mysql-community-client-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64 需要</span><br><span class="line">---&gt; 软件包 mysql-community-<span class="meta">common</span>.x86_64<span class="meta">.0</span><span class="meta">.5</span><span class="meta">.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7 将被 安装</span><br><span class="line">--&gt; 正在检查事务</span><br><span class="line">---&gt; 软件包 mysql-community-libs.x86_64<span class="meta">.0</span><span class="meta">.5</span><span class="meta">.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7 将被 安装</span><br><span class="line">--&gt; 解决依赖关系完成</span><br><span class="line"></span><br><span class="line">依赖关系解决</span><br><span class="line"></span><br><span class="line">====================================================================================================</span><br><span class="line"> Package                        架构           版本                 源                         大小</span><br><span class="line">====================================================================================================</span><br><span class="line">正在安装:</span><br><span class="line"> mysql-community-server         x86_64         <span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7         mysql57-community         <span class="number">164</span> M</span><br><span class="line">为依赖而安装:</span><br><span class="line"> mysql-community-client         x86_64         <span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7         mysql57-community          <span class="number">24</span> M</span><br><span class="line"> mysql-community-<span class="meta">common</span>         x86_64         <span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7         mysql57-community         <span class="number">272</span> k</span><br><span class="line"> mysql-community-libs           x86_64         <span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7         mysql57-community         <span class="number">2.1</span> M</span><br><span class="line"></span><br><span class="line">事务概要</span><br><span class="line">====================================================================================================</span><br><span class="line">安装  <span class="number">1</span> 软件包 (+<span class="number">3</span> 依赖软件包)</span><br><span class="line"></span><br><span class="line">总下载量：<span class="number">190</span> M</span><br><span class="line">安装大小：<span class="number">858</span> M</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">Downloading packages:</span><br><span class="line">警告：/var/cache/yum/x86_64/<span class="number">7</span>/mysql57-community/packages/mysql-community-<span class="meta">common</span>-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64.rpm: 头V3 DSA/SHA1 Signature, 密钥 ID 5072e1f5: NOKEY</span><br><span class="line">mysql-community-<span class="meta">common</span>-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64.rpm 的公钥尚未安装</span><br><span class="line">(<span class="number">1</span>/<span class="number">4</span>): mysql-community-<span class="meta">common</span>-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64.rpm                        | <span class="number">272</span> kB  <span class="number">00</span>:<span class="number">00</span>:<span class="number">02</span></span><br><span class="line">(<span class="number">2</span>/<span class="number">4</span>): mysql-community-libs-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64.rpm                          | <span class="number">2.1</span> MB  <span class="number">00</span>:<span class="number">00</span>:<span class="number">02</span></span><br><span class="line">(<span class="number">3</span>/<span class="number">4</span>): mysql-community-client-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64.rpm                        |  <span class="number">24</span> MB  <span class="number">00</span>:<span class="number">00</span>:<span class="number">27</span></span><br><span class="line">(<span class="number">4</span>/<span class="number">4</span>): mysql-community-server-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64.rpm                        | <span class="number">164</span> MB  <span class="number">00</span>:<span class="number">03</span>:<span class="number">25</span></span><br><span class="line">----------------------------------------------------------------------------------------------------</span><br><span class="line">总计                                                                <span class="number">927</span> kB/s | <span class="number">190</span> MB  <span class="number">00</span>:<span class="number">03</span>:<span class="number">30</span></span><br><span class="line">从 file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql 检索密钥</span><br><span class="line">导入 GPG key <span class="number">0x5072E1F5</span>:</span><br><span class="line"> 用户ID     : <span class="string">"MySQL Release Engineering &lt;mysql-build@oss.oracle.com&gt;"</span></span><br><span class="line"> 指纹       : a4a9 <span class="number">4068</span> 76fc bd3c <span class="number">4567</span> 70c8 8c71 8d3b <span class="number">5072</span> e1f5</span><br><span class="line"> 软件包     : mysql57-community-release-el7-<span class="number">11.</span>noarch (installed)</span><br><span class="line"> 来自       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class="line">是否继续？[y/N]：y</span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction <span class="keyword">test</span></span><br><span class="line">Transaction <span class="keyword">test</span> succeeded</span><br><span class="line">Running transaction</span><br><span class="line">警告：RPM 数据库已被非 yum 程序修改。</span><br><span class="line">  正在安装    : mysql-community-<span class="meta">common</span>-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64                                      <span class="number">1</span>/<span class="number">4</span></span><br><span class="line">  正在安装    : mysql-community-libs-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64                                        <span class="number">2</span>/<span class="number">4</span></span><br><span class="line">  正在安装    : mysql-community-client-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64                                      <span class="number">3</span>/<span class="number">4</span></span><br><span class="line">  正在安装    : mysql-community-server-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64                                      <span class="number">4</span>/<span class="number">4</span></span><br><span class="line">  验证中      : mysql-community-server-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64                                      <span class="number">1</span>/<span class="number">4</span></span><br><span class="line">  验证中      : mysql-community-<span class="meta">common</span>-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64                                      <span class="number">2</span>/<span class="number">4</span></span><br><span class="line">  验证中      : mysql-community-libs-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64                                        <span class="number">3</span>/<span class="number">4</span></span><br><span class="line">  验证中      : mysql-community-client-<span class="number">5.7</span><span class="meta">.21</span>-<span class="number">1.</span>el7.x86_64                                      <span class="number">4</span>/<span class="number">4</span></span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">已安装:</span><br><span class="line">  <span class="selector-tag">mysql-community-server</span><span class="selector-class">.x86_64</span> 0<span class="selector-pseudo">:5.7.21-1.el7</span></span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作为依赖被安装:</span><br><span class="line">  mysql-community-client<span class="selector-class">.x86_64</span> <span class="number">0</span>:<span class="number">5.7</span>.<span class="number">21</span>-<span class="number">1</span><span class="selector-class">.el7</span>     mysql-community-common<span class="selector-class">.x86_64</span> <span class="number">0</span>:<span class="number">5.7</span>.<span class="number">21</span>-<span class="number">1</span>.el7</span><br><span class="line">  mysql-community-libs<span class="selector-class">.x86_64</span> <span class="number">0</span>:<span class="number">5.7</span>.<span class="number">21</span>-<span class="number">1</span>.el7</span><br></pre></td></tr></table></figure><p>完毕！<br>查看版本信息：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># rpm -qi mysql-community-server</span></span><br><span class="line">Name        : mysql-community-server</span><br><span class="line">Version     : 5.7.21</span><br><span class="line"><span class="keyword">Release</span>     : <span class="number">1.</span>el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line"><span class="keyword">Install</span> <span class="built_in">Date</span>: <span class="number">2018</span>年<span class="number">02</span>月<span class="number">11</span>日 星期日 <span class="number">14</span>时<span class="number">40</span>分<span class="number">22</span>秒</span><br><span class="line"><span class="keyword">Group</span>       : Applications/<span class="keyword">Databases</span></span><br><span class="line"><span class="keyword">Size</span>        : <span class="number">775546923</span></span><br><span class="line">License     : Copyright (c) <span class="number">2000</span>, <span class="number">2017</span>, <span class="keyword">Oracle</span> <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved. <span class="keyword">Under</span> GPLv2 license <span class="keyword">as</span> shown <span class="keyword">in</span> the Description field.</span><br><span class="line">Signature   : DSA/<span class="keyword">SHA1</span>, <span class="number">2017</span>年<span class="number">12</span>月<span class="number">28</span>日 星期四 <span class="number">20</span>时<span class="number">54</span>分<span class="number">13</span>秒, <span class="keyword">Key</span> <span class="keyword">ID</span> <span class="number">8</span>c718d3b5072e1f5</span><br><span class="line"><span class="keyword">Source</span> RPM  : mysql-community<span class="number">-5.7</span><span class="number">.21</span><span class="number">-1.</span>el7.src.rpm</span><br><span class="line"><span class="keyword">Build</span> <span class="built_in">Date</span>  : <span class="number">2017</span>年<span class="number">12</span>月<span class="number">28</span>日 星期四 <span class="number">12</span>时<span class="number">11</span>分<span class="number">13</span>秒</span><br><span class="line"><span class="keyword">Build</span> Host  : siv27.no.oracle.com</span><br><span class="line">Relocations : (<span class="keyword">not</span> relocatable)</span><br><span class="line">Packager    : MySQL <span class="keyword">Release</span> Engineering &lt;mysql-<span class="keyword">build</span>@oss.oracle.com&gt;</span><br><span class="line">Vendor      : <span class="keyword">Oracle</span> <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates</span><br><span class="line"><span class="keyword">URL</span>         : <span class="keyword">http</span>://www.mysql.com/</span><br><span class="line">Summary     : A very <span class="keyword">fast</span> <span class="keyword">and</span> reliable <span class="keyword">SQL</span> <span class="keyword">database</span> <span class="keyword">server</span></span><br><span class="line">Description :</span><br><span class="line">The MySQL(TM) software delivers a very <span class="keyword">fast</span>, multi-threaded, multi-<span class="keyword">user</span>,</span><br><span class="line"><span class="keyword">and</span> robust <span class="keyword">SQL</span> (Structured <span class="keyword">Query</span> <span class="keyword">Language</span>) <span class="keyword">database</span> server. MySQL <span class="keyword">Server</span></span><br><span class="line"><span class="keyword">is</span> intended <span class="keyword">for</span> mission-<span class="keyword">critical</span>, heavy-<span class="keyword">load</span> production systems <span class="keyword">as</span> well</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">for</span> embedding <span class="keyword">into</span> mass-deployed software. MySQL <span class="keyword">is</span> a trademark <span class="keyword">of</span></span><br><span class="line"><span class="keyword">Oracle</span> <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates</span><br><span class="line"></span><br><span class="line">The MySQL software has Dual Licensing, which means you can <span class="keyword">use</span> the MySQL</span><br><span class="line">software free <span class="keyword">of</span> charge <span class="keyword">under</span> the GNU <span class="keyword">General</span> <span class="keyword">Public</span> License</span><br><span class="line">(<span class="keyword">http</span>://www.gnu.org/licenses/). You can also purchase commercial MySQL</span><br><span class="line">licenses <span class="keyword">from</span> <span class="keyword">Oracle</span> <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates <span class="keyword">if</span> you <span class="keyword">do</span> <span class="keyword">not</span> wish <span class="keyword">to</span> be <span class="keyword">bound</span> <span class="keyword">by</span> the terms <span class="keyword">of</span></span><br><span class="line">the GPL. See the chapter <span class="string">"Licensing and Support"</span> <span class="keyword">in</span> the <span class="keyword">manual</span> <span class="keyword">for</span></span><br><span class="line">further info.</span><br><span class="line"></span><br><span class="line">The MySQL web site (<span class="keyword">http</span>://www.mysql.com/) provides the latest news <span class="keyword">and</span></span><br><span class="line">information about the MySQL software.  Also please see the documentation</span><br><span class="line"><span class="keyword">and</span> the <span class="keyword">manual</span> <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line">This <span class="keyword">package</span> includes the MySQL <span class="keyword">server</span> <span class="built_in">binary</span> <span class="keyword">as</span> well <span class="keyword">as</span> related utilities</span><br><span class="line"><span class="keyword">to</span> run <span class="keyword">and</span> <span class="keyword">administer</span> a MySQL server.</span><br></pre></td></tr></table></figure></p><p>三、启动mysql-server<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]#<span class="built_in"> service </span>mysqld start</span><br><span class="line">Redirecting <span class="keyword">to</span> /bin/systemctl start mysqld.service</span><br></pre></td></tr></table></figure></p><p>四、使用初始密码登陆<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@localhost</span> src]# cat /<span class="keyword">var</span>/log/mysqld.log|grep <span class="string">'A temporary password'</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-11</span>T06:<span class="number">47</span>:<span class="number">54.773267</span>Z <span class="number">1</span> [Note] A temporary password <span class="keyword">is</span> generated <span class="keyword">for</span> root<span class="meta">@localhost</span>: <span class="number">3</span>=v/i;z/Y;P&gt;</span><br></pre></td></tr></table></figure></p><p>最后一行冒号后面的部分3=v/i;z/Y;P&gt;就是初始密码。<br>使用此密码登录MySQL:<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">[root@localhost src]<span class="comment"># mysql -u root -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQ<span class="class">L monitor.  Commands end with ;</span><span class="built_in"> or </span>\g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.7.21</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle<span class="built_in"> and/or </span>its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation<span class="built_in"> and/or </span>its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;'<span class="built_in"> or </span>'\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></p><p>五、修改初始密码<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]# mysqladmin -u root password 'new password'</span><br><span class="line">出现错误信息：</span><br><span class="line"></span><br><span class="line">mysqladmin: connect to server at 'localhost' failed</span><br><span class="line"><span class="keyword">error: </span>'Access denied for user 'root'@'localhost' (using password: NO)'</span><br></pre></td></tr></table></figure></p><p>解决方法：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@localhost src</span>]<span class="meta"># systemctl stop mysqld.service</span></span><br><span class="line">[<span class="meta">root@localhost src</span>]<span class="meta"># mysqld --user=root --skip-grant-tables &amp;</span></span><br><span class="line">[<span class="meta">root@localhost src</span>]<span class="meta"># mysql -u root mysql</span></span><br><span class="line">mysql&gt; UPDATE user SET authentication_string=PASSWORD(<span class="string">'new password'</span>) <span class="keyword">where</span> USER=<span class="string">'root'</span>;</span><br><span class="line">Query OK, <span class="number">1</span> row affected, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br><span class="line">Rows matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="function">rows <span class="title">affected</span> (<span class="params"><span class="number">0.00</span> sec</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">mysql&gt; quit</span></span><br><span class="line"><span class="function">Bye</span></span><br></pre></td></tr></table></figure></p><p>重启mysql-server，用新密码登陆OK。<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># systemctl start mysqld</span></span><br><span class="line">[root@localhost src]<span class="comment"># mysql -u root -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands end <span class="keyword">with</span> ; <span class="keyword">or</span> <span class="string">\g.</span></span><br><span class="line">Your MySQL connection id <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">21</span></span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2018</span>, Oracle <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle <span class="keyword">is</span> a registered trademark <span class="keyword">of</span> Oracle Corporation <span class="keyword">and</span>/<span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks <span class="keyword">of</span> their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help. Type <span class="string">'\c'</span> <span class="keyword">to</span> clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></p><p>正常登陆后发现一个问题：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="builtin-name">ERROR</span> 1820 (HY000): You must reset your password using ALTER<span class="built_in"> USER </span>statement before executing this statement.</span><br></pre></td></tr></table></figure></p><p>解决方法如下：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user <span class="emphasis">'root'</span>@<span class="emphasis">'localhost'</span> identified by <span class="emphasis">'yourpassword'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; set password=password("yourpassword");</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br><span class="line">常用的命令：</span><br><span class="line"></span><br><span class="line">systemctl start mysqld    #启动mysqld</span><br><span class="line">systemctl stop mysqld    #停止mysqld</span><br><span class="line">systemctl restart mysqld    #重启mysqld</span><br><span class="line">systemctl enable mysqld   #设置开机启动</span><br><span class="line"></span><br><span class="line">systemctl status mysqld    #查看 MySQL Server 状态</span><br></pre></td></tr></table></figure></p><p> 直接使用匿名登录失败：<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[dup@localhost ~]$ mysql</span><br><span class="line"><span class="keyword">ERROR </span>1045 (28000): Access denied for user 'dup'@'localhost' (using password: NO)</span><br></pre></td></tr></table></figure></p><p>这是因为5.7版本已经默认没有匿名用户了。我们看下安装MySQL 5.7.21后默认的用户和数据库<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; mysql&gt; SELECT User, Host, HEX(authentication<span class="emphasis">_string) FROM mysql.user;</span></span><br><span class="line"><span class="emphasis">+---------------+-----------+------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="emphasis">| User          | Host      | HEX(authentication_</span>string)                                                         |</span><br><span class="line"><span class="code">+---------------+</span>-----------<span class="code">+------------------------------------------------------------------------------------+</span></span><br><span class="line">| root          | localhost | 2A38314635453231453335343037443838344136434434413733314145424642364146323039453142 |</span><br><span class="line">| mysql.session | localhost | 2A5448495349534E4F544156414C494450415353574F52445448415443414E42455553454448455245 |</span><br><span class="line">| mysql.sys     | localhost | 2A5448495349534E4F544156414C494450415353574F52445448415443414E42455553454448455245 |</span><br><span class="line"><span class="code">+---------------+</span>-----------<span class="code">+------------------------------------------------------------------------------------+</span></span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line">mysql&gt; select user,host from mysql.user;</span><br><span class="line"><span class="code">+---------------+</span>-----------+</span><br><span class="line">| user          | host      |</span><br><span class="line"><span class="code">+---------------+</span>-----------+</span><br><span class="line">| mysql.session | localhost |</span><br><span class="line">| mysql.sys     | localhost |</span><br><span class="line">| root          | localhost |</span><br><span class="line"><span class="code">+---------------+</span>-----------+</span><br><span class="line">3 rows in set (0.01 sec)</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>关于默认的3个user的说明，详见官网：<a href="https://dev.mysql.com/doc/refman/5.7/en/reserved-users.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/reserved-users.html</a></p><p>6.3.4 Reserved User Accounts<br>One part of the MySQL installation process is data directory initialization (see Section 2.10.1.1, “Initializing the Data Directory Manually Using mysqld”). During data directory initialization, MySQL creates user accounts that should be considered reserved:</p><p>‘root‘@’localhost: Used for administrative purposes. This account has all privileges and can perform any operation.</p><p>Strictly speaking, this account name is not reserved, in the sense that some installations rename the root account to something else to avoid exposing a highly privileged account with a well-known name.</p><p>‘mysql.sys‘@’localhost’: Used as the DEFINER for sys schema objects. Use of the mysql.sys account avoids problems that occur if a DBA renames or removes the root account. This account is locked so that it cannot be used for client connections.</p><p>‘mysql.session‘@’localhost’: Used internally by plugins to access the server. This account is locked so that it cannot be used for client connections.</p><hr><p><em><a href="https://blog.csdn.net/u014558668/article/details/79310267" target="_blank" rel="noopener">https://blog.csdn.net/u014558668/article/details/79310267</a></em></p>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>将yum源更改为阿里镜像</title>
      <link href="/2019/02/22/%E5%B0%86yum%E6%BA%90%E6%9B%B4%E6%94%B9%E4%B8%BA%E9%98%BF%E9%87%8C%E9%95%9C%E5%83%8F/"/>
      <url>/2019/02/22/%E5%B0%86yum%E6%BA%90%E6%9B%B4%E6%94%B9%E4%B8%BA%E9%98%BF%E9%87%8C%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<p>有时候CentOS默认的yum源不一定是国内镜像，导致yum在线安装及更新速度不是很理想。这时候需要将yum源设置为国内镜像站点。国内主要开源的开源镜像站点应该是网易和阿里云了。</p><p>修改CentOS默认yum源为mirrors.163.com</p><p>1、首先备份系统自带yum源配置文件/etc/yum.repos.d/CentOS-Base.repo<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mv <span class="regexp">/etc/yum</span>.repos.d<span class="regexp">/CentOS-Base.repo /</span>etc<span class="regexp">/yum.repos.d/</span>CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure></p><p>2、进入yum源配置文件所在的文件夹</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># cd /etc/yum.repos.d/</span></span><br></pre></td></tr></table></figure><p>3、下载163的yum源配置文件到上面那个文件夹内</p><p>CentOS7</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]<span class="meta"># wget http:<span class="comment">//mirrors.163.com/.help/CentOS7-Base-163.repo</span></span></span><br></pre></td></tr></table></figure><p>CentOS6</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]<span class="meta"># wget http:<span class="comment">//mirrors.163.com/.help/CentOS6-Base-163.repo</span></span></span><br></pre></td></tr></table></figure><p>CentOS5</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]<span class="meta"># wget http:<span class="comment">//mirrors.163.com/.help/CentOS5-Base-163.repo</span></span></span><br></pre></td></tr></table></figure><p>4、运行yum makecache生成缓存</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> yum.repos.d]<span class="meta"># yum makecache</span></span><br></pre></td></tr></table></figure><p>5、这时候再更新系统就会看到以下mirrors.163.com信息</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]# yum -y update</span><br><span class="line">已加载插件：fastestmirror, refresh-packagekit, security</span><br><span class="line">设置更新进程Loading<span class="built_in"> mirror </span>speeds <span class="keyword">from</span> cached hostfile</span><br><span class="line">* base: mirrors.163.com</span><br><span class="line">* extras: mirrors.163.com</span><br><span class="line">* updates: mirrors.163.com</span><br></pre></td></tr></table></figure><p>修改CentOS默认yum源为mirrors.aliyun.com<br>1、首先备份系统自带yum源配置文件/etc/yum.repos.d/CentOS-Base.repo</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mv <span class="regexp">/etc/yum</span>.repos.d<span class="regexp">/CentOS-Base.repo /</span>etc<span class="regexp">/yum.repos.d/</span>CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><p>2、下载ailiyun的yum源配置文件到/etc/yum.repos.d/<br>CentOS7</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# wget -O <span class="regexp">/etc/yum</span>.repos.d<span class="regexp">/CentOS-Base.repo http:/</span><span class="regexp">/mirrors.aliyun.com/</span>repo<span class="regexp">/Centos-7.repo</span></span><br></pre></td></tr></table></figure><p>CentOS6</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# wget -O <span class="regexp">/etc/yum</span>.repos.d<span class="regexp">/CentOS-Base.repo http:/</span><span class="regexp">/mirrors.aliyun.com/</span>repo<span class="regexp">/Centos-6.repo</span></span><br></pre></td></tr></table></figure><p>CentOS5</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# wget -O <span class="regexp">/etc/yum</span>.repos.d<span class="regexp">/CentOS-Base.repo http:/</span><span class="regexp">/mirrors.aliyun.com/</span>repo<span class="regexp">/Centos-5.repo</span></span><br></pre></td></tr></table></figure><p>3、运行yum makecache生成缓存</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># yum makecache</span></span><br></pre></td></tr></table></figure><p>4、这时候再更新系统就会看到以下mirrors.aliyun.com信息</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum -y update</span><br><span class="line">已加载插件：fastestmirror, refresh-packagekit, security</span><br><span class="line">设置更新进程Loading<span class="built_in"> mirror </span>speeds <span class="keyword">from</span> cached hostfile</span><br><span class="line">* base: mirrors.aliyun.com</span><br><span class="line">* extras: mirrors.aliyun.com</span><br><span class="line">* updates: mirrors.aliyun.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>centOS指令</title>
      <link href="/2019/02/21/centOS%E6%8C%87%E4%BB%A4/"/>
      <url>/2019/02/21/centOS%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="1-关机-系统的关机、重启以及登出-的命令"><a href="#1-关机-系统的关机、重启以及登出-的命令" class="headerlink" title="1.关机 (系统的关机、重启以及登出 ) 的命令"></a>1.关机 (系统的关机、重启以及登出 ) 的命令</h3><p>shutdown -h now 关闭系统(1)</p><p>init 0 关闭系统(2)</p><p>telinit 0 关闭系统(3)</p><p>shutdown -h hours:minutes &amp; 按预定时间关闭系统</p><p>shutdown -c 取消按预定时间关闭系统</p><p>shutdown -r now 重启(1)</p><p>reboot 重启(2)</p><p>logout 注销</p><h3 id="2-查看系统信息的命令"><a href="#2-查看系统信息的命令" class="headerlink" title="2.查看系统信息的命令"></a>2.查看系统信息的命令</h3><p>arch 显示机器的处理器架构(1)</p><p>uname -m 显示机器的处理器架构(2)</p><p>uname -r 显示正在使用的内核版本</p><p>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)</p><p>hdparm -i /dev/hda 罗列一个磁盘的架构特性</p><p>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作</p><p>cat /proc/cpuinfo 显示CPU info的信息</p><p>cat /proc/interrupts 显示中断</p><p>cat /proc/meminfo 校验内存使用</p><p>cat /proc/swaps 显示哪些swap被使用</p><p>cat /proc/version 显示内核的版本</p><p>cat /proc/net/dev 显示网络适配器及统计</p><p>cat /proc/mounts 显示已加载的文件系统</p><p>lspci -tv 罗列 PCI 设备</p><p>lsusb -tv 显示 USB 设备</p><p>date 显示系统日期</p><p>cal 2007 显示2007年的日历表</p><p>date 041217002007.00 设置日期和时间 - 月日时分年.秒</p><p>clock -w 将时间修改保存到 BIOS</p><h3 id="3-文件和目录操作命令"><a href="#3-文件和目录操作命令" class="headerlink" title="3.文件和目录操作命令"></a>3.文件和目录操作命令</h3><p>cd /home 进入 ‘/ home’ 目录’</p><p>cd .. 返回上一级目录</p><p>cd ../.. 返回上两级目录</p><p>cd 进入个人的主目录</p><p>cd ~user1 进入个人的主目录</p><p>cd - 返回上次所在的目录</p><p>pwd 显示工作路径</p><p>ls 查看目录中的文件</p><p>ls -F 查看目录中的文件</p><p>ls -l 显示文件和目录的详细资料</p><p>ls -a 显示隐藏文件</p><p>mkdir dir1 创建一个叫做 ‘dir1’ 的目录’</p><p>mkdir dir1 dir2 同时创建两个目录</p><p>mkdir -p /tmp/dir1/dir2 创建一个目录树</p><p>rm -f file1 删除一个叫做 ‘file1’ 的文件’</p><p>rmdir dir1 删除一个叫做 ‘dir1’ 的目录’</p><p>rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容</p><p>rm -rf dir1 dir2 同时删除两个目录及它们的内容</p><p>mv dir1 new_dir 重命名/移动 一个目录</p><p>cp file1 file2 复制一个文件</p><p>cp dir/* . 复制一个目录下的所有文件到当前工作目录</p><p>cp -a /tmp/dir1 . 复制一个目录到当前工作目录</p><p>cp -a dir1 dir2 复制一个目录</p><p>ln -s file1 lnk1 创建一个指向文件或目录的软链接</p><p>ln file1 lnk1 创建一个指向文件或目录的物理链接</p><p>touch file1 创建一个文件</p><h3 id="4-文件搜索命令"><a href="#4-文件搜索命令" class="headerlink" title="4.文件搜索命令"></a>4.文件搜索命令</h3><p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录</p><p>find / -user user1 搜索属于用户 ‘user1’ 的文件和目录</p><p>find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件</p><p>find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件</p><p>find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件</p><p>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令</p><p>whereis file 显示一个二进制文件、源码或man的位置</p><p>which file 显示一个二进制文件或可执行文件的完整路径</p><h3 id="5-查看文件内容"><a href="#5-查看文件内容" class="headerlink" title="5.查看文件内容"></a>5.查看文件内容</h3><p>cat file1 从第一个字节开始正向查看文件的内容</p><p>tac file1 从最后一行开始反向查看一个文件的内容</p><p>more file1 查看一个长文件的内容</p><p>less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作</p><p>head -2 file1 查看一个文件的前两行</p><p>tail -2 file1 查看一个文件的最后两行 5.挂载命令</p><p>mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 (注：确定目录 ‘/ mnt/hda2’ 已经存在)</p><p>umount /dev/hda2 卸载一个叫做hda2的盘 (先从挂载点 ‘/ mnt/hda2’ 退出)</p><p>fuser -km /mnt/hda2 当设备繁忙时强制卸载</p><p>umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件(当文件为只读或当磁盘写满时非常有用)</p><p>mount /dev/fd0 /mnt/floppy 挂载一个软盘</p><p>mount /dev/cdrom /mnt/cdrom 挂载一个光盘</p><p>mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom</p><p>mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom</p><p>mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件</p><p>mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统</p><p>mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备</p><p>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享</p><h3 id="6-磁盘空间操作的命令"><a href="#6-磁盘空间操作的命令" class="headerlink" title="6.磁盘空间操作的命令"></a>6.磁盘空间操作的命令</h3><p>df -h 显示已经挂载的分区列表</p><p>ls -lSr |more 以尺寸大小排列文件和目录</p><p>du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’</p><p>du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小</p><h3 id="7-用户和群组相关命令"><a href="#7-用户和群组相关命令" class="headerlink" title="7.用户和群组相关命令"></a>7.用户和群组相关命令</h3><p>groupadd group_name 创建一个新用户组</p><p>groupdel group_name 删除一个用户组</p><p>groupmod -n new_group_name old_group_name 重命名一个用户组</p><p>useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户</p><p>useradd user1 创建一个新用户</p><p>userdel -r user1 删除一个用户 ( ‘-r’ 同时删除除主目录)</p><p>passwd user1 修改一个用户的口令 (只允许root执行)</p><p>chage -E 2005-12-31 user1 设置用户口令的失效期限</p><p>ls -lh 显示权限</p><p>chmod 777 directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读(r )、写(w)和执行(x)的权限</p><p>chmod 700 directory1 删除群组(g)与其他人(o)对目录的读写执行权限</p><p>chown user1 file1 改变一个文件的所有人属性，为use1。</p><p>chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性都为use1所有</p><p>chgrp group1 file1 改变文件的群组为group1</p><p>chown user1:group1 file1 改变一个文件的所有人和群组属性，所属组为group1，用户为use1。</p><p>find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件</p><p>chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限</p><p>chmod u-s /bin/file1 禁用一个二进制文件的 SUID位</p><p>chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的</p><p>chmod g-s /home/public 禁用一个目录的 SGID 位</p><p>chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件</p><p>chmod o-t /home/public 禁用一个目录的 STIKY 位</p><h3 id="8-打包和解压缩文件的命令"><a href="#8-打包和解压缩文件的命令" class="headerlink" title="8.打包和解压缩文件的命令"></a>8.打包和解压缩文件的命令</h3><p>bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件</p><p>bzip2 file1 压缩一个叫做 ‘file1’ 的文件</p><p>gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件</p><p>gzip file1 压缩一个叫做 ‘file1’的文件</p><p>gzip -9 file1 最大程度压缩</p><p>rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包</p><p>rar a file1.rar file1 file2 dir1 打包 ‘file1’, ‘file2’ 以及目录 ‘dir1’</p><p>rar x file1.rar 解rar包</p><p>unrar x file1.rar 解rar包</p><p>tar -cvf archive.tar file1 创建一个非压缩的tar包</p><p>tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ ‘dir1’的包</p><p>tar -tf archive.tar 显示一个包中的内容</p><p>tar -xvf archive.tar 释放一个包</p><p>tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下 (-c是指定目录)</p><p>tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包</p><p>tar -xvfj archive.tar.bz2 解压一个bzip2格式的压缩包</p><p>tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包</p><p>tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包</p><p>zip file1.zip file1 创建一个zip格式的压缩包</p><p>zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包</p><p>unzip file1.zip 解压一个zip格式压缩包</p><h3 id="9-关于RPM-包的命令"><a href="#9-关于RPM-包的命令" class="headerlink" title="9.关于RPM 包的命令"></a>9.关于RPM 包的命令</h3><p>rpm -ivh package.rpm 安装一个rpm包</p><p>rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告</p><p>rpm -U package.rpm 更新一个rpm包但不改变其配置文件</p><p>rpm -F package.rpm 更新一个确定已经安装的rpm包</p><p>rpm -e package_name.rpm 删除一个rpm包</p><p>rpm -qa 显示系统中所有已经安装的rpm包</p><p>rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包</p><p>rpm -qi package_name 获取一个已安装包的特殊信息</p><p>rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表</p><p>rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表</p><p>rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表</p><p>rpm -q package_name –whatprovides 显示一个rpm包所占的体积</p><p>rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l</p><p>rpm -q package_name –changelog 显示一个rpm包的修改历史</p><p>rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供</p><p>rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表</p><p>rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书</p><p>rpm –checksig package.rpm 确认一个rpm包的完整性</p><p>rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性</p><p>rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间</p><p>rpm -Va 检查系统中所有已安装的rpm包- 小心使用</p><p>rpm -Vp package.rpm 确认一个rpm包还未安装</p><p>rpm2cpio package.rpm | cpio –extract –make-directories <em>bin</em> 从一个rpm包运行可执行文件</p><p>rpm -ivh /usr/src/redhat/RPMS/<code>arch</code>/package.rpm 从一个rpm源码安装一个构建好的包</p><p>rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包</p><h3 id="10-YUM-软件包升级器"><a href="#10-YUM-软件包升级器" class="headerlink" title="10.YUM 软件包升级器"></a>10.YUM 软件包升级器</h3><p>yum install package_name 下载并安装一个rpm包</p><p>yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</p><p>yum update package_name.rpm 更新当前系统中所有安装的rpm包</p><p>yum update package_name 更新一个rpm包</p><p>yum remove package_name 删除一个rpm包</p><p>yum list 列出当前系统中安装的所有包</p><p>yum search package_name 在rpm仓库中搜寻软件包</p><p>yum clean packages 清理rpm缓存删除下载的包</p><p>yum clean headers 删除所有头文件</p><p>yum clean all 删除所有缓存的包和头文件</p>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux wget 命令用法详解(附实例说明)</title>
      <link href="/2019/02/21/linux-wget-%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3-%E9%99%84%E5%AE%9E%E4%BE%8B%E8%AF%B4%E6%98%8E/"/>
      <url>/2019/02/21/linux-wget-%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3-%E9%99%84%E5%AE%9E%E4%BE%8B%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>Linux wget是一个下载文件的工具，它用在命令行下。对于Linux用户是必不可少的工具，尤其对于网络管理员，经常要下载一些软件或从远程服务器恢复备份到本地服务器。如果我们使用虚拟主机，处理这样的事务我们只能先从远程服务器下载到我们电脑磁盘，然后再用ftp工具上传到服务器。这样既浪费时间又浪费精力，那不没办法的事。而到了Linux VPS，它则可以直接下载到服务器而不用经过上传这一步。wget工具体积小但功能完善，它支持断点下载功能，同时支持FTP和HTTP下载方式，支持代理服务器和设置起来方便简单。下面我们以实例的形式说明怎么使用wget。 </p><p>命令格式：<br>wget [参数列表] [目标软件、网页的网址]             //  用法： wget [选项]… [URL]…</p><p>长选项所必须的参数在使用短选项时也是必须的。<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">启动：</span><br><span class="line">  -V,  <span class="comment">--version                   显示 Wget 的版本信息并退出</span></span><br><span class="line">  -h,  <span class="comment">--help                      打印此帮助</span></span><br><span class="line">  -b,  <span class="comment">--background                启动后转入后台</span></span><br><span class="line">  -e,  <span class="comment">--execute=命令              运行一个“.wgetrc”风格的命令</span></span><br><span class="line"></span><br><span class="line">日志和输入文件：</span><br><span class="line">  -o,  <span class="comment">--output-file=文件          将日志信息写入 FILE</span></span><br><span class="line">  -<span class="keyword">a</span>,  <span class="comment">--append-output=文件        将信息添加至 FILE</span></span><br><span class="line">  -d,  <span class="comment">--debug                     打印大量调试信息</span></span><br><span class="line">  -q,  <span class="comment">--quiet                     安静模式 (无信息输出)</span></span><br><span class="line">  -v,  <span class="comment">--verbose                   详尽的输出 (此为默认值)</span></span><br><span class="line">  -nv, <span class="comment">--no-verbose                关闭详尽输出，但不进入安静模式</span></span><br><span class="line">       <span class="comment">--report-speed=类型         以 &lt;类型&gt; 报告带宽。类型可以是 bits</span></span><br><span class="line">  -i,  <span class="comment">--input-file=文件           下载本地或外部 &lt;文件&gt; 中的 URL</span></span><br><span class="line">  -F,  <span class="comment">--force-html                把输入文件当成 HTML 文件</span></span><br><span class="line">  -B,  <span class="comment">--base=URL                  解析相对于 URL 的 HTML 输入文件链接 (-i -F)</span></span><br><span class="line">       <span class="comment">--config=文件               指定要使用的配置文件</span></span><br><span class="line">       <span class="comment">--no-cookies                不读取任何配置文件</span></span><br><span class="line">       <span class="comment">--rejected-log=文件         将拒绝 URL 的原因写入 &lt;文件&gt;。</span></span><br><span class="line"></span><br><span class="line">下载：</span><br><span class="line">  -t,  <span class="comment">--tries=数字                设置重试次数为 &lt;数字&gt; (0 代表无限制)</span></span><br><span class="line">       <span class="comment">--retry-connrefused         即使拒绝连接也是重试</span></span><br><span class="line">  -O,  <span class="comment">--output-document=文件      将文档写入 FILE</span></span><br><span class="line">  -nc, <span class="comment">--no-clobber                不要下载已存在将被覆盖的文件</span></span><br><span class="line">  -c,  <span class="comment">--continue                  断点续传下载文件</span></span><br><span class="line">       <span class="comment">--start-pos=偏移量          从由零计数的 &lt;偏移量&gt; 开始下载</span></span><br><span class="line">       <span class="comment">--progress=类型             选择进度条类型</span></span><br><span class="line">       <span class="comment">--show-progress             在任意啰嗦状态下都显示进度条</span></span><br><span class="line">  -N,  <span class="comment">--timestamping              只获取比本地文件新的文件</span></span><br><span class="line">       <span class="comment">--no-if-modified-since      不要在时间戳 (timestamping) 模式下使用</span></span><br><span class="line">                                     <span class="keyword">if</span>-modified-since <span class="built_in">get</span> 条件请求</span><br><span class="line">       <span class="comment">--no-use-server-timestamps  don't set the local file's timestamp by</span></span><br><span class="line">                                     <span class="keyword">the</span> <span class="literal">one</span> <span class="keyword">on</span> <span class="title">the</span> <span class="title">server</span></span><br><span class="line">  -S,  <span class="comment">--server-response           打印服务器响应</span></span><br><span class="line">       <span class="comment">--spider                    不下载任何文件</span></span><br><span class="line">  -T,  <span class="comment">--timeout=SECONDS           将所有超时设为 SECONDS 秒</span></span><br><span class="line">       <span class="comment">--dns-timeout=SECS          设置 DNS 查寻超时为 SECS 秒</span></span><br><span class="line">       <span class="comment">--connect-timeout=SECS      设置连接超时为 SECS 秒</span></span><br><span class="line">       <span class="comment">--read-timeout=SECS         设置读取超时为 SECS 秒</span></span><br><span class="line">  -w,  <span class="comment">--wait=SECONDS              等待间隔为 SECONDS 秒</span></span><br><span class="line">       <span class="comment">--waitretry=SECONDS         在获取文件的重试期间等待 1..SECONDS 秒</span></span><br><span class="line">       <span class="comment">--random-wait               获取多个文件时，每次随机等待间隔 (0.5~1.5)*WAIT 秒</span></span><br><span class="line">       <span class="comment">--no-proxy                  禁止使用代理</span></span><br><span class="line">  -Q,  <span class="comment">--quota=数字                设置获取配额为 &lt;数字&gt; 字节</span></span><br><span class="line">       <span class="comment">--bind-address=ADDRESS      绑定至本地主机上的 ADDRESS (主机名或是 IP)</span></span><br><span class="line">       <span class="comment">--limit-rate=RATE           限制下载速率为 RATE</span></span><br><span class="line">       <span class="comment">--no-dns-cache              关闭 DNS 查询缓存</span></span><br><span class="line">       <span class="comment">--restrict-file-names=系统  限定文件名中的字符为 &lt;系统&gt; 允许的字符</span></span><br><span class="line">       <span class="comment">--ignore-case               匹配文件/目录时忽略大小写</span></span><br><span class="line">  <span class="number">-4</span>,  <span class="comment">--inet4-only                仅连接至 IPv4 地址</span></span><br><span class="line">  <span class="number">-6</span>,  <span class="comment">--inet6-only                仅连接至 IPv6 地址</span></span><br><span class="line">       <span class="comment">--prefer-family=地址族      首先连接至指定家族（IPv6，IPv4 或 none）的地址</span></span><br><span class="line">       <span class="comment">--user=用户                 将 ftp 和 http 的用户名均设置为 &lt;用户&gt;</span></span><br><span class="line">       <span class="comment">--password=密码             将 ftp 和 http 的密码均设置为 &lt;密码&gt;</span></span><br><span class="line">       <span class="comment">--ask-password              提示输入密码</span></span><br><span class="line">       <span class="comment">--no-iri                    关闭 IRI 支持</span></span><br><span class="line">       <span class="comment">--local-encoding=ENC        使用 ENC 作为 IRI (国际化资源标识符) 的本地编码</span></span><br><span class="line">       <span class="comment">--remote-encoding=ENC       使用 ENC 作为默认远程编码</span></span><br><span class="line">       <span class="comment">--unlink                    覆盖前移除文件</span></span><br><span class="line"></span><br><span class="line">目录：</span><br><span class="line">  -nd, <span class="comment">--no-directories            不创建目录</span></span><br><span class="line">  -x,  <span class="comment">--force-directories         强制创建目录</span></span><br><span class="line">  -nH, <span class="comment">--no-host-directories       不要创建主 (host) 目录</span></span><br><span class="line">       <span class="comment">--protocol-directories      在目录中使用协议名称</span></span><br><span class="line">  -P,  <span class="comment">--directory-prefix=前缀     保存文件到 &lt;前缀&gt;/..</span></span><br><span class="line">       <span class="comment">--cut-dirs=数字             忽略远程目录中 &lt;数字&gt; 个目录层。</span></span><br><span class="line"></span><br><span class="line">HTTP 选项：</span><br><span class="line">       <span class="comment">--http-user=用户            设置 http 用户名为 &lt;用户&gt;</span></span><br><span class="line">       <span class="comment">--http-password=密码        设置 http 密码为 &lt;密码&gt;</span></span><br><span class="line">       <span class="comment">--no-cache                  不使用服务器缓存的数据。</span></span><br><span class="line">       <span class="comment">--default-page=NAME         改变默认页 (通常是“index.html”)。</span></span><br><span class="line">  -E,  <span class="comment">--adjust-extension          以合适的扩展名保存 HTML/CSS 文档</span></span><br><span class="line">       <span class="comment">--ignore-length             忽略头部的‘Content-Length’区域</span></span><br><span class="line">       <span class="comment">--header=字符串             在头部插入 &lt;字符串&gt;</span></span><br><span class="line">       <span class="comment">--max-redirect              每页所允许的最大重定向</span></span><br><span class="line">       <span class="comment">--proxy-user=用户           使用 &lt;用户&gt; 作为代理用户名</span></span><br><span class="line">       <span class="comment">--proxy-password=密码       使用 &lt;密码&gt; 作为代理密码</span></span><br><span class="line">       <span class="comment">--referer=URL               在 HTTP 请求头包含‘Referer: URL’</span></span><br><span class="line">       <span class="comment">--save-headers              将 HTTP 头保存至文件。</span></span><br><span class="line">  -U,  <span class="comment">--user-agent=代理           标识自己为 &lt;代理&gt; 而不是 Wget/VERSION。</span></span><br><span class="line">       <span class="comment">--no-http-keep-alive        禁用 HTTP keep-alive (持久连接)。</span></span><br><span class="line">       <span class="comment">--no-cookies                不使用 cookies。</span></span><br><span class="line">       <span class="comment">--load-cookies=文件         会话开始前从 &lt;文件&gt; 中载入 cookies。</span></span><br><span class="line">       <span class="comment">--save-cookies=文件         会话结束后保存 cookies 至 FILE。</span></span><br><span class="line">       <span class="comment">--keep-session-cookies      载入并保存会话 (非永久) cookies。</span></span><br><span class="line">       <span class="comment">--post-data=字符串          使用 POST 方式；把 &lt;字串&gt;作为数据发送。</span></span><br><span class="line">       <span class="comment">--post-file=文件            使用 POST 方式；发送 &lt;文件&gt; 内容。</span></span><br><span class="line">       <span class="comment">--method=HTTP方法           在请求中使用指定的 &lt;HTTP 方法&gt;。</span></span><br><span class="line">       <span class="comment">--post-data=字符串          把 &lt;字串&gt; 作为数据发送，必须设置 --method</span></span><br><span class="line">       <span class="comment">--post-file=文件            发送 &lt;文件&gt; 内容，必须设置 --method</span></span><br><span class="line">       <span class="comment">--content-disposition       当选择本地文件名时允许 Content-Disposition</span></span><br><span class="line">                                   头部 (实验中)。</span><br><span class="line">       <span class="comment">--content-on-error          在服务器错误时输出接收到的内容</span></span><br><span class="line">       <span class="comment">--auth-no-challenge         不先等待服务器询问就发送基本 HTTP 验证信息。</span></span><br><span class="line"></span><br><span class="line">HTTPS (SSL/TLS) 选项：</span><br><span class="line">       <span class="comment">--secure-protocol=PR         选择安全协议，可以是 auto、SSLv2、</span></span><br><span class="line">                                    SSLv3、TLSv1、PFS 中的一个。</span><br><span class="line">       <span class="comment">--https-only                 只跟随安全的 HTTPS 链接</span></span><br><span class="line">       <span class="comment">--no-check-certificate       不要验证服务器的证书。</span></span><br><span class="line">       <span class="comment">--certificate=文件           客户端证书文件。</span></span><br><span class="line">       <span class="comment">--certificate-type=类型      客户端证书类型，PEM 或 DER。</span></span><br><span class="line">       <span class="comment">--private-key=文件           私钥文件。</span></span><br><span class="line">       <span class="comment">--private-key-type=类型      私钥文件类型，PEM 或 DER。</span></span><br><span class="line">       <span class="comment">--ca-certificate=文件        带有一组 CA 证书的文件。</span></span><br><span class="line">       <span class="comment">--ca-directory=DIR           保存 CA 证书的哈希列表的目录。</span></span><br><span class="line">       <span class="comment">--ca-certificate=文件        带有一组 CA 证书的文件。</span></span><br><span class="line">       <span class="comment">--pinnedpubkey=FILE/HASHES  Public key (PEM/DER) file, or any number</span></span><br><span class="line">                                   <span class="keyword">of</span> base64 encoded sha256 hashes preceded <span class="keyword">by</span></span><br><span class="line">                                   <span class="string">'sha256//'</span> <span class="keyword">and</span> seperated <span class="keyword">by</span> <span class="string">';'</span>, <span class="built_in">to</span> verify</span><br><span class="line">                                   peer against</span><br><span class="line"></span><br><span class="line">HSTS 选项：</span><br><span class="line">       <span class="comment">--no-hsts                   禁用 HSTS</span></span><br><span class="line">       <span class="comment">--hsts-file                 HSTS 数据库路径（将覆盖默认值）</span></span><br><span class="line"></span><br><span class="line">FTP 选项：</span><br><span class="line">       <span class="comment">--ftp-user=用户             设置 ftp 用户名为 &lt;用户&gt;。</span></span><br><span class="line">       <span class="comment">--ftp-password=密码         设置 ftp 密码为 &lt;密码&gt;</span></span><br><span class="line">       <span class="comment">--no-remove-listing         不要删除‘.listing’文件</span></span><br><span class="line">       <span class="comment">--no-glob                   不在 FTP 文件名中使用通配符展开</span></span><br><span class="line">       <span class="comment">--no-passive-ftp            禁用“passive”传输模式</span></span><br><span class="line">       <span class="comment">--preserve-permissions      保留远程文件的权限</span></span><br><span class="line">       <span class="comment">--retr-symlinks             递归目录时，获取链接的文件 (而非目录)</span></span><br><span class="line"></span><br><span class="line">FTPS 选项：</span><br><span class="line">       <span class="comment">--ftps-implicit                 使用隐式 FTPS（默认端口 990）</span></span><br><span class="line">       <span class="comment">--ftps-resume-ssl               打开数据连接时继续控制连接中的 SSL/TLS 会话</span></span><br><span class="line">       <span class="comment">--ftps-clear-data-connection    只加密控制信道；数据传输使用明文</span></span><br><span class="line">       <span class="comment">--ftps-fallback-to-ftp          回落到 FTP，如果目标服务器不支持 FTPS</span></span><br><span class="line">WARC 选项：</span><br><span class="line">       <span class="comment">--warc-file=文件名          在一个 .warc.gz 文件里保持请求/响应数据</span></span><br><span class="line">       <span class="comment">--warc-header=字符串        在头部插入 &lt;字符串&gt;</span></span><br><span class="line">       <span class="comment">--warc-max-size=数字        将 WARC 的最大尺寸设置为 &lt;数字&gt;</span></span><br><span class="line">       <span class="comment">--warc-cdx                  写入 CDX 索引文件</span></span><br><span class="line">       <span class="comment">--warc-dedup=文件名         不要记录列在此 CDX 文件内的记录</span></span><br><span class="line">       <span class="comment">--no-warc-compression       不要 GZIP 压缩 WARC 文件</span></span><br><span class="line">       <span class="comment">--no-warc-digests           不要计算 SHA1 摘要</span></span><br><span class="line">       <span class="comment">--no-warc-keep-log          不要在 WARC 记录中存储日志文件</span></span><br><span class="line">       <span class="comment">--warc-tempdir=目录         WARC 写入器的临时文件目录</span></span><br><span class="line"></span><br><span class="line">递归下载：</span><br><span class="line">  -r,  <span class="comment">--recursive                 指定递归下载</span></span><br><span class="line">  -l,  <span class="comment">--level=数字                最大递归深度 (inf 或 0 代表无限制，即全部下载)。</span></span><br><span class="line">       <span class="comment">--delete-after             下载完成后删除本地文件</span></span><br><span class="line">  -k,  <span class="comment">--convert-links            让下载得到的 HTML 或 CSS 中的链接指向本地文件</span></span><br><span class="line">       <span class="comment">--convert-file-only         convert the file part of the URLs only (usually known as the basename)</span></span><br><span class="line">       <span class="comment">--backups=N                 写入文件 X 前，轮换移动最多 N 个备份文件</span></span><br><span class="line">  -K,  <span class="comment">--backup-converted         在转换文件 X 前先将它备份为 X.orig。</span></span><br><span class="line">  -m,  <span class="comment">--mirror                   -N -r -l inf --no-remove-listing 的缩写形式。</span></span><br><span class="line">  -p,  <span class="comment">--page-requisites          下载所有用于显示 HTML 页面的图片之类的元素。</span></span><br><span class="line">       <span class="comment">--strict-comments          用严格方式 (SGML) 处理 HTML 注释。</span></span><br><span class="line"></span><br><span class="line">递归接受/拒绝：</span><br><span class="line">  -A,  <span class="comment">--accept=列表               逗号分隔的可接受的扩展名列表</span></span><br><span class="line">  -R,  <span class="comment">--reject=列表               逗号分隔的要拒绝的扩展名列表</span></span><br><span class="line">       <span class="comment">--accept-regex=REGEX        匹配接受的 URL 的正则表达式</span></span><br><span class="line">       <span class="comment">--reject-regex=REGEX        匹配拒绝的 URL 的正则表达式</span></span><br><span class="line">       <span class="comment">--regex-type=类型           正则类型 (posix|pcre)</span></span><br><span class="line">  -D,  <span class="comment">--domains=列表              逗号分隔的可接受的域名列表</span></span><br><span class="line">       <span class="comment">--exclude-domains=列表      逗号分隔的要拒绝的域名列表</span></span><br><span class="line">       <span class="comment">--follow-ftp                跟踪 HTML 文档中的 FTP 链接</span></span><br><span class="line">       <span class="comment">--follow-tags=列表          逗号分隔的跟踪的 HTML 标识列表</span></span><br><span class="line">       <span class="comment">--ignore-tags=列表          逗号分隔的忽略的 HTML 标识列表</span></span><br><span class="line">  -H,  <span class="comment">--span-hosts                递归时转向外部主机</span></span><br><span class="line">  -L,  <span class="comment">--relative                  仅跟踪相对链接</span></span><br><span class="line">  -I,  <span class="comment">--include-directories=列表  允许目录的列表</span></span><br><span class="line">       <span class="comment">--trust-server-names        使用重定向 URL 的最后一段作为本地文件名</span></span><br><span class="line">  -X,  <span class="comment">--exclude-directories=列表  排除目录的列表</span></span><br><span class="line">  -np, <span class="comment">--no-parent                 不追溯至父目录</span></span><br></pre></td></tr></table></figure></p><p>1、使用wget下载单个文件 </p><p>以下的例子是从网络下载一个文件并保存在当前目录<br>wget <a href="http://cn.wordpress.org/wordpress-3.1-zh_CN.zip" target="_blank" rel="noopener">http://cn.wordpress.org/wordpress-3.1-zh_CN.zip</a><br>在下载的过程中会显示进度条，包含（下载完成百分比，已经下载的字节，当前下载速度，剩余下载时间）。<br>2、使用wget -O下载并以不同的文件名保存<br>wget默认会以最后一个符合”/”的后面的字符来命令，对于动态链接的下载通常文件名会不正确。<br>错误：下面的例子会下载一个文件并以名称download.php?id=1080保存 </p><p>wget <a href="http://www.centos.bz/download?id=1" target="_blank" rel="noopener">http://www.centos.bz/download?id=1</a><br>即使下载的文件是zip格式，它仍然以download.php?id=1080命令。<br>正确：为了解决这个问题，我们可以使用参数-O来指定一个文件名： </p><p>wget -O wordpress.zip <a href="http://www.centos.bz/download.php?id=1080" target="_blank" rel="noopener">http://www.centos.bz/download.php?id=1080</a><br>3、使用wget –limit -rate限速下载<br>当你执行wget的时候，它默认会占用全部可能的宽带下载。但是当你准备下载一个大文件，而你还需要下载其它文件时就有必要限速了。 </p><p>wget –limit-rate=300k <a href="http://cn.wordpress.org/wordpress-3.1-zh_CN.zip" target="_blank" rel="noopener">http://cn.wordpress.org/wordpress-3.1-zh_CN.zip</a><br>4、使用wget -c断点续传<br>使用wget -c重新启动下载中断的文件: </p><p>wget -c <a href="http://cn.wordpress.org/wordpress-3.1-zh_CN.zip" target="_blank" rel="noopener">http://cn.wordpress.org/wordpress-3.1-zh_CN.zip</a><br>对于我们下载大文件时突然由于网络等原因中断非常有帮助，我们可以继续接着下载而不是重新下载一个文件。需要继续中断的下载时可以使用-c参数。<br>5、使用wget -b后台下载<br>对于下载非常大的文件的时候，我们可以使用参数-b进行后台下载。<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">wget</span> -<span class="keyword">b </span>http://<span class="meta">cn</span>.wordpress.org/wordpress-<span class="number">3</span>.<span class="number">1</span>-zh_CN.zip </span><br><span class="line"><span class="symbol">Continuing</span> in <span class="keyword">background, </span>pid <span class="number">1840</span>. </span><br><span class="line"><span class="symbol">Output</span> will <span class="keyword">be </span>written to `wget-log’.</span><br></pre></td></tr></table></figure></p><p>你可以使用以下命令来察看下载进度<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f wget-<span class="built_in">log</span></span><br></pre></td></tr></table></figure></p><p>6、伪装代理名称下载<br>有些网站能通过根据判断代理名称不是浏览器而拒绝你的下载请求。不过你可以通过–user-agent参数伪装。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget –user-agent=”Mozilla/<span class="number">5.0</span> (Windows; U; Windows NT <span class="number">6.1</span>; en-US) AppleWebKit/<span class="number">534.16</span> (KHTML, like Gecko) Chrome/<span class="number">10.0</span><span class="number">.648</span><span class="number">.204</span> Safari/<span class="number">534.16</span>″</span><br></pre></td></tr></table></figure></p><p>下载链接<br>7、使用wget –spider测试下载链接<br>当你打算进行定时下载，你应该在预定时间测试下载链接是否有效。我们可以增加–spider参数进行检查。<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget –spider <span class="built_in">URL</span></span><br></pre></td></tr></table></figure></p><p>如果下载链接正确，将会显示<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget –spider URL </span><br><span class="line">Spider mode enabled. <span class="keyword">Check</span> <span class="keyword">if</span> remote <span class="keyword">file</span> exists. </span><br><span class="line"><span class="keyword">HTTP</span> request sent, awaiting response… <span class="number">200</span> OK </span><br><span class="line"><span class="keyword">Length</span>: unspecified [<span class="built_in">text</span>/html] </span><br><span class="line">Remote <span class="keyword">file</span> <span class="keyword">exists</span> <span class="keyword">and</span> could contain further links, </span><br><span class="line">but recursion <span class="keyword">is</span> disabled — <span class="keyword">not</span> retrieving.</span><br></pre></td></tr></table></figure></p><p>这保证了下载能在预定的时间进行，但当你给错了一个链接，将会显示如下错误<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget –spider url </span><br><span class="line">Spider mode enabled. <span class="keyword">Check</span> <span class="keyword">if</span> remote <span class="keyword">file</span> exists. </span><br><span class="line"><span class="keyword">HTTP</span> request sent, awaiting response… <span class="number">404</span> <span class="keyword">Not</span> <span class="keyword">Found</span> </span><br><span class="line">Remote <span class="keyword">file</span> does <span class="keyword">not</span> exist — broken <span class="keyword">link</span>!!!</span><br></pre></td></tr></table></figure></p><p>你可以在以下几种情况下使用spider参数： </p><p>定时下载之前进行检查<br>间隔检测网站是否可用<br>检查网站页面的死链接<br>8、使用wget –tries增加重试次数<br>如果网络有问题或下载一个大文件也有可能失败。wget默认重试20次连接下载文件。如果需要，你可以使用–tries增加重试次数。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget –<span class="attribute">tries</span>=40 URL</span><br></pre></td></tr></table></figure></p><p>9、使用wget -i下载多个文件<br>首先，保存一份下载链接文件<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; filelist<span class="selector-class">.txt</span> </span><br><span class="line">url1 </span><br><span class="line">url2 </span><br><span class="line">url3 </span><br><span class="line">url4</span><br></pre></td></tr></table></figure></p><p>接着使用这个文件和参数-i下载<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -<span class="selector-tag">i</span> filelist.txt</span><br></pre></td></tr></table></figure></p><p>10、使用wget –mirror镜像网站<br>下面的例子是下载整个网站到本地。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget –mirror -<span class="selector-tag">p</span> –convert-links -P ./LOCAL URL </span><br><span class="line">–miror:开户镜像下载 </span><br><span class="line">-<span class="selector-tag">p</span>:下载所有为了html页面显示正常的文件 </span><br><span class="line">–convert-links:下载后，转换成本地的链接 </span><br><span class="line">-P ./LOCAL：保存所有文件和目录到本地指定目录</span><br></pre></td></tr></table></figure></p><p>11、使用wget –reject过滤指定格式下载<br>你想下载一个网站，但你不希望下载图片，你可以使用以下命令。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget –<span class="attribute">reject</span>=gif url</span><br></pre></td></tr></table></figure></p><p>12、使用wget -o把下载信息存入日志文件<br>你不希望下载信息直接显示在终端而是在一个日志文件，可以使用以下命令：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -o download.<span class="built_in">log</span> <span class="built_in">URL</span></span><br></pre></td></tr></table></figure></p><p>13、使用wget -Q限制总下载文件大小<br>当你想要下载的文件超过5M而退出下载，你可以使用以下命令:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -Q5m -<span class="selector-tag">i</span> filelist.txt</span><br></pre></td></tr></table></figure></p><p>注意：这个参数对单个文件下载不起作用，只能递归下载时才有效。<br>14、使用wget -r -A下载指定格式文件<br>可以在以下情况使用该功能 </p><p>下载一个网站的所有图片<br>下载一个网站的所有视频<br>下载一个网站的所有PDF文件<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -r -A<span class="selector-class">.pdf</span> url</span><br></pre></td></tr></table></figure></p><p>15、使用wget FTP下载<br>你可以使用wget来完成ftp链接的下载。<br>使用wget匿名ftp下载<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">wget ftp-url</span></span><br></pre></td></tr></table></figure></p><p>使用wget用户名和密码认证的ftp下载<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget –<span class="attribute">ftp-user</span>=USERNAME –<span class="attribute">ftp-password</span>=PASSWORD url</span><br></pre></td></tr></table></figure></p><p>wget是在Linux下开发的开放源代码的软件，作者是Hrvoje Niksic，后来被移植到包括Windows在内的各个平台上。它有以下功能和特点：<br>（1）支持断点下传功能；这一点，也是网络蚂蚁和FlashGet当年最大的卖点，现在，Wget也可以使用此功能，那些网络不是太好的用户可以放心了；<br>（2）同时支持FTP和HTTP下载方式；尽管现在大部分软件可以使用HTTP方式下载，但是，有些时候，仍然需要使用FTP方式下载软件；<br>（3）支持代理服务器；对安全强度很高的系统而言，一般不会将自己的系统直接暴露在互联网上，所以，支持代理是下载软件必须有的功能；<br>（4）设置方便简单；可能，习惯图形界面的用户已经不是太习惯命令行了，但是，命令行在设置上其实有更多的优点，最少，鼠标可以少点很多次，也不要担心是否错点鼠标；<br>（5）程序小，完全免费；程序小可以考虑不计，因为现在的硬盘实在太大了；完全免费就不得不考虑了，即使网络上有很多免费软件，但是，这些软件的广告不是我们喜欢的；<br>wget虽然功能强大，但是使用起来还是比较简单的，基本的语法是：wget [参数列表] URL。下面就结合具体的例子来说明一下wget的用法。 </p><p>1、下载整个http或者ftp站点。<br>wget <a href="http://place.your.url/here" target="_blank" rel="noopener">http://place.your.url/here</a><br>这个命令可以将<a href="http://place.your.url/here" target="_blank" rel="noopener">http://place.your.url/here</a> 首页下载下来。使用-x会强制建立服务器上一模一样的目录，如果使用-nd参数，那么服务器上下载的所有内容都会加到本地当前目录。 </p><p>wget -r <a href="http://place.your.url/here" target="_blank" rel="noopener">http://place.your.url/here</a><br>这 个命令会按照递归的方法，下载服务器上所有的目录和文件，实质就是下载整个网站。这个命令一定要小心使用，因为在下载的时候，被下载网站指向的所有地址同 样会被下载，因此，如果这个网站引用了其他网站，那么被引用的网站也会被下载下来！基于这个原因，这个参数不常用。可以用-l number参数来指定下载的层次。例如只下载两层，那么使用-l 2。 </p><p>要是您想制作镜像站点，那么可以使用－m参数，例如：wget -m <a href="http://place.your.url/here" target="_blank" rel="noopener">http://place.your.url/here</a><br>这时wget会自动判断合适的参数来制作镜像站点。此时，wget会登录到服务器上，读入robots.txt并按robots.txt的规定来执行。<br>2、断点续传。<br>当文件特别大或者网络特别慢的时候，往往一个文件还没有下载完，连接就已经被切断，此时就需要断点续传。wget的断点续传是自动的，只需要使用-c参数，例如：<br>wget -c <a href="http://the.url.of/incomplete/file" target="_blank" rel="noopener">http://the.url.of/incomplete/file</a><br>使用断点续传要求服务器支持断点续传。-t参数表示重试次数，例如需要重试100次，那么就写-t 100，如果设成-t 0，那么表示无穷次重试，直到连接成功。-T参数表示超时等待时间，例如-T 120，表示等待120秒连接不上就算超时。<br>3、批量下载。<br>如果有多个文件需要下载，那么可以生成一个文件，把每个文件的URL写一行，例如生成文件download.txt，然后用命令：wget -i download.txt<br>这样就会把download.txt里面列出的每个URL都下载下来。（如果列的是文件就下载文件，如果列的是网站，那么下载首页）<br>4、选择性的下载。<br>可以指定让wget只下载一类文件，或者不下载什么文件。例如：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -m –reject=gif <span class="string">http:</span><span class="comment">//target.web.site/subdirectory</span></span><br></pre></td></tr></table></figure></p><p>表示下载<a href="http://target.web.site/subdirectory，但是忽略gif文件。–accept=LIST" target="_blank" rel="noopener">http://target.web.site/subdirectory，但是忽略gif文件。–accept=LIST</a> 可以接受的文件类型，–reject=LIST拒绝接受的文件类型。<br>5、密码和认证。<br>wget只能处理利用用户名/密码方式限制访问的网站，可以利用两个参数：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">–<span class="attribute">http-user</span>=USER设置HTTP用户 </span><br><span class="line">–<span class="attribute">http-passwd</span>=PASS设置HTTP密码</span><br></pre></td></tr></table></figure></p><p>对于需要证书做认证的网站，就只能利用其他下载工具了，例如curl。<br>6、利用代理服务器进行下载。<br>如果用户的网络需要经过代理服务器，那么可以让wget通过代理服务器进行文件的下载。此时需要在当前用户的目录下创建一个.wgetrc文件。文件中可以设置代理服务器：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http-proxy</span> = <span class="number">111.111</span>.<span class="number">111.111</span>:<span class="number">8080</span> </span><br><span class="line"><span class="attr">ftp-proxy</span> = <span class="number">111.111</span>.<span class="number">111.111</span>:<span class="number">8080</span></span><br></pre></td></tr></table></figure></p><p>分别表示http的代理服务器和ftp的代理服务器。如果代理服务器需要密码则使用：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">–<span class="attribute">proxy-user</span>=USER设置代理用户 </span><br><span class="line">–<span class="attribute">proxy-passwd</span>=PASS设置代理密码</span><br></pre></td></tr></table></figure></p><p>这两个参数。<br>使用参数–proxy=on/off 使用或者关闭代理。<br>wget还有很多有用的功能，需要用户去挖掘。<br>中文文档名在平常的情况下会被编码， 但是在 –cut-dirs 时又是正常的，<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -r -np -nH –cut-dirs=<span class="number">3</span> ftp:<span class="regexp">//</span>host<span class="regexp">/test/</span> </span><br><span class="line">测试.txt</span><br></pre></td></tr></table></figure></p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -<span class="keyword">r</span> -np -nH -nd ftp:<span class="comment">//host/test/ </span></span><br><span class="line"><span class="built_in">%B</span>4<span class="built_in">%FA</span><span class="built_in">%B</span>8<span class="built_in">%D</span>5.txt </span><br><span class="line">wget “ftp:<span class="comment">//host/test/*” </span></span><br><span class="line"><span class="built_in">%B</span>4<span class="built_in">%FA</span><span class="built_in">%B</span>8<span class="built_in">%D</span>5.txt</span><br></pre></td></tr></table></figure><p>由 於不知名的原因，可能是为了避开特殊档名， wget 会自动将抓取档名的部分用 encode_string 处理过， 所以该 patch 就把被 encode_string 处理成 “%3A” 这种东西， 用 decode_string 还原成 “:”，并套用在目录与档案名称的部分，decode_string 是 wget 内建的函式。<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -t0 -c -nH -x -np -b -m -P <span class="regexp">/home/</span>sunny<span class="regexp">/NOD32view/</span> http:<span class="regexp">//</span>downloads1.kaspersky-labs.com<span class="regexp">/bases/</span> -o wget.log</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云安装MySql</title>
      <link href="/2019/02/21/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%AE%89%E8%A3%85MySql/"/>
      <url>/2019/02/21/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%AE%89%E8%A3%85MySql/</url>
      
        <content type="html"><![CDATA[<p>1.本次安装MySql版本为mysql-5.7.20，使用wget命令对MySql安装压缩包进行下载，如下：</p><p> wget <a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz" target="_blank" rel="noopener">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz</a></p><p>下载目录为 /opt</p><p><img src="https://i.loli.net/2019/02/21/5c6eab6fd5e2b.png" alt="01.png"></p><p>2.在opt目录下执行命令：tar -zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz 对刚才下载的压缩包进行解压</p><p>3.执行命令： mkdir /usr/local/mysql 创建文件夹在user/local下创建文件夹mysql</p><p>4.执行命令： mv /opt/mysql-5.7.20-linux-glibc2.12-x86_64/* /usr/local/mysql/ 将压缩包文件移动到（3）创建文件夹中</p><p>5.执行命令： groupadd mysql 创建mysql用户组</p><p>6.执行命令： useradd -r -g mysql mysql 创建mysql用户，并赋予读写权限</p><p>7.执行命令 ：chown -R mysql mysql/  改变/usr/local/mysql 文件夹的所属用户</p><p>8.执行命令： chgrp -R mysql mysql/  改变/usr/local/mysql 文件夹的用户组为mysql</p><p>9.执行命令：  sudo apt-get install libaio-dev 安装libaio包</p><p>10.执行命令 ：vi /etc/my.cnf  复制以下内容：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">socket</span> = /tmp/mysql.sock</span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">character_set_server</span>=utf8</span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET NAMES utf8'</span></span><br><span class="line"><span class="attr">basedir</span>=/usr/local/mysql</span><br><span class="line"><span class="attr">datadir</span>=/usr/local/mysql/data</span><br><span class="line"><span class="attr">socket</span>=/tmp/mysql.sock</span><br><span class="line"><span class="attr">log-error</span>=/var/log/mysqld.log</span><br><span class="line"><span class="attr">pid-file</span>=/var/lib/mysqld/mysqld.pid</span><br><span class="line"><span class="comment">#不区分大小写</span></span><br><span class="line"><span class="attr">lower_case_table_names</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">5000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default-time_zone</span> = <span class="string">'+8:00'</span></span><br></pre></td></tr></table></figure></p><p>执行:wq 保存文件</p><p>11.执行命令： vi  /var/log/mysqld.log  然后直接保存退出:wq(PS:即新建该文件)</p><p>12.执行命令：chmod 777 /var/log/mysqld.log  修改文件权限</p><p>13.执行命令：chown mysql:mysql /var/log/mysqld.log 修改文件用户组</p><p>14.执行命令：/usr/local/mysql/bin/mysqld –initialize –user=mysql –basedir=/usr/local/mysql –datadir=/usr/local/mysql/data –lc_messages_dir=/usr/local/mysql/share –lc_messages=en_US<br>自行完成后mysql文件夹中会自动生成一个data文件夹，如执行失败或未创建data文件夹，自行创建一个，并修改用户组（见7,8），然后执行该命令</p><p><img src="https://i.loli.net/2019/02/21/5c6eab7002705.png" alt="02.png"></p><p>15.执行命令：vi /var/log/mysqld.log<br><img src="https://i.loli.net/2019/02/21/5c6eab701eeb8.png" alt="03.png"></p><p>root@localhost:  之后为mysql初始密码，复制在电脑上先存档。</p><p>16.执行命令：mkdir /var/lib/mysqld 创建文件夹</p><p>17.执行命令：chmod 777 /var/lib/mysqld/  修改文件夹权限</p><p>18.进入文件夹mysqld：cd mysqld  执行命令：vi mysqld.pid 直接保存退出</p><p>19.执行命令：chmod 777 mysqld.pid  修改文件权限</p><p>20.执行命令：chown mysql:mysql mysqld.pid  修改文件用户组</p><p>21.执行命令： cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld 复制文件到开机启动文件夹</p><p>22.执行命令：sudo sysv-rc-conf mysqld on 设置开机自启(可通过该命令安装：sudo apt-get install sysv-rc-conf)</p><p>23.执行命令：service mysqld start 启动mysql服务，通过ps -ef | grep mysql可查看服务是否启动</p><p><img src="https://i.loli.net/2019/02/21/5c6eab703e038.png" alt="04.png"></p><p>24.执行命令：/usr/local/mysql/bin/mysql -u root -p 进去mysql<br><img src="https://i.loli.net/2019/02/21/5c6eab703f107.png" alt="05.png"></p><p>输入15步骤复制出来的密码后即可进去</p><p>25.进入后，执行命令： set password = password(‘newpassword’);即可修改登录密码</p><p>#26.执行命令： use mysql;进去数据库，执行update user set host = ‘%’,authentication_string = password(‘newpassword’) where user = ‘root’修改客户端登陆root密码及登录权限，执行命令：flush privileges;刷新权限，最后使用Navicat for Mysql等客户端即可连上服务器MySql</p><p><img src="https://i.loli.net/2019/02/21/5c6eab70b08a8.png" alt="06.png"></p><hr><p><em>原文：<a href="https://blog.csdn.net/qq_30160669/article/details/80718422" target="_blank" rel="noopener">https://blog.csdn.net/qq_30160669/article/details/80718422</a></em></p>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python中list的清空</title>
      <link href="/2019/02/21/Python%E4%B8%ADlist%E7%9A%84%E6%B8%85%E7%A9%BA/"/>
      <url>/2019/02/21/Python%E4%B8%ADlist%E7%9A%84%E6%B8%85%E7%A9%BA/</url>
      
        <content type="html"><![CDATA[<p>首先需要明确，在Python中，清空列表的操作有两类四种：</p><h2 id="第一类，在非函数参数的list中，可以使用del-lst-new-或者list-new-来清空列表。"><a href="#第一类，在非函数参数的list中，可以使用del-lst-new-或者list-new-来清空列表。" class="headerlink" title="第一类，在非函数参数的list中，可以使用del lst_new[] 或者list_new = [] 来清空列表。"></a>第一类，在非函数参数的list中，可以使用del lst_new[] 或者list_new = [] 来清空列表。</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">del_lst.py</span><br><span class="line"></span><br><span class="line">lst_new <span class="type"></span>= []</span><br><span class="line">lst_new<span class="type"></span>.append(<span class="number">3</span>)</span><br><span class="line">lst_new<span class="type"></span>.append(<span class="string">"233"</span>)</span><br><span class="line">print lst_new<span class="type"></span></span><br><span class="line"><span class="type">lst_new</span> = []</span><br><span class="line">print lst_new<span class="type"></span></span><br></pre></td></tr></table></figure><p>执行结果：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">3</span>, '<span class="number">233</span>']</span><br><span class="line">[]</span><br></pre></td></tr></table></figure></p><p>很明显，<strong>在普通的非函数参数list中只需要使用 del lst_new[] 或者 list_new = [] 就可以清空列表。</strong></p><h2 id="第二类，对于作为函数参数的list，用上面的方法是不行的，因为函数执行完后，list长度是不变的，但是可以在函数中释放一个参数list所占内存：-del-lst-new-或者-lst-new-，达到清空列表的目的，速度很快，也彻底。"><a href="#第二类，对于作为函数参数的list，用上面的方法是不行的，因为函数执行完后，list长度是不变的，但是可以在函数中释放一个参数list所占内存：-del-lst-new-或者-lst-new-，达到清空列表的目的，速度很快，也彻底。" class="headerlink" title="第二类，对于作为函数参数的list，用上面的方法是不行的，因为函数执行完后，list长度是不变的，但是可以在函数中释放一个参数list所占内存： del lst_new[:] 或者 lst_new [:] = []，达到清空列表的目的，速度很快，也彻底。"></a>第二类，对于作为函数参数的list，用上面的方法是不行的，因为函数执行完后，list长度是不变的，但是可以在函数中释放一个参数list所占内存： del lst_new[:] 或者 lst_new [:] = []，达到清空列表的目的，速度很快，也彻底。</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">del_lst.py</span><br><span class="line"></span><br><span class="line"> <span class="keyword">from</span> del_lst_fun <span class="keyword">import</span> *</span><br><span class="line"> choice = input(<span class="string">"请输入所需功能的编号："</span>)</span><br><span class="line">    <span class="keyword">if</span> choice == <span class="number">1</span>:</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    elif choice == <span class="number">7</span>:</span><br><span class="line">        new_lst(lst_shape)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">del_lst_fun.py</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_lst</span><span class="params">(lst_shape)</span>:</span></span><br><span class="line">    <span class="comment"># lst_shape[:] = [] 这样写也是可以的</span></span><br><span class="line">    <span class="keyword">del</span> lst_shape[:]</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"数据已清空！"</span></span><br></pre></td></tr></table></figure><p>执行结果：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">3</span>, <span class="string">'233'</span>]</span><br><span class="line">[]</span><br><span class="line">数据已清空！</span><br></pre></td></tr></table></figure></p><p><strong>由此可知，作为函数参数的list，必须使用del lst_new[:] 或者 lst_new [:] = [] 以达到清空列表的目的。</strong></p><h2 id="分析："><a href="#分析：" class="headerlink" title="分析： "></a><strong>分析： </strong></h2><h2 id="Python-赋值，往往是通过指针完成的，a-b，只是让a的指针指向了b-并未把b的内容拷贝到a，由此可知，其实函数的本意是将参数list指向的内存清空，用list-，并不能清空L指向的内存。"><a href="#Python-赋值，往往是通过指针完成的，a-b，只是让a的指针指向了b-并未把b的内容拷贝到a，由此可知，其实函数的本意是将参数list指向的内存清空，用list-，并不能清空L指向的内存。" class="headerlink" title="Python 赋值，往往是通过指针完成的，a=b，只是让a的指针指向了b,并未把b的内容拷贝到a，由此可知，其实函数的本意是将参数list指向的内存清空，用list=[]，并不能清空L指向的内存。"></a>Python 赋值，往往是通过指针完成的，a=b，只是让a的指针指向了b,并未把b的内容拷贝到a，由此可知，其实函数的本意是将参数list指向的内存清空，用list=[]，并不能清空L指向的内存。</h2><ul><li>via <em><a href="https://blog.csdn.net/yuanxiang01/article/details/78566893" target="_blank" rel="noopener">https://blog.csdn.net/yuanxiang01/article/details/78566893</a></em></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java链表基本概念</title>
      <link href="/2019/02/21/java%E9%93%BE%E8%A1%A8%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
      <url>/2019/02/21/java%E9%93%BE%E8%A1%A8%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<p>链表是一种根据元素节点逻辑关系排列起来的一种数据结构。利用链表可以保存多个数据，这一点类似于数组的概念，但是数组本身有一个缺点—— 数组的长度固定，不可改变，在长度固定的情况下首选的肯定是数组，但是在现实的开发之中往往要保存的内容长度是不确定的，那么此时就可以利用链表这样的结构来代替数组的使用。</p><p>链表是一种最为简单的数据结构，它的主要目的是依靠引用关系来实现多个数据的保存，那么下面假设现在要保存的数据是字符串（引用类型），则可以按照图所示的关系进行保存。<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//每一个链表实际上就是由多个节点组成的</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;    <span class="comment">//定义一个节点</span></span><br><span class="line">  <span class="keyword">private</span> String <span class="keyword">data</span>; <span class="comment">//用于保存数据</span></span><br><span class="line">  <span class="keyword">private</span> Node next;   <span class="comment">//用于保存下一个节点</span></span><br><span class="line">  <span class="comment">//每一个Node类对象都必须保存有响应的数据</span></span><br><span class="line">  <span class="keyword">public</span> Node(String <span class="keyword">data</span>)&#123;</span><br><span class="line">  <span class="keyword">this</span>.<span class="keyword">data</span> = <span class="keyword">data</span> ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> void setNext(Node next)&#123;</span><br><span class="line">  <span class="keyword">this</span>.next = next ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> Node getNext()&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.next ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> String getData()&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.<span class="keyword">data</span> ;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>以上只是一个专门用来保存节点关系的类，要通过其它方法将所有节点链接起来</p><p>Ø  在进行链表操作的时候，首先需要的是一个根节点（第一个节点即为根节点），之后每一个节点的引用都保存在上一节点的next属性之中，而在进行输出的时候也应该按照节点的先后顺序，一个一个取得每一个节点所包装的数据<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkDemo</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line"><span class="comment">//第一步：准备数据</span></span><br><span class="line">Node root = <span class="keyword">new</span> <span class="type">Node</span>(<span class="string">"火车头"</span>) ;</span><br><span class="line">Node n1 = <span class="keyword">new</span> <span class="type">Node</span>(<span class="string">"车厢A"</span>) ;</span><br><span class="line">Node n2 = <span class="keyword">new</span> <span class="type">Node</span>(<span class="string">"车厢B"</span>) ;</span><br><span class="line"></span><br><span class="line">root.setNext(n1);</span><br><span class="line">n1.setNext(n2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二步：取出所有数据</span></span><br><span class="line">Node currentNode = root ;<span class="comment">//从当前根节点开始读取</span></span><br><span class="line"><span class="keyword">while</span>( currentNode !=  <span class="literal">null</span>)&#123;</span><br><span class="line">System.out.println(currentNode.getData()) ;</span><br><span class="line"><span class="comment">//将下一个节点设置为当前节点s</span></span><br><span class="line">currentNode = currentNode.getNext() ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这样，就将他们链接起来了，但是这样的操作在实际使用中很不方便，最好的方法是递归操作完成</p><p>利用递归操作链接节点</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LinkDemo</span> &#123;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span> &#123;</span><br><span class="line"><span class="comment">//第一步：准备数据</span></span><br><span class="line">Node root = <span class="keyword">new</span> Node(<span class="string">"火车头"</span>) ;</span><br><span class="line">Node n1 = <span class="keyword">new</span> Node(<span class="string">"车厢A"</span>) ;</span><br><span class="line">Node n2 = <span class="keyword">new</span> Node(<span class="string">"车厢B"</span>) ;</span><br><span class="line"></span><br><span class="line">root.setNext(n1);</span><br><span class="line">n1.setNext(n2);</span><br><span class="line">print(root);</span><br><span class="line"><span class="comment">/*//第二步：取出所有数据</span></span><br><span class="line"><span class="comment">Node currentNode = root ;//从当前根节点开始读取</span></span><br><span class="line"><span class="comment">while( currentNode !=  null)&#123;</span></span><br><span class="line"><span class="comment">System.out.println(currentNode.getData()) ;</span></span><br><span class="line"><span class="comment">//将下一个节点设置为当前节点s</span></span><br><span class="line"><span class="comment">currentNode = currentNode.getNext() ;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span>(<span class="params">Node current</span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>( current == <span class="literal">null</span> )&#123;<span class="comment">//递归结束条件</span></span><br><span class="line"><span class="keyword">return</span> ; </span><br><span class="line">&#125;</span><br><span class="line">System.<span class="keyword">out</span>.println(current.getData()) ;</span><br><span class="line">print( current.getNext() );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就方便很多了，那么还有什么问题呢？</p><p>显然是主方法中配置关系的语句过多，主方法不像一个大管家管理所有的类了，所以要定义一个类，用来专门进行数据间关系的处理，而主方法负责管理就可以了</p><p>完整代码<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//每一个链表实际上就是由多个节点组成的</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123; <span class="comment">// 定义一个节点</span></span><br><span class="line"><span class="keyword">private</span> String <span class="keyword">data</span>; <span class="comment">// 用于保存数据</span></span><br><span class="line"><span class="keyword">private</span> Node next; <span class="comment">// 用于保存下一个节点</span></span><br><span class="line"><span class="comment">// 每一个Node类对象都必须保存有响应的数据</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> Node(String <span class="keyword">data</span>) &#123;</span><br><span class="line"><span class="keyword">this</span>.<span class="keyword">data</span> = <span class="keyword">data</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> void setNext(Node next) &#123;</span><br><span class="line"><span class="keyword">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> Node getNext() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.next;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> String getData() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.<span class="keyword">data</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 实现节点的添加</span></span><br><span class="line"><span class="comment">// 第一次调用（Link）：this代表Link.root</span></span><br><span class="line"><span class="comment">// 第二次调用（Node）：this代表Link.root.next</span></span><br><span class="line"><span class="comment">// 第三次调用（Node）：this代表Link.root.next.next</span></span><br><span class="line"><span class="keyword">public</span> void addNode(Node newNode) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.next == <span class="literal">null</span>) &#123; <span class="comment">// 如果只有一个节点</span></span><br><span class="line"><span class="keyword">this</span>.next = newNode; <span class="comment">// 保存新节点</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 当前节点后面还有节点</span></span><br><span class="line"><span class="comment">// 当前节点的下一个节点继续保存</span></span><br><span class="line"><span class="keyword">this</span>.next.addNode(newNode);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 第一次调用（Link）：this代表Link.root</span></span><br><span class="line"><span class="comment">// 第二次调用（Node）：this代表Link.root.next</span></span><br><span class="line"><span class="comment">// 第三次调用（Node）：this代表Link.root.next.next</span></span><br><span class="line"><span class="keyword">public</span> void printNode() &#123;</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="keyword">this</span>.<span class="keyword">data</span>);<span class="comment">// 输出当前数据</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.next != <span class="literal">null</span>) &#123;<span class="comment">// 如果还有下一个节点</span></span><br><span class="line"><span class="keyword">this</span>.next.printNode();<span class="comment">// 输出下一节点</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkDemo</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line"> Link link = new Link() ;</span><br><span class="line"> link.add(<span class="string">"hello"</span>);   <span class="comment">//存放数据</span></span><br><span class="line"> link.add(<span class="string">"world"</span>);</span><br><span class="line"> link.add(<span class="string">"wwww"</span>);</span><br><span class="line"> link.print();     <span class="comment">//展示数据</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//负责数据的设置和输出</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Link</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Node root; <span class="comment">//根节点</span></span><br><span class="line"><span class="comment">//增加数据</span></span><br><span class="line">  <span class="keyword">public</span> void add (String <span class="keyword">data</span>)&#123;</span><br><span class="line">  <span class="comment">//为了设置数据的先后关系，所以将data包装在一个Node类对象</span></span><br><span class="line">  Node newNode = new Node(<span class="keyword">data</span>);</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.root == <span class="literal">null</span> )&#123;  <span class="comment">//一个链表只有一个根节点</span></span><br><span class="line">  <span class="keyword">this</span>.root = newNode;  <span class="comment">//将新的节点设置为根节点</span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">  <span class="comment">//从root节点后找到合适的位置</span></span><br><span class="line">  <span class="keyword">this</span>.root.addNode(newNode);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//输出数据</span></span><br><span class="line">  <span class="keyword">public</span> void print()&#123;</span><br><span class="line">  <span class="keyword">if</span>( <span class="keyword">this</span>.root != <span class="literal">null</span> )&#123;</span><br><span class="line">  <span class="keyword">this</span>.root.printNode();</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>via <em><a href="https://blog.csdn.net/qq_37199582/article/details/79244657" target="_blank" rel="noopener">https://blog.csdn.net/qq_37199582/article/details/79244657</a></em></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于使用Tomcat容器</title>
      <link href="/2019/02/21/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8Tomcat%E5%AE%B9%E5%99%A8/"/>
      <url>/2019/02/21/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8Tomcat%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>Q：使用Tomcat容器，提示信息: 至少有一个JAR被扫描用于TLD但尚未包含TLD</p><h2 id="A：没有报错，都是些-INFO-级别的输出"><a href="#A：没有报错，都是些-INFO-级别的输出" class="headerlink" title="A：没有报错，都是些 INFO 级别的输出"></a>A：没有报错，都是些 INFO 级别的输出</h2>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Dos命令大全</title>
      <link href="/2019/02/21/Dos%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2019/02/21/Dos%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>基础命令<br>1 dir<br>无参数：查看当前所在目录的文件和文件夹。<br>/s：查看当前目录已经其所有子目录的文件和文件夹。<br>/a：查看包括隐含文件的所有文件。<br>/ah：只显示出隐含文件。<br>/w：以紧凑方式（一行显示5个文件）显示文件和文件夹。<br>/p：以分页方式（显示一页之后会自动暂停）显示。<br>|more：前面那个符号是“\”上面的那个，叫做重定向符号，就是把一个<br>命令的结果输出为另外一个命令的参数。more也是一个命令，dir /w |more<br>得到的结果和dir /w /p的结果是一样的。<br>其他的参数大家可以用：dir/?查看。</p><p>2 cd<br>cd 目录名：进入特定的目录。如果看到有个目录显示为：abcdef ghi 就<br>输入：cdabcdef.ghi进入该目录。<br>cd\ 退回到根目录。<br>cd..退回到上一级目录。</p><p>3 md rd<br>md 目录名：建立特定的文件夹。 （dos下面习惯叫目录，win下面习惯叫文<br>件夹。呵呵！）<br>rd 目录名：删除特定的文件夹。</p><p>4 cls<br>清除屏幕。</p><p>5 copy<br>copy 路径\文件名 路径\文件名 ：把一个文件拷贝到另一个地方。</p><p>6 move<br>move 路径\文件名 路径\文件名 ：把一个文件移动（就是剪切+复制）到另<br>一个地方。</p><p>7 del<br>del 文件名：删除一个文件。<br>del .：删除当前文件夹下所有文件。<br>del不能删除文件夹。</p><p>8 deltree<br>删除文件夹和它下面的所有子文件夹还有文件，厉害。。。不要乱用。</p><p>9 format<br>format x: ：x代表盘符，格式化一个分区。在dos下是用fat文件系统格式<br>化的，在windows2000安装的时候会问你要不要转换为ntfs。</p><p>10 type<br>type 文本文件名：显示出文本文件的内容。</p><p>11 edit<br>其实这是个小程序，编辑文本文件用的。</p><p>12 ren<br>ren 旧文件名 新文件名：改文件名。</p><p>二、关于网络的常用命令<br>1 ping<br>ping 主机ip或名字：向目标主机发送4个icmp数据包，测试对方主机是否收<br>到并响应，一般常用于做普通网络是否通畅的测试。但是ping不同不代表网<br>络不通，有可能是目标主机装有防火墙并且阻止了icmp响应。<br>ping -t ：不停的发送数据包。当然都很小，不能称作攻击。有些人自己写<br>了一些类似于ping命令的程序，不停的发送很大的数据包，以阻塞目标主机<br>的网络连接。</p><p>2 net<br>建议是用net /?获取具体帮助信息。实在是有很多参数，参数下面还有参<br>数。常用：net view \主机 来看共享，net start/stop 服务 来启动和停<br>止服务，信使服务个人不太喜欢。</p><p>3 netstat<br>netstat 主机：查看主机当前的tcp/ip连接状态，如端口的状态。</p><p>4 nbtstat<br>nbtstat 主机：查看主机使用的NetBIOS name。</p><p>5 tracert<br>tracert 主机：查看从你自己到目标逐机到底经过了那些路径。如：<br>tracert <a href="http://www.ncie.gov.cn" target="_blank" rel="noopener">www.ncie.gov.cn</a> 然后等待。。。就会看到你经过的一个个路由节<br>点，一般大一点的路由器，如电信的主干路由，除了ip以外，都有英文标示<br>的。</p><p>6 pathping<br>pathping 主机：类似tracert，但可以显示一些tracert不能显示出来的信<br>息。可以自己试试。</p><p>7 ftp<br>字符方式的ftp，我喜欢用；）不用装cuteftp了。</p><p>8 telnet<br>字符方式的远程登录程序，是网络人员极其爱用的远程登录程序。我最近常<br>用来调试邮件服务器。</p><p>9 ipconfig 非常有用的网络配置、排错。。。命令。<br>不加参数显示当前机器的网络接口状态。<br>/all 先是详细的信息。<br>/release 释放当前ip。<br>/renew 重新申请ip。<br>/flushdns 刷新dns缓存。<br>/registerdns 重新栽dns服务器上注册自己。<br>。。。。。。</p><p>10 arp 操作当前的arp缓存。<br>-a 显示arp缓存。<br>-d 删除一条缓存纪录。<br>-s 田家一条缓存纪录。</p><p>11 nslookup 排除dns错误的利器。是一个交互的工具。使用之前请先努力弄清楚dns的作用以及dns的工作原理。</p><p>xcopy是一个外部命令，也就是说，是一个小程序，有的时候会发现软盘上没有，硬盘上也没有。。。昏倒。。。当然勇气来使比copy好用，我喜欢加/e参数。<br>smartdrv.exe 加载磁盘缓存，参数是缓存的大小，单位是kb。<br>如：smartdrv 32768 就是加载32M的缓存。<br>缓存的作用在你安装WIN2K的时候非常明显！不加缓存装WIN2K PRO要3小时左右，加载8M缓存后，只要30分钟。<br>原理是在内存中划分出一块区域，在安装期间不断地把硬盘上的数据读取到那块缓存区域中，充分利用了内存。</p><p>AT和任务计划作用一样。<br>以下是使用方法，可以通过在命令提示符下面输入：AT /?获得帮助。</p><p>AT 命令安排在特定日期和时间运行命令和程序。<br>要使用 AT 命令，计划服务必须已在运行中。 </p><p>AT [\computername] [ [id] [/DELETE] | /DELETE [/YES]]<br>AT [\computername] time [/INTERACTIVE]<br>[ /EVERY:date[,…] | /NEXT:date[,…]] “command”</p><p>\computername 指定远程计算机。 如果省略这个参数，会计划在本地计算机上运行命令。<br>\127.0.0.1代表本机。和不加这个参数意思一样。</p><p>id 指定给已计划命令的识别号。<br>用来识别任务，比如你要添加好几个任务，ID=1就代表第一个喽！</p><p>/delete 删除某个已计划的命令。如果省略 id，<br>计算机上所有已计划的命令都会被删除。<br>/yes 不需要进一步确认时，跟删除所有作业<br>的命令一起使用。<br>time 指定运行命令的时间。<br>/interactive 允许作业在运行时，与当时登录的用户<br>桌面进行交互。<br>/every:date[,…] 每个月或每个星期在指定的日期运行命令。<br>如果省略日期，则默认为在每月的本日运行。<br>/next:date[,…] 指定在下一个指定日期(如，下周四)运行命令。<br>如果省略日期，则默认为在每月的本日运行。<br>“command” 准备运行的 Windows NT 命令或批处理程序。</p>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java中Stack类的用法</title>
      <link href="/2019/02/21/Java%E4%B8%ADStack%E7%B1%BB%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2019/02/21/Java%E4%B8%ADStack%E7%B1%BB%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>java中stack的使用方法，堆栈是一种”后进先出”（LIFO） 的数据结构， 只能在一端进行插入（称为”压栈”） 或删除 （称为”出栈”）数据的操作,下面看示例吧</p><p>JAVA 中，使用 java.util.Stack 类的构造方法创建对象。</p><p> public class Stack extends vector</p><p> 构造方法 ： public Stack() 创建一个空 Stack。</p><p><strong>方法：</strong>  </p><ol><li>public push  （item ）  把项 压入栈顶。其作用与 addElement (item ) 相同。</li></ol><p>参数 item 压入栈顶的项 。 返回： item 参数 ；</p><ol start="2"><li>public pop () 移除栈顶对象，并作为函数的值 返回该对象。</li></ol><p>返回：栈顶对象（Vector 对象的中的最后一项）。</p><p>注意： 如果堆栈是空的 ，抛出异常EmptyStackException 。。。</p><ol start="3"><li>public peek() 查看栈顶对象而不移除它。。</li></ol><p>返回：栈顶对象（Vector 对象的中的最后一项）。</p><p>注意：如果堆栈是空的， 抛出异常EmptyStackException  。。。</p><ol start="4"><li><p>public boolean isEmpty()或者empty() （测试堆栈是否为空。）  当且仅当堆栈中不含任何项时 返回 true，否则 返回 false.</p></li><li><p>public int search  (object o)  返回对象在堆栈中位置， 以 1 为基数， 如果对象 ｏ是栈中的一项，该方法返回距离　栈顶最近的出现位置到栈顶的距离；　栈中最上端项的距离为　１　。　使用equals 方法比较 o 与 堆栈中的项。。。  </p></li></ol><p>参数： o 目标对象；</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">package StackAndQueue;</span><br><span class="line"> </span><br><span class="line">import java.util.Enumeration;</span><br><span class="line">import java.util.<span class="keyword">Stack</span>;</span><br><span class="line"> </span><br><span class="line">public <span class="keyword">class</span> StackTest &#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public static void main(String[] <span class="keyword">args</span>) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">Stack</span> <span class="keyword">stack</span>=new <span class="keyword">Stack</span>();</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"11111, address, 29999.3 三个元素入栈"</span>); </span><br><span class="line"><span class="keyword">stack</span>.push(11111);</span><br><span class="line">printStack(<span class="keyword">stack</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">stack</span>.push(<span class="string">"address"</span>);</span><br><span class="line">printStack(<span class="keyword">stack</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">stack</span>.push(29999.3);</span><br><span class="line">printStack(<span class="keyword">stack</span>);</span><br><span class="line"></span><br><span class="line">String s=new <span class="built_in">String</span>(<span class="string">"address"</span>);</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"address在栈中的位置："</span>+<span class="keyword">stack</span>.<span class="keyword">search</span>(s));</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"11111在栈中的位置："</span>+<span class="keyword">stack</span>.<span class="keyword">search</span>(11111));</span><br><span class="line"></span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"11111, address, 29999.3 三个元素出栈："</span>);</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"元素"</span>+<span class="keyword">stack</span>.pop()+<span class="string">"出栈"</span>);</span><br><span class="line">printStack(<span class="keyword">stack</span>);</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"元素"</span>+<span class="keyword">stack</span>.pop()+<span class="string">"出栈"</span>);</span><br><span class="line">printStack(<span class="keyword">stack</span>);</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"元素"</span>+<span class="keyword">stack</span>.pop()+<span class="string">"出栈"</span>);</span><br><span class="line">printStack(<span class="keyword">stack</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public static void printStack(<span class="keyword">Stack</span> <span class="keyword">stack</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">stack</span>.empty())</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"栈是空的，没有元素"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"栈中的元素："</span>);</span><br><span class="line">Enumeration items=<span class="keyword">stack</span>.elements();<span class="comment">//获取stack中的元素</span></span><br><span class="line"><span class="keyword">while</span>(items.hasMoreElements())</span><br><span class="line">&#123;</span><br><span class="line">System.<span class="keyword">out</span>.<span class="keyword">print</span>(items.nextElement()+<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.<span class="keyword">out</span>.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * <span class="keyword">Stack</span>类</span><br><span class="line"> * 栈：桶型或箱型数据类型，后进先出，相对堆Heap为二叉树类型，可以快速定位并操作</span><br><span class="line"> * <span class="keyword">Stack</span>&lt;<span class="keyword">E</span>&gt;，支持泛型</span><br><span class="line"> * public class <span class="keyword">Stack</span>&lt;<span class="keyword">E</span>&gt; extends Vector&lt;<span class="keyword">E</span>&gt;</span><br><span class="line"> * <span class="keyword">Stack</span>的方法调用的Vector的方法，被synchronized修饰，为线程安全(Vector也是)</span><br><span class="line"> * <span class="keyword">Stack</span> methods：</span><br><span class="line"> * push : 把项压入堆栈顶部 ，并作为此函数的值返回该对象</span><br><span class="line"> * pop : 移除堆栈顶部的对象，并作为此函数的值返回该对象 </span><br><span class="line"> * peek : 查看堆栈顶部的对象，，并作为此函数的值返回该对象，但不从堆栈中移除它</span><br><span class="line"> * empty : 测试堆栈是否为空 </span><br><span class="line"> * search : 返回对象在堆栈中的位置，以 <span class="number">1</span> 为基数 </span><br><span class="line"> * */</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">package ca.<span class="built_in">map</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StackX</span> &#123;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">stackMethod();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//stack operate</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">stackMethod</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//定义一个Integer泛型的Stack</span></span><br><span class="line">Stack&lt;Integer&gt; <span class="built_in">stack</span> = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">System.out.println(<span class="string">"新建栈stack是否为空 : "</span>+(<span class="built_in">stack</span>.empty() ? <span class="string">"空"</span> : <span class="built_in">stack</span>.size()));</span><br><span class="line"><span class="comment">//push : 把项压入堆栈顶部，返回值泛型指定的类型</span></span><br><span class="line"><span class="comment">//此处将1到5压入栈中</span></span><br><span class="line"><span class="built_in">stack</span>.push(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">stack</span>.push(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">stack</span>.push(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">stack</span>.push(<span class="number">4</span>);</span><br><span class="line"><span class="built_in">stack</span>.push(<span class="number">5</span>);</span><br><span class="line">System.out.println(<span class="string">"将1到5按顺序压入栈中后为："</span>+<span class="built_in">stack</span>);</span><br><span class="line"><span class="comment">//empty : 测试堆栈是否为空，size() == 0，返回值boolean</span></span><br><span class="line">System.out.println(<span class="string">"值为1~5的栈中stack是否为空 : "</span>+(<span class="built_in">stack</span>.empty() ? <span class="string">"空"</span> : <span class="built_in">stack</span>.size()));</span><br><span class="line"><span class="comment">//search : 返回对象在堆栈中的位置，以 1 为基数，参数：search(Object o) ，返回值int</span></span><br><span class="line"><span class="keyword">int</span> oStack = <span class="built_in">stack</span>.search(<span class="number">3</span>);</span><br><span class="line">System.out.println(<span class="string">"查找栈stack中对象3的位置elementId为 : "</span>+oStack);</span><br><span class="line"><span class="comment">//peek : 查看堆栈顶部的对象，但不从堆栈中移除它，返回值泛型指定的类型</span></span><br><span class="line"><span class="keyword">int</span> topElement =<span class="built_in">stack</span>.peek();</span><br><span class="line">System.out.println(<span class="string">"查看stack的栈顶元素为 : "</span>+topElement);</span><br><span class="line">System.out.println(<span class="string">"peek操作stack后为 : "</span>+<span class="built_in">stack</span>);</span><br><span class="line"><span class="comment">//pop : 移除堆栈顶部的对象，并作为此函数的值返回该对象，返回值泛型指定的类型</span></span><br><span class="line"><span class="keyword">int</span> oRemove = <span class="built_in">stack</span>.pop();</span><br><span class="line">System.out.println(<span class="string">"移除stack栈顶的元素为 : "</span>+oRemove);</span><br><span class="line">System.out.println(<span class="string">"pop操作移除stack栈顶元素后为 : "</span>+<span class="built_in">stack</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为：</p><p>新建栈stack是否为空 : 空<br>将1到5按顺序压入栈中后为：[1, 2, 3, 4, 5]<br>值为1~5的栈中stack是否为空 : 5<br>查找栈stack中对象3的位置elementId为 : 3<br>查看stack的栈顶元素为 : 5<br>peek操作stack后为 : [1, 2, 3, 4, 5]<br>移除stack栈顶的元素为 : 5<br>pop操作移除stack栈顶元素后为 : [1, 2, 3, 4]</p><hr><p>Stack的toString()方法继承自Vector的toString()方法；</p><p>Vector的toString()方法super.toString()继承自AbstractList继承自AbstractCollection的toString()方法：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">public</span> String toString() &#123;</span><br><span class="line">       Iterator&lt;E&gt; i = iterator();</span><br><span class="line"><span class="keyword">if</span> (! i.hasNext())</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"[]"</span>;</span><br><span class="line"></span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">sb.<span class="keyword">append</span>(<span class="string">'['</span>);</span><br><span class="line"><span class="keyword">for</span> (;;) &#123;</span><br><span class="line">    E e = i.<span class="keyword">next</span>();</span><br><span class="line">    sb.<span class="keyword">append</span>(e == <span class="keyword">this</span> ? <span class="string">"(this Collection)"</span> : e);</span><br><span class="line">    <span class="keyword">if</span> (! i.hasNext())</span><br><span class="line"><span class="keyword">return</span> sb.<span class="keyword">append</span>(<span class="string">']'</span>).toString();</span><br><span class="line">    sb.<span class="keyword">append</span>(<span class="string">", "</span>);</span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>若集合为空，返回  []<br>若集合不为空则 [  加上迭代元素 加上 , 最后集合无元素加上 ] eg：[1, 2, 3, 4]</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java代码实现栈</title>
      <link href="/2019/02/21/java%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E6%A0%88/"/>
      <url>/2019/02/21/java%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<h1 id="1-栈的定义："><a href="#1-栈的定义：" class="headerlink" title="1.栈的定义："></a>1.栈的定义：</h1><p>栈作为一种数据结构，是一种只能在一端进行插入和删除操作的特殊线性表。它按照后进先出的原则存储数据，先进入的数据被压入栈底，最后的数据在栈顶，需要读数据的时候从栈顶开始弹出数据（最后一个数据被第一个读出来）。栈具有记忆作用，对栈的插入与删除操作中，不需要改变栈底指针。栈是允许在同一端进行插入和删除操作的特殊线性表。允许进行插入和删除操作的一端称为栈顶(top)，另一端为栈底(bottom)；栈底固定，而栈顶浮动；栈中元素个数为零时称为空栈。插入一般称为进栈（PUSH），删除则称为退栈（POP）。栈也称为后进先出表。<br><img src="https://i.loli.net/2019/02/21/5c6e53fd91f63.png" alt="1152386-20170509190701426-1497633628.png"></p><h1 id="2-java代码实现栈"><a href="#2-java代码实现栈" class="headerlink" title="2.java代码实现栈"></a>2.java代码实现栈</h1><h2 id="数组实现："><a href="#数组实现：" class="headerlink" title="数组实现："></a>数组实现：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">stack</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize;<span class="comment">// 栈的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> top;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">char</span>[] arr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">stack</span><span class="params">(<span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">        maxSize = size;</span><br><span class="line">        top = -<span class="number">1</span>;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">char</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">char</span> value)</span> </span>&#123; <span class="comment">// 压入数据</span></span><br><span class="line"></span><br><span class="line">        arr[++top] = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">pop</span><span class="params">()</span> </span>&#123; <span class="comment">// 弹出数据</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr[top--];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">peek</span><span class="params">()</span> </span>&#123; <span class="comment">// 访问栈顶元素</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr[top];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123; <span class="comment">// 栈是否满了</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> maxSize - <span class="number">1</span> == top;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123; <span class="comment">// 栈是否为空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> top == -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="利用栈实现字符串的倒叙输出"><a href="#利用栈实现字符串的倒叙输出" class="headerlink" title="利用栈实现字符串的倒叙输出"></a>利用栈实现字符串的倒叙输出</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package <span class="keyword">test</span>;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> Reverse &#123;</span><br><span class="line">    String <span class="keyword">input</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="built_in">Reverse</span>(String <span class="keyword">input</span>) &#123;</span><br><span class="line">        this.<span class="keyword">input</span> = <span class="keyword">input</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String doReverse() &#123;</span><br><span class="line">        <span class="keyword">stack</span> s = new <span class="keyword">stack</span>(<span class="keyword">input</span>.<span class="built_in">length</span>());</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; <span class="keyword">input</span>.<span class="built_in">length</span>(); i++) &#123;</span><br><span class="line">            s.push(<span class="keyword">input</span>.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">        String output = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">while</span>(!s.isEmpty())&#123;</span><br><span class="line">            output += s.pop();</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="链栈实现"><a href="#链栈实现" class="headerlink" title="链栈实现"></a>链栈实现</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">stack1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LinkedList&lt;Object&gt; a = <span class="keyword">new</span> LinkedList&lt;Object&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        a.addFirst(o);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Object <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> a.<span class="title">removeFirst</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Object <span class="title">peek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> a.<span class="title">getFirst</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">empty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> a.<span class="title">isEmpty</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;S</span><br></pre></td></tr></table></figure><ul><li>via <em><a href="https://www.cnblogs.com/y3596597/p/6832225.html" target="_blank" rel="noopener">https://www.cnblogs.com/y3596597/p/6832225.html</a></em></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java中动态数组ArrayList类的用法</title>
      <link href="/2019/02/21/Java%E4%B8%AD%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84ArrayList%E7%B1%BB%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2019/02/21/Java%E4%B8%AD%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84ArrayList%E7%B1%BB%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1、什么是ArrayList"><a href="#1、什么是ArrayList" class="headerlink" title="1、什么是ArrayList"></a>1、什么是ArrayList</h1><p>ArrayList就是传说中的动态数组，用MSDN中的说法，就是Array的复杂版本，它提供了如下一些好处：<br>动态的增加和减少元素<br>实现了ICollection和IList接口<br>灵活的设置数组的大小</p><h1 id="2、如何使用ArrayList"><a href="#2、如何使用ArrayList" class="headerlink" title="2、如何使用ArrayList"></a>2、如何使用ArrayList</h1><p>最简单的例子：<br>ArrayList List = new ArrayList();<br>for( int i=0;i &lt;10;i++ ) //给数组增加10个Int元素<br>List.Add(i);<br>//..程序做一些处理<br>List.RemoveAt(5);//将第6个元素移除<br>for( int i=0;i &lt;3;i++ ) //再增加3个元素<br>List.Add(i+20);<br>Int32[] values = (Int32[])List.ToArray(typeof(Int32));//返回ArrayList包含的数组</p><p>这是一个简单的例子，虽然没有包含ArrayList所有的方法，但是可以反映出ArrayList最常用的用法</p><h1 id="3、ArrayList重要的方法和属性"><a href="#3、ArrayList重要的方法和属性" class="headerlink" title="3、ArrayList重要的方法和属性"></a>3、ArrayList重要的方法和属性</h1><h2 id="1）构造器"><a href="#1）构造器" class="headerlink" title="1）构造器"></a>1）构造器</h2><p>ArrayList提供了三个构造器：<br>public ArrayList();<br>默认的构造器，将会以默认（16）的大小来初始化内部的数组<br>public ArrayList(ICollection);<br>用一个ICollection对象来构造，并将该集合的元素添加到ArrayList<br>public ArrayList(int);<br>用指定的大小来初始化内部的数组</p><h2 id="2）IsSynchronized属性和ArrayList-Synchronized方法"><a href="#2）IsSynchronized属性和ArrayList-Synchronized方法" class="headerlink" title="2）IsSynchronized属性和ArrayList.Synchronized方法"></a>2）IsSynchronized属性和ArrayList.Synchronized方法</h2><p>IsSynchronized属性指示当前的ArrayList实例是否支持线程同步，而ArrayList.Synchronized静态方法则会返回一个ArrayList的线程同步的封装。<br>如果使用非线程同步的实例，那么在多线程访问的时候，需要自己手动调用lock来保持线程同步，例如：<br>ArrayList list = new ArrayList();<br>//…<br>lock( list.SyncRoot ) //当ArrayList为非线程包装的时候，SyncRoot属性其实就是它自己，但是为了满足ICollection的SyncRoot定义，这里还是使用SyncRoot来保持源代码的规范性<br>{<br>list.Add( “Add a Item” );<br>}</p><p>如果使用ArrayList.Synchronized方法返回的实例，那么就不用考虑线程同步的问题，这个实例本身就是线程安全的，实际上ArrayList内部实现了一个保证线程同步的内部类，ArrayList.Synchronized返回的就是这个类的实例，它里面的每个属性都是用了lock关键字来保证线程同步。</p><h2 id="3）Count属性和Capacity属性"><a href="#3）Count属性和Capacity属性" class="headerlink" title="3）Count属性和Capacity属性"></a>3）Count属性和Capacity属性</h2><p>Count属性是目前ArrayList包含的元素的数量，这个属性是只读的。<br>Capacity属性是目前ArrayList能够包含的最大数量，可以手动的设置这个属性，但是当设置为小于Count值的时候会引发一个异常。</p><h2 id="4）Add、AddRange、Remove、RemoveAt、RemoveRange、Insert、InsertRange"><a href="#4）Add、AddRange、Remove、RemoveAt、RemoveRange、Insert、InsertRange" class="headerlink" title="4）Add、AddRange、Remove、RemoveAt、RemoveRange、Insert、InsertRange"></a>4）Add、AddRange、Remove、RemoveAt、RemoveRange、Insert、InsertRange</h2><p>这几个方法比较类似<br>Add方法用于添加一个元素到当前列表的末尾<br>AddRange方法用于添加一批元素到当前列表的末尾<br>Remove方法用于删除一个元素，通过元素本身的引用来删除<br>RemoveAt方法用于删除一个元素，通过索引值来删除<br>RemoveRange用于删除一批元素，通过指定开始的索引和删除的数量来删除<br>Insert用于添加一个元素到指定位置，列表后面的元素依次往后移动<br>InsertRange用于从指定位置开始添加一批元素，列表后面的元素依次往后移动</p><p>另外，还有几个类似的方法：<br><strong>Clear方法用于清除现有所有的元素</strong> （2019-2-21标记）<br>Contains方法用来查找某个对象在不在列表之中</p><p>其他的我就不一一累赘了，大家可以查看MSDN，上面讲的更仔细 </p><h2 id="5）TrimSize方法"><a href="#5）TrimSize方法" class="headerlink" title="5）TrimSize方法"></a>5）TrimSize方法</h2><p>这个方法用于将ArrayList固定到实际元素的大小，当动态数组元素确定不在添加的时候，可以调用这个方法来释放空余的内存。<br>6）ToArray方法<br>这个方法把ArrayList的元素Copy到一个新的数组中。</p><h1 id="4、ArrayList与数组转换"><a href="#4、ArrayList与数组转换" class="headerlink" title="4、ArrayList与数组转换"></a>4、ArrayList与数组转换</h1><h2 id="例1："><a href="#例1：" class="headerlink" title="例1："></a>例1：</h2><p>ArrayList List = new ArrayList();<br>List.Add(1);<br>List.Add(2);<br>List.Add(3);</p><p>Int32[] values = (Int32[])List.ToArray(typeof(Int32));</p><h2 id="例2："><a href="#例2：" class="headerlink" title="例2："></a>例2：</h2><p>ArrayList List = new ArrayList();<br>List.Add(1);<br>List.Add(2);<br>List.Add(3);</p><p>Int32[] values = new Int32[List.Count];<br>List.CopyTo(values);</p><p>上面介绍了两种从ArrayList转换到数组的方法</p><h2 id="例3："><a href="#例3：" class="headerlink" title="例3："></a>例3：</h2><p>ArrayList List = new ArrayList();<br>List.Add( “string” );<br>List.Add( 1 );<br>//往数组中添加不同类型的元素</p><p>object[] values = List.ToArray(typeof(object)); //正确<br>string[] values = (string[])List.ToArray(typeof(string)); //错误</p><p>和数组不一样，因为可以转换为Object数组，所以往ArrayList里面添加不同类型的元素是不会出错的，但是当调用ArrayList方法的时候，要么传递所有元素都可以正确转型的类型或者Object类型，否则将会抛出无法转型的异常。</p><h1 id="5、ArrayList最佳使用建议"><a href="#5、ArrayList最佳使用建议" class="headerlink" title="5、ArrayList最佳使用建议"></a>5、ArrayList最佳使用建议</h1><p>这一节我们来讨论ArrayList与数组的差别，以及ArrayList的效率问题 </p><h2 id="1）ArrayList是Array的复杂版本"><a href="#1）ArrayList是Array的复杂版本" class="headerlink" title="1）ArrayList是Array的复杂版本"></a>1）ArrayList是Array的复杂版本</h2><p>ArrayList内部封装了一个Object类型的数组，从一般的意义来说，它和数组没有本质的差别，甚</p><p>定到实际元素的大小，当动态数组元素确定不在添加的时候，可以调用这个方法来释放空余的内存。 </p><h2 id="6）ToArray方法"><a href="#6）ToArray方法" class="headerlink" title="6）ToArray方法"></a>6）ToArray方法</h2><p>这个方法把ArrayList的元素Copy到一个新的数组中。 </p><p>和数组不一样，因为可以转换为Object数组，所以往ArrayList里面添加不同类型的元素是不会出错的，但是当调用ArrayList方法的时候，要么传递所有元素都可以正确转型的类型或者Object类型，否则将会抛出无法转型的异常。</p><hr><p>ArrayList实现反转<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">public</span> class TTEST &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">ArrayList&lt;<span class="keyword">String</span>&gt; arr = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line"><span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)&#123;</span><br><span class="line">arr.add(<span class="string">"str"</span>+i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">for</span> (<span class="keyword">String</span> <span class="keyword">string</span> : arr) &#123;</span><br><span class="line">System.out.<span class="built_in">print</span>(<span class="keyword">string</span>+<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.<span class="built_in">println</span>();</span><br><span class="line">Collections.reverse(arr);</span><br><span class="line"><span class="built_in">for</span> (<span class="keyword">String</span> <span class="keyword">string</span> : arr) &#123;</span><br><span class="line">System.out.<span class="built_in">print</span>(<span class="keyword">string</span>+<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>via <em><a href="https://blog.csdn.net/weixin_40165325/article/details/79198304" target="_blank" rel="noopener">https://blog.csdn.net/weixin_40165325/article/details/79198304</a></em></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 基本操作</title>
      <link href="/2019/02/21/CentOS-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/02/21/CentOS-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Vi-基本操作"><a href="#1-Vi-基本操作" class="headerlink" title="1.Vi 基本操作"></a>1.Vi 基本操作</h2><h3 id="1-进入vi"><a href="#1-进入vi" class="headerlink" title="1) 进入vi"></a>1) 进入vi</h3><p> 在系统提示符号输入vi及文件名称后，就进入vi全屏幕编辑画面：<br> $ vi myfile<br> 进入vi之后，是处于「命令行模式（command mode）」，您要切换到「插入模式（Insert mode）」才能够输入文字。</p><h3 id="2-切换至插入模式（Insert-mode）编辑文件"><a href="#2-切换至插入模式（Insert-mode）编辑文件" class="headerlink" title="2) 切换至插入模式（Insert mode）编辑文件"></a>2) 切换至插入模式（Insert mode）编辑文件</h3><p> 在「命令行模式（command mode）」下按一下字母「i」就可以进入「插入模式（Insert mode）」，「ESC」键转到「命令行模式（command mode）</p><h3 id="3-退出vi及保存文件"><a href="#3-退出vi及保存文件" class="headerlink" title="3)  退出vi及保存文件"></a>3)  退出vi及保存文件</h3><p> 在「命令行模式（command mode）」下，按一下「：」冒号键进入「Last line mode」，例如：<br> : w filename （输入 「w filename」将文章以指定的文件名filename保存）<br> : wq (输入「wq」，存盘并退出vi)<br> : q! (输入q!， 不存盘强制退出vi)</p><h2 id="2-CentOS-网络配置"><a href="#2-CentOS-网络配置" class="headerlink" title="2.CentOS 网络配置"></a>2.CentOS 网络配置</h2><h3 id="1）找到-etc-sysconfig-network-scripts-目录下-ifcfg-ens-代表任意数字，修改其中的-onboot-yes-wq-保存并退出，然后重启网络"><a href="#1）找到-etc-sysconfig-network-scripts-目录下-ifcfg-ens-代表任意数字，修改其中的-onboot-yes-wq-保存并退出，然后重启网络" class="headerlink" title="1）找到 /etc/sysconfig/network-scripts 目录下 ifcfg-ens*,  代表任意数字，修改其中的 onboot=yes , :wq 保存并退出，然后重启网络"></a>1）找到 /etc/sysconfig/network-scripts 目录下 ifcfg-ens*<em>, </em> 代表任意数字，修改其中的 onboot=yes , :wq 保存并退出，然后重启网络</h3><p><img src="https://i.loli.net/2019/02/21/5c6e02af79c46.png" alt="01.png"><br><img src="https://i.loli.net/2019/02/21/5c6e02af52444.png" alt="02.png"></p><h3 id="2）重启网络命令"><a href="#2）重启网络命令" class="headerlink" title="2）重启网络命令"></a>2）重启网络命令</h3><p> service network restart</p><h2 id="3-CentOS-图像界面"><a href="#3-CentOS-图像界面" class="headerlink" title="3.CentOS 图像界面"></a>3.CentOS 图像界面</h2><h3 id="1）命令模式进入图形界面"><a href="#1）命令模式进入图形界面" class="headerlink" title="1）命令模式进入图形界面"></a>1）命令模式进入图形界面</h3><p> startx</p><h3 id="2）安装图形界面"><a href="#2）安装图形界面" class="headerlink" title="2）安装图形界面"></a>2）安装图形界面</h3><p> 如果startx 命令不管用，说明没有安装图形界面，命令安装如下：(需要联网)<br> yum groupinstall “GNOME Desktop” “Graphical Administration Tools”</p><h3 id="3）如果想开机直接进入“命令行模式”，可编辑-etc-inittab-文件，设置为-id-3-initdefault"><a href="#3）如果想开机直接进入“命令行模式”，可编辑-etc-inittab-文件，设置为-id-3-initdefault" class="headerlink" title="3）如果想开机直接进入“命令行模式”，可编辑 /etc/inittab 文件，设置为 id:3:initdefault:"></a>3）如果想开机直接进入“命令行模式”，可编辑 /etc/inittab 文件，设置为 id:3:initdefault:</h3><p> 如果想直接进入“窗口模式”，则设置为 id:5:initdefault:<br> 在inittab文件里所有的有效语句都遵守如下格式：<br> id:runlevels:action:process<br> id 可任意起名但不能重复，是唯一标识<br> runlevels  运行级别</p><hr><h2 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h2><p>man   查看帮助信息<br>info  查看帮助信息<br>cd /  切换至根目录   cd ..  切换至上一层目录<br>ls   查看目录下所有文件<br>ls –a &gt; dir.txt ← 将ls –a命令执行结果输出到dir.txt文件<br>ls –a &gt;&gt; dir.txt ← 将ls –a命令执行结果附加到dir.txt文件之后<br>vi   编辑文件<br>cat  查看文件内容<br>pwd  显示当前工作目录<br>touch  新建文件<br>mkdir 创建新目录<br>cp   复制文件或目录<br>mv   移动文件或更改名称<br>rm   删除文件<br>find   查找文件<br>reboot 重启<br>shutdown  -h 关机<br>shutdown  -r 重启</p><hr><ul><li>via <em><a href="https://blog.csdn.net/u010787336/article/details/67634640" target="_blank" rel="noopener">https://blog.csdn.net/u010787336/article/details/67634640</a></em> </li></ul>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>与Linux挂载有关知识</title>
      <link href="/2019/02/21/%E4%B8%8ELinux%E6%8C%82%E8%BD%BD%E6%9C%89%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
      <url>/2019/02/21/%E4%B8%8ELinux%E6%8C%82%E8%BD%BD%E6%9C%89%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="linux-centos-中的挂载是什么意思介绍和解释介绍及如何挂载"><a href="#linux-centos-中的挂载是什么意思介绍和解释介绍及如何挂载" class="headerlink" title="linux centos 中的挂载是什么意思介绍和解释介绍及如何挂载"></a><center>linux centos 中的挂载是什么意思介绍和解释介绍及如何挂载</center></h1><h2 id="1、linux-centos-中的挂载是什么意思？"><a href="#1、linux-centos-中的挂载是什么意思？" class="headerlink" title="1、linux centos 中的挂载是什么意思？"></a>1、linux centos 中的挂载是什么意思？</h2><p>Linux系统里是没有盘符的,所有的命令及我们Windows中的盘符都是用目录的形式进行管理,把每一个分区和某一个目录对应。那么,我们对这个目录的操作就是对这个分区的操作,这样就实现了硬件管理手段和软件目录管理手段的统一,这个比如D盘分区和linux系统中根目录/test一一绑定的过程就叫做Linux系统中的挂载。</p><p>那么，如何在linux centos系统中挂载硬盘呢？<br>linux centos 挂载的详细操作步骤：<br>首先远程连接linux服务器，一般可以使用专用的linux连接工具，个人喜好可以按自己选择远程工具，本人推荐常用下载putty工具。</p><h2 id="2、-查看linux-系统服务器上的-磁盘-情况-fdisk-l"><a href="#2、-查看linux-系统服务器上的-磁盘-情况-fdisk-l" class="headerlink" title="2、 查看linux 系统服务器上的 磁盘 情况 fdisk -l"></a>2、 查看linux 系统服务器上的 磁盘 情况 fdisk -l</h2><p>查看结果: 该服务器上有  三块磁盘  一个40G系统盘 另外另个磁盘  即为   个人磁盘    也就是我们需要挂载的磁盘</p><h2 id="3、-linux-centos-磁盘分区命令"><a href="#3、-linux-centos-磁盘分区命令" class="headerlink" title="3、  linux centos 磁盘分区命令"></a>3、  linux centos 磁盘分区命令</h2><p>倘若我们挂载  /dev/xvdc1    10G 磁盘，那么我们可以先  格式化分区   输入  fdisk /dev/xvdc1  </p><p>依次输入:   n    p    1   二次回车   w   即可<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Command (m for <span class="keyword">help</span>):n  </span><br><span class="line">Command <span class="keyword">action</span>  </span><br><span class="line">　　   e    <span class="keyword">extended</span>                  //输入e为创建扩展分区  </span><br><span class="line">　　   p    primary <span class="keyword">partition</span> (<span class="number">1</span><span class="number">-4</span>)      //输入p为创建逻辑分区  </span><br><span class="line">p  </span><br><span class="line">Partion <span class="built_in">number</span>(<span class="number">1</span><span class="number">-4</span>)：<span class="number">1</span>      //在这里输入l，就进入划分逻辑分区阶段了；  </span><br><span class="line"><span class="keyword">First</span> cylinder (<span class="number">51</span><span class="number">-125</span>, <span class="keyword">default</span> <span class="number">51</span>):   //注：这个就是分区的<span class="keyword">Start</span> 值；这里最好直接按回车，如果您输入了一个非默认的数字，会造成空间浪费；  </span><br><span class="line"><span class="keyword">Using</span> <span class="keyword">default</span> <span class="keyword">value</span> <span class="number">51</span>  </span><br><span class="line"><span class="keyword">Last</span> cylinder <span class="keyword">or</span> +<span class="keyword">size</span> <span class="keyword">or</span> +sizeM <span class="keyword">or</span> +sizeK (<span class="number">51</span><span class="number">-125</span>, <span class="keyword">default</span> <span class="number">125</span>): +<span class="number">200</span>M 注：这个是定义分区大小的，+<span class="number">200</span>M 就是大小为<span class="number">200</span>M ；当然您也可以根据p提示的单位cylinder的大小来算，然后来指定 <span class="keyword">End</span>的数值。回头看看是怎么算的；还是用+<span class="number">200</span>M这个办法来添加，这样能直观一点。如果您想添加一个<span class="number">10</span>G左右大小的分区，请输入 +<span class="number">10000</span>M ；  </span><br><span class="line">  </span><br><span class="line">Command (m <span class="keyword">for</span> <span class="keyword">help</span>): w                     //最后输入w回车保存。</span><br></pre></td></tr></table></figure></p><h2 id="4-linux-centos-格式化磁盘命令"><a href="#4-linux-centos-格式化磁盘命令" class="headerlink" title="4. linux centos 格式化磁盘命令"></a>4. linux centos 格式化磁盘命令</h2><p>#mkfs.ext4 /dev/xvdc1</p><h2 id="5-linux-centos-创建目录命令"><a href="#5-linux-centos-创建目录命令" class="headerlink" title="5. linux centos 创建目录命令"></a>5. linux centos 创建目录命令</h2><p>#mkdir /mydisk         用于映射你需要挂载的磁盘, 挂载成功后，每次你只需要访问该目录即是可通过#cd /mydisk访问对应的磁盘分区。</p><h2 id="6-linux-centos-挂载磁盘命令"><a href="#6-linux-centos-挂载磁盘命令" class="headerlink" title="6.linux centos 挂载磁盘命令"></a>6.linux centos 挂载磁盘命令</h2><p>#mount/dev/xvdc1/mydisk意思是将服务器上/dev/xvdc1绑定到你所创建的目录mydisk文件目录上。</p><h2 id="7-linux-centos-配置挂载开机启动-关键步骤"><a href="#7-linux-centos-配置挂载开机启动-关键步骤" class="headerlink" title="7. linux centos 配置挂载开机启动 ,关键步骤"></a>7. linux centos 配置挂载开机启动 ,关键步骤</h2><p>echo “/dev/sdb1/dataext4defaults00” &gt;&gt; /etc/fstab<br>该命令及其重要，因为挂载磁盘操作挂载成功后，重启服务器后会丢失挂载，以至于挂载失效，即要写入开启挂载启动项。</p><p>该命令中，ext4 是对应你的格式化磁盘的类型格式，如我这边的磁盘格式化时用了ext4格式进行格式。</p><h2 id="8-重启linux服务器命令"><a href="#8-重启linux服务器命令" class="headerlink" title="8.  重启linux服务器命令"></a>8.  重启linux服务器命令</h2><p>shutdown -r now</p><hr><ul><li>via <em><a href="https://blog.csdn.net/test18580/article/details/74210603/" target="_blank" rel="noopener">https://blog.csdn.net/test18580/article/details/74210603/</a></em></li></ul>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux挂载</title>
      <link href="/2019/02/21/Linux%E6%8C%82%E8%BD%BD/"/>
      <url>/2019/02/21/Linux%E6%8C%82%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是挂载？mount的用处在哪？"><a href="#什么是挂载？mount的用处在哪？" class="headerlink" title="什么是挂载？mount的用处在哪？"></a><center>什么是挂载？mount的用处在哪？</center></h1><p>1.提一句Windows下，mount挂载，就是给磁盘分区提供一个盘符（C,D,E,…）。比如插入U盘后系统自动分配给了它I:盘符其实就是挂载，退优盘的时候进行安全弹出，其实就是卸载unmount。</p><p>2.Linux下，不像Windows可以有C,D,E,多个目录，Linux只有一个根目录/。在装系统时，我们分配给linux的所有区都在/下的某个位置，比如/home等等。</p><p>3.提问者插入了新硬盘，分了新磁盘区sdb1。它现在还不属于/。</p><p>4.我们虽然可以在一些图形桌面系统里找到他的位置，浏览管理里面的文件，但在命令行却不知怎么访问它的目录，比如无法使用cd或者ls。也无法在编程时指定一个目录对它操作。</p><p>5.这时提问者使用了 mount /dev/sdb1 ~/Share/ ，把新硬盘的区sdb1挂载到工作目录的~/Share/文件夹下，之后访问这个~/Share/文件夹就相当于访问这个硬盘2的sdb1分区了。对/Share/的任何操作，都相当于对sdb1里文件的操作。</p><p>6.所以Linux下，mount挂载的作用，就是将一个设备（通常是存储设备）挂接到一个已存在的目录上。访问这个目录就是访问该存储设备。</p><p>7.linux操作系统将所有的设备都看作文件，它将整个计算机的资源都整合成一个大的文件目录。我们要访问存储设备中的文件，必须将文件所在的分区挂载到一个已存在的目录上，然后通过访问这个目录来访问存储设备。挂载就是把设备放在一个目录下，让系统知道怎么管理这个设备里的文件，了解这个存储设备的可读写特性之类的过程。</p><p>8.我们不是有/dev/sdb1 吗，直接对它操作不就行了？这不是它的目录吗？</p><p>9.这不是它的目录。虽然/dev是个目录，但/dev/sdb1不是目录。可以发现ls/dev/sdb1无法执行。/dev/sdb1，是一个类似指针的东西，指向这个分区的原始数据块。mount前，系统并不知道这个数据块哪部分数据代表文件，如何对它们操作。</p><p>10.插入CD，系统其实自动执行了 mount /dev/cdrom /media/cdrom。所以可以直接在/media/cdrom中对CD中的内容进行管理。</p><ul><li>via <em><a href="https://blog.csdn.net/qq_39521554/article/details/79501714" target="_blank" rel="noopener">https://blog.csdn.net/qq_39521554/article/details/79501714</a></em></li></ul>]]></content>
      
      
      <categories>
          
          <category> ECS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Python】列表嵌套字典修改字典里面的一个值却把全部的值都修改了</title>
      <link href="/2019/02/20/%E3%80%90Python%E3%80%91%E5%88%97%E8%A1%A8%E5%B5%8C%E5%A5%97%E5%AD%97%E5%85%B8%E4%BF%AE%E6%94%B9%E5%AD%97%E5%85%B8%E9%87%8C%E9%9D%A2%E7%9A%84%E4%B8%80%E4%B8%AA%E5%80%BC%E5%8D%B4%E6%8A%8A%E5%85%A8%E9%83%A8%E7%9A%84%E5%80%BC%E9%83%BD%E4%BF%AE%E6%94%B9%E4%BA%86/"/>
      <url>/2019/02/20/%E3%80%90Python%E3%80%91%E5%88%97%E8%A1%A8%E5%B5%8C%E5%A5%97%E5%AD%97%E5%85%B8%E4%BF%AE%E6%94%B9%E5%AD%97%E5%85%B8%E9%87%8C%E9%9D%A2%E7%9A%84%E4%B8%80%E4%B8%AA%E5%80%BC%E5%8D%B4%E6%8A%8A%E5%85%A8%E9%83%A8%E7%9A%84%E5%80%BC%E9%83%BD%E4%BF%AE%E6%94%B9%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>具体问题就是：当我往空列表里面添加字典，需要修改其中的一个键的值的时候，出现把其他同类的值也修改了。</p><p>下面就是出现问题的代码：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">aliens = []</span><br><span class="line">new_alien = &#123;"color": "green"&#125;</span><br><span class="line"><span class="section">#往字典里添加5个字典</span></span><br><span class="line">for num in range(5):</span><br><span class="line"><span class="code">    aliens.append(new_alien)</span></span><br><span class="line">print(aliens)</span><br><span class="line"><span class="section">#修改第一个字典的颜色</span></span><br><span class="line">aliens[<span class="string">0</span>][<span class="symbol">"color"</span>] = "blue"</span><br><span class="line">print(aliens)</span><br></pre></td></tr></table></figure></p><p>结果出现全部的值都修改了,如下<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">G:\python\python\pra\venv\Scripts\python.exe G:/python/python/pra/day02/列表嵌套字典修改问题<span class="number">5</span>.py</span><br><span class="line">[&#123;<span class="string">'color'</span>: <span class="string">'green'</span>&#125;, &#123;<span class="string">'color'</span>: <span class="string">'green'</span>&#125;, &#123;<span class="string">'color'</span>: <span class="string">'green'</span>&#125;, &#123;<span class="string">'color'</span>: <span class="string">'green'</span>&#125;, &#123;<span class="string">'color'</span>: <span class="string">'green'</span>&#125;]</span><br><span class="line">[&#123;<span class="string">'color'</span>: <span class="string">'blue'</span>&#125;, &#123;<span class="string">'color'</span>: <span class="string">'blue'</span>&#125;, &#123;<span class="string">'color'</span>: <span class="string">'blue'</span>&#125;, &#123;<span class="string">'color'</span>: <span class="string">'blue'</span>&#125;, &#123;<span class="string">'color'</span>: <span class="string">'blue'</span>&#125;]</span><br></pre></td></tr></table></figure></p><p>对于解决的办法,我找到了两个:</p><p>第一个:导入copy模块使用深拷贝,再把字典添加到列表里面<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import copy</span><br><span class="line">aliens = []</span><br><span class="line">new_alien = &#123;<span class="string">"color"</span>: <span class="string">"green"</span>&#125;</span><br><span class="line"><span class="comment"># 打印一下原来的地址</span></span><br><span class="line"><span class="builtin-name">print</span>(id(new_alien))</span><br><span class="line"><span class="comment">#往字典里添加5个字典</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(5):</span><br><span class="line">    aliens.append(copy.deepcopy(new_alien))</span><br><span class="line"><span class="builtin-name">print</span>(aliens)</span><br><span class="line"><span class="comment"># 打印列表原来的地址</span></span><br><span class="line"><span class="keyword">for</span> alien <span class="keyword">in</span> aliens:</span><br><span class="line">    <span class="builtin-name">print</span>(id(alien))</span><br><span class="line"><span class="comment">#修改第一个字典的颜色</span></span><br><span class="line">aliens[0][<span class="string">"color"</span>] = <span class="string">"blue"</span></span><br><span class="line"><span class="builtin-name">print</span>(aliens)</span><br><span class="line"><span class="comment"># 打印列表修改后的地址</span></span><br><span class="line"><span class="keyword">for</span> alien <span class="keyword">in</span> aliens:</span><br><span class="line">    <span class="builtin-name">print</span>(id(alien))</span><br></pre></td></tr></table></figure></p><p>第二种方法:将需要添加的字典放到for循环里面.<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">aliens = []</span><br><span class="line"><span class="comment">#往字典里添加5个字典</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(5):</span><br><span class="line">    new_alien = &#123;<span class="string">"color"</span>: <span class="string">"green"</span>&#125;</span><br><span class="line">    aliens.append(new_alien)</span><br><span class="line"><span class="builtin-name">print</span>(aliens)</span><br><span class="line"><span class="comment"># 打印列表原来的地址</span></span><br><span class="line"><span class="keyword">for</span> alien <span class="keyword">in</span> aliens:</span><br><span class="line">    <span class="builtin-name">print</span>(id(alien))</span><br><span class="line"><span class="comment">#修改第一个字典的颜色</span></span><br><span class="line">aliens[0][<span class="string">"color"</span>] = <span class="string">"blue"</span></span><br><span class="line"><span class="builtin-name">print</span>(aliens)</span><br><span class="line"><span class="comment"># 打印列表修改后的地址</span></span><br><span class="line"><span class="keyword">for</span> alien <span class="keyword">in</span> aliens:</span><br><span class="line">    <span class="builtin-name">print</span>(id(alien))</span><br></pre></td></tr></table></figure></p><p><strong>第一种方法更好一点</strong></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python虚拟路径</title>
      <link href="/2019/02/20/python%E8%99%9A%E6%8B%9F%E8%B7%AF%E5%BE%84/"/>
      <url>/2019/02/20/python%E8%99%9A%E6%8B%9F%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-和虚拟路径有关的方法"><a href="#Python-和虚拟路径有关的方法" class="headerlink" title="Python 和虚拟路径有关的方法"></a>Python 和虚拟路径有关的方法</h1><p><img src="https://i.loli.net/2019/02/20/5c6d0b5d8f51b.png" alt="虚拟环境.png"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python实现结构体数组（初始化并赋值）</title>
      <link href="/2019/02/20/python%E5%AE%9E%E7%8E%B0%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%EF%BC%88%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B9%B6%E8%B5%8B%E5%80%BC%EF%BC%89/"/>
      <url>/2019/02/20/python%E5%AE%9E%E7%8E%B0%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%EF%BC%88%E5%88%9D%E5%A7%8B%E5%8C%96%E5%B9%B6%E8%B5%8B%E5%80%BC%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="python中结构体数组构建方法"><a href="#python中结构体数组构建方法" class="headerlink" title="python中结构体数组构建方法"></a><center>python中结构体数组构建方法</center></h1><h2 id="方法一：利用NumPy进行操作"><a href="#方法一：利用NumPy进行操作" class="headerlink" title="方法一：利用NumPy进行操作"></a>方法一：利用NumPy进行操作</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line"> </span><br><span class="line">GPSType=np.dtype(&#123;'names':['id','px','py','vx','vy'],'formats':['S32','f','f','f','f']&#125;)</span><br><span class="line"> </span><br><span class="line">Data=np.array([('zero',0.,0.)]*10,dtype=GPSType)  #创建Data[2]</span><br><span class="line"> </span><br><span class="line"><span class="section">#结构体数组中成员赋值</span></span><br><span class="line"><span class="section">#Data[0]</span></span><br><span class="line">Data[<span class="string">0</span>][<span class="symbol">'id'</span>]='00'</span><br><span class="line">Data[<span class="string">0</span>][<span class="symbol">'px'</span>]=1.1</span><br><span class="line">Data[<span class="string">0</span>][<span class="symbol">'py'</span>]=1.2</span><br><span class="line">Data[<span class="string">0</span>][<span class="symbol">'vx'</span>]=1.3</span><br><span class="line">Data[<span class="string">0</span>][<span class="symbol">'vy'</span>]=1.4</span><br><span class="line"> </span><br><span class="line"><span class="section">#Data[1]</span></span><br><span class="line">Data[<span class="string">1</span>][<span class="symbol">'id'</span>]='01'</span><br><span class="line">Data[<span class="string">1</span>][<span class="symbol">'px'</span>]=2.1</span><br><span class="line">Data[<span class="string">1</span>][<span class="symbol">'py'</span>]=2.2</span><br><span class="line">Data[<span class="string">1</span>][<span class="symbol">'vx'</span>]=2.3</span><br><span class="line">Data[<span class="string">1</span>][<span class="symbol">'vy'</span>]=2.4</span><br></pre></td></tr></table></figure><hr><h2 id="方法二：利用Class类进行操作"><a href="#方法二：利用Class类进行操作" class="headerlink" title="方法二：利用Class类进行操作"></a>方法二：利用Class类进行操作</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class GPS:</span><br><span class="line">    pass</span><br><span class="line"> </span><br><span class="line">Data = [GPS()]<span class="number">*2</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#Data[0]</span></span><br><span class="line">Data[0].<span class="attribute">id</span>=<span class="string">'00'</span></span><br><span class="line">Data[0].<span class="attribute">px</span>=1.1</span><br><span class="line">Data[0].<span class="attribute">py</span>=1.2</span><br><span class="line">Data[0].<span class="attribute">vx</span>=1.3</span><br><span class="line">Data[0].<span class="attribute">vy</span>=1.4</span><br><span class="line"> </span><br><span class="line"><span class="comment">#Data[1]</span></span><br><span class="line">Data[1].<span class="attribute">id</span>=<span class="string">'01'</span></span><br><span class="line">Data[1].<span class="attribute">px</span>=2.1</span><br><span class="line">Data[1].<span class="attribute">py</span>=2.2</span><br><span class="line">Data[1].<span class="attribute">vx</span>=2.3</span><br><span class="line">Data[1].<span class="attribute">vy</span>=2.4</span><br><span class="line"><span class="builtin-name">print</span>(Data[0],Data[1])</span><br><span class="line"><span class="builtin-name">print</span>(Data[0].px)</span><br></pre></td></tr></table></figure><hr><ul><li>via <em><a href="https://blog.csdn.net/qq_23981335/article/details/83039130" target="_blank" rel="noopener">https://blog.csdn.net/qq_23981335/article/details/83039130</a></em></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java实现结构体数组</title>
      <link href="/2019/02/20/java%E5%AE%9E%E7%8E%B0%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84/"/>
      <url>/2019/02/20/java%E5%AE%9E%E7%8E%B0%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.Arrays;</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.HashMap;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.LinkedList;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.Map;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.Queue;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.Scanner;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.Stack;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">p</span></span>&#123;</span><br><span class="line">int x,y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main1</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> Scanner <span class="keyword">in</span>=<span class="keyword">new</span> Scanner(System.in); </span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">int n=<span class="keyword">in</span>.nextInt();</span><br><span class="line">p a=<span class="keyword">new</span> p();</span><br><span class="line">a.x=<span class="number">10</span>;</span><br><span class="line">p[] b=<span class="keyword">new</span> p[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;<span class="comment">//一定要加入这一句</span></span><br><span class="line">b[i]=<span class="keyword">new</span> p();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">b[i].x=<span class="number">1</span>;</span><br><span class="line">b[i].y=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">System.out.println(b[i].x+b[i].y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java实现遍历一个字符串的每一个字母</title>
      <link href="/2019/02/20/java%E5%AE%9E%E7%8E%B0%E9%81%8D%E5%8E%86%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%AF%8F%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AF%8D/"/>
      <url>/2019/02/20/java%E5%AE%9E%E7%8E%B0%E9%81%8D%E5%8E%86%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%AF%8F%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AF%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="求字符串中a字符出现的次数"><a href="#求字符串中a字符出现的次数" class="headerlink" title="求字符串中a字符出现的次数"></a>求字符串中a字符出现的次数</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> s = <span class="string">"aaaljlfeakdsflkjsadjaefdsafhaasdasd"</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 出现次数</span></span><br><span class="line"><span class="built_in">int</span> <span class="built_in">num</span> = <span class="number">0</span>;</span><br><span class="line">      </span><br><span class="line">       <span class="comment">// 循环遍历每个字符，判断是否是字符 a ，如果是，累加次数</span></span><br><span class="line"><span class="keyword">for</span> (       <span class="comment">//输入代码                   )</span></span><br><span class="line">&#123;</span><br><span class="line">          <span class="comment">// 获取每个字符，判断是否是字符a</span></span><br><span class="line"><span class="keyword">if</span> (     <span class="comment">//输入代码            ) &#123;</span></span><br><span class="line">              <span class="comment">// 累加统计次数</span></span><br><span class="line"><span class="built_in">num</span>++; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"字符a出现的次数："</span> + <span class="built_in">num</span>);</span><br></pre></td></tr></table></figure><hr><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (     int <span class="built_in">i</span>=<span class="number">0</span>;<span class="built_in">i</span>&lt;s.<span class="built_in">length</span>();<span class="built_in">i</span>++         )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (  s.charAt(<span class="built_in">i</span>)==<span class="string">'a'</span> ) &#123;</span><br><span class="line">num++; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="2-bytes数组"><a href="#2-bytes数组" class="headerlink" title="2 bytes数组"></a>2 bytes数组</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">int num = <span class="number">0</span>;</span><br><span class="line">    byte[] bytes=s.getBytes();</span><br><span class="line"><span class="keyword">for</span> (  int <span class="built_in">i</span>=<span class="number">0</span>;<span class="built_in">i</span>&lt;bytes.<span class="built_in">length</span>;<span class="built_in">i</span>++       )</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( bytes[<span class="built_in">i</span>]==<span class="string">'a'</span> ) &#123;</span><br><span class="line">num++; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="3-利用数组char"><a href="#3-利用数组char" class="headerlink" title="3.利用数组char"></a>3.利用数组char</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   char[] c=s.toCharArray();   </span><br><span class="line"><span class="keyword">for</span> (   int <span class="built_in">i</span>=<span class="number">0</span>;<span class="built_in">i</span>&lt;c.<span class="built_in">length</span>;<span class="built_in">i</span>++    )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (    c[<span class="built_in">i</span>]==<span class="string">'a'</span>    ) &#123;</span><br><span class="line">num++; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="4-利用substring（startindex-endindex-字符串的"><a href="#4-利用substring（startindex-endindex-字符串的" class="headerlink" title="4.利用substring（startindex,endindex)字符串的"></a>4.利用substring（startindex,endindex)字符串的</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (   <span class="built_in">int</span> i=<span class="number">0</span>;i&lt;s.length();i++  )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">String</span> s1=s.substring(i,i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (   s1.equals(<span class="string">"a"</span>)) &#123;  <span class="comment">//注意这个地方不能是'a'。</span></span><br><span class="line"><span class="built_in">num</span>++; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="字符串的常用方法"><a href="#字符串的常用方法" class="headerlink" title="字符串的常用方法"></a>字符串的常用方法</h1><p><img src="https://i.loli.net/2019/02/20/5c6cac70ede94.png" alt="20180714152652871.png"></p><hr><ul><li>via(<a href="https://blog.csdn.net/weixin_41984985/article/details/81044127" target="_blank" rel="noopener">https://blog.csdn.net/weixin_41984985/article/details/81044127</a>) </li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IDEA手动配置连接MySQL数据库</title>
      <link href="/2019/02/19/IDEA%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/02/19/IDEA%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="IntelliJ-IDEA手动配置连接MySQL数据库"><a href="#IntelliJ-IDEA手动配置连接MySQL数据库" class="headerlink" title="IntelliJ IDEA手动配置连接MySQL数据库"></a>IntelliJ IDEA手动配置连接MySQL数据库</h1><h2 id="先从菜单View→Tool-Windows→Database打开数据库工具窗口，如下图所示："><a href="#先从菜单View→Tool-Windows→Database打开数据库工具窗口，如下图所示：" class="headerlink" title="先从菜单View→Tool Windows→Database打开数据库工具窗口，如下图所示："></a>先从菜单View→Tool Windows→Database打开数据库工具窗口，如下图所示：</h2><p><img src="https://i.loli.net/2019/02/20/5c6cbfcc36b8c.png" alt="01.png"></p><h2 id="点击Database工具窗口左上角添加按钮“-”，选择数据库类型，这里以MySQL为例，如下图所示："><a href="#点击Database工具窗口左上角添加按钮“-”，选择数据库类型，这里以MySQL为例，如下图所示：" class="headerlink" title="点击Database工具窗口左上角添加按钮“+”，选择数据库类型，这里以MySQL为例，如下图所示："></a>点击Database工具窗口左上角添加按钮“+”，选择数据库类型，这里以MySQL为例，如下图所示：</h2><p><img src="https://i.loli.net/2019/02/20/5c6cbfcc66096.png" alt="02.png"></p><h2 id="填写数据库连接的主机名、数据库名、用户名和密码，如下图所示："><a href="#填写数据库连接的主机名、数据库名、用户名和密码，如下图所示：" class="headerlink" title="填写数据库连接的主机名、数据库名、用户名和密码，如下图所示："></a>填写数据库连接的主机名、数据库名、用户名和密码，如下图所示：</h2><p><img src="https://i.loli.net/2019/02/20/5c6cbfcc6c06c.png" alt="03.png"></p><h2 id="点击Test-Connection按钮进行测试数据库连接是否正常"><a href="#点击Test-Connection按钮进行测试数据库连接是否正常" class="headerlink" title="点击Test Connection按钮进行测试数据库连接是否正常"></a>点击Test Connection按钮进行测试数据库连接是否正常</h2><p><img src="https://i.loli.net/2019/02/20/5c6cbfcc0f3b2.png" alt="04.png"></p><h2 id="下图为连接正常的截图"><a href="#下图为连接正常的截图" class="headerlink" title="下图为连接正常的截图"></a>下图为连接正常的截图</h2><p><img src="https://i.loli.net/2019/02/20/5c6cbfcc6e831.png" alt="05.png"></p><h2 id="连接数据库成功后即可在右侧红框所示窗口内查看当前连接数据库的数据表，左侧红框为选中表的数据，如下图所示："><a href="#连接数据库成功后即可在右侧红框所示窗口内查看当前连接数据库的数据表，左侧红框为选中表的数据，如下图所示：" class="headerlink" title="连接数据库成功后即可在右侧红框所示窗口内查看当前连接数据库的数据表，左侧红框为选中表的数据，如下图所示："></a>连接数据库成功后即可在右侧红框所示窗口内查看当前连接数据库的数据表，左侧红框为选中表的数据，如下图所示：</h2><p><img src="https://i.loli.net/2019/02/20/5c6cbfcc7dcd5.png" alt="06.png"></p><p><em>(via  <a href="https://www.cnblogs.com/jeffen/p/6027970.html" target="_blank" rel="noopener">https://www.cnblogs.com/jeffen/p/6027970.html</a>)</em></p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><h2 id="testconntction按钮是灰色，无法点击"><a href="#testconntction按钮是灰色，无法点击" class="headerlink" title="testconntction按钮是灰色，无法点击"></a>testconntction按钮是灰色，无法点击</h2><p><strong> 解决方法，点击左下方的download按钮下载所需要的jdbc包<br>   之后点击连接测试会显示successful </strong></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JSP 连接数据库</title>
      <link href="/2019/02/19/JSP-%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/02/19/JSP-%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="JSP连接数据库"><a href="#JSP连接数据库" class="headerlink" title="JSP连接数据库"></a>JSP连接数据库</h1><p>本教程假定您已经了解了 JDBC 应用程序的工作方式。在您开始学习 JSP 数据库访问之前，请访问 Java MySQL 连接 来设置相关驱动及配置。</p><p> <strong> 注意 jar包：mysql-connector-java-5.1.39-bin.jar </strong><br> <strong> 下载后把 mysql-connector-java-5.1.39-bin.jar 拷贝到 tomcat 下 lib 目录。 </strong></p><p>从基本概念下手，让我们来创建一个简单的表，并在表中创建几条记录。</p><h2 id="创建测试数据"><a href="#创建测试数据" class="headerlink" title="创建测试数据"></a>创建测试数据</h2><p>接下来我们在 MySQL 中创建 RUNOOB 数据库，并创建 websites 数据表，表结构如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`websites`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'站点名称'</span>,</span><br><span class="line">  <span class="string">`url`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`alexa`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'Alexa 排名'</span>,</span><br><span class="line">  <span class="string">`country`</span> <span class="built_in">char</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'国家'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">10</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p>插入一些数据：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">INSERT</span> <span class="selector-tag">INTO</span> `<span class="selector-tag">websites</span>` <span class="selector-tag">VALUES</span> (<span class="string">'1'</span>, <span class="string">'Google'</span>, <span class="string">'https://www.google.cm/'</span>, <span class="string">'1'</span>, <span class="string">'USA'</span>), (<span class="string">'2'</span>, <span class="string">'淘宝'</span>, <span class="string">'https://www.taobao.com/'</span>, <span class="string">'13'</span>, <span class="string">'CN'</span>), (<span class="string">'3'</span>, <span class="string">'菜鸟教程'</span>, <span class="string">'http://www.runoob.com'</span>, <span class="string">'5892'</span>, <span class="string">''</span>), (<span class="string">'4'</span>, <span class="string">'微博'</span>, <span class="string">'http://weibo.com/'</span>, <span class="string">'20'</span>, <span class="string">'CN'</span>), (<span class="string">'5'</span>, <span class="string">'Facebook'</span>, <span class="string">'https://www.facebook.com/'</span>, <span class="string">'3'</span>, <span class="string">'USA'</span>);</span><br></pre></td></tr></table></figure></p><h2 id="SELECT操作"><a href="#SELECT操作" class="headerlink" title="SELECT操作"></a>SELECT操作</h2><p>接下来的这个例子告诉我们如何使用JSTL SQL标签来运行SQL SELECT语句：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span></span><br><span class="line"><span class="xml">    pageEncoding="UTF-8"%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.io.*,java.util.*,java.sql.*"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"javax.servlet.http.*,javax.servlet.*"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/sql"</span> <span class="attr">prefix</span>=<span class="string">"sql"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>SELECT 操作<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">JDBC 驱动名及数据库 URL </span></span><br><span class="line"><span class="xml">数据库的用户名与密码，需要根据自己的设置</span></span><br><span class="line"><span class="xml">useUnicode=true&amp;characterEncoding=utf-8 防止中文乱码</span></span><br><span class="line"><span class="xml"> --&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:setDataSource</span> <span class="attr">var</span>=<span class="string">"snapshot"</span> <span class="attr">driver</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span></span><br><span class="line"><span class="xml">     url="jdbc:mysql://localhost:3306/RUNOOB?useUnicode=true&amp;characterEncoding=utf-8"</span></span><br><span class="line"><span class="xml">     user="root"  password="123456"/&gt;</span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:query</span> <span class="attr">dataSource</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;snapshot&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"result"</span>&gt;</span></span></span><br><span class="line"><span class="xml">SELECT * from websites;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">sql:query</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>JSP 数据库实例 - 菜鸟教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>站点名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>站点地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"row"</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;result.rows&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.id&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.name&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.url&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="INSERT操作"><a href="#INSERT操作" class="headerlink" title="INSERT操作"></a>INSERT操作</h2><p>这个例子告诉我们如何使用JSTL SQL标签来运行SQL INSERT语句：<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span></span><br><span class="line"><span class="xml">    pageEncoding="UTF-8"%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.io.*,java.util.*,java.sql.*"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"javax.servlet.http.*,javax.servlet.*"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/sql"</span> <span class="attr">prefix</span>=<span class="string">"sql"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>SELECT 操作<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">JDBC 驱动名及数据库 URL </span></span><br><span class="line"><span class="xml">数据库的用户名与密码，需要根据自己的设置</span></span><br><span class="line"><span class="xml">useUnicode=true&amp;characterEncoding=utf-8 防止中文乱码</span></span><br><span class="line"><span class="xml"> --&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:setDataSource</span> <span class="attr">var</span>=<span class="string">"snapshot"</span> <span class="attr">driver</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span></span><br><span class="line"><span class="xml">     url="jdbc:mysql://localhost:3306/RUNOOB?useUnicode=true&amp;characterEncoding=utf-8"</span></span><br><span class="line"><span class="xml">     user="root"  password="123456"/&gt;</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">插入数据</span></span><br><span class="line"><span class="xml"> --&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:update</span> <span class="attr">dataSource</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;snapshot&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"result"</span>&gt;</span></span></span><br><span class="line"><span class="xml">INSERT INTO websites (name,url,alexa,country) VALUES ('菜鸟教程移动站', 'http://m.runoob.com', 5093, 'CN');</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">sql:update</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:query</span> <span class="attr">dataSource</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;snapshot&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"result"</span>&gt;</span></span></span><br><span class="line"><span class="xml">SELECT * from websites;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">sql:query</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>JSP 数据库实例 - 菜鸟教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>站点名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>站点地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"row"</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;result.rows&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.id&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.name&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.url&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="DELETE操作"><a href="#DELETE操作" class="headerlink" title="DELETE操作"></a>DELETE操作</h2><p>这个例子告诉我们如何使用JSTL SQL标签来运行SQL DELETE语句：<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span></span><br><span class="line"><span class="xml">    pageEncoding="UTF-8"%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.io.*,java.util.*,java.sql.*"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"javax.servlet.http.*,javax.servlet.*"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/sql"</span> <span class="attr">prefix</span>=<span class="string">"sql"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>SELECT 操作<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">JDBC 驱动名及数据库 URL </span></span><br><span class="line"><span class="xml">数据库的用户名与密码，需要根据自己的设置</span></span><br><span class="line"><span class="xml">useUnicode=true&amp;characterEncoding=utf-8 防止中文乱码</span></span><br><span class="line"><span class="xml"> --&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:setDataSource</span> <span class="attr">var</span>=<span class="string">"snapshot"</span> <span class="attr">driver</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span></span><br><span class="line"><span class="xml">     url="jdbc:mysql://localhost:3306/RUNOOB?useUnicode=true&amp;characterEncoding=utf-8"</span></span><br><span class="line"><span class="xml">     user="root"  password="123456"/&gt;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">删除 ID 为 11 的数据</span></span><br><span class="line"><span class="xml"> --&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:update</span> <span class="attr">dataSource</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;snapshot&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"count"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  DELETE FROM websites WHERE Id = ?</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">sql:param</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;11&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">sql:update</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:query</span> <span class="attr">dataSource</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;snapshot&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"result"</span>&gt;</span></span></span><br><span class="line"><span class="xml">SELECT * from websites;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">sql:query</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>JSP 数据库实例 - 菜鸟教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>站点名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>站点地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"row"</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;result.rows&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.id&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.name&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.url&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="UPDATE操作"><a href="#UPDATE操作" class="headerlink" title="UPDATE操作"></a>UPDATE操作</h2><p>这个例子告诉我们如何使用JSTL SQL标签来运行SQL UPDATE语句：<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span></span><br><span class="line"><span class="xml">    pageEncoding="UTF-8"%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"java.io.*,java.util.*,java.sql.*"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">import</span>=<span class="string">"javax.servlet.http.*,javax.servlet.*"</span> %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/sql"</span> <span class="attr">prefix</span>=<span class="string">"sql"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>SELECT 操作<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">JDBC 驱动名及数据库 URL </span></span><br><span class="line"><span class="xml">数据库的用户名与密码，需要根据自己的设置</span></span><br><span class="line"><span class="xml">useUnicode=true&amp;characterEncoding=utf-8 防止中文乱码</span></span><br><span class="line"><span class="xml"> --&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:setDataSource</span> <span class="attr">var</span>=<span class="string">"snapshot"</span> <span class="attr">driver</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span></span><br><span class="line"><span class="xml">     url="jdbc:mysql://localhost:3306/RUNOOB?useUnicode=true&amp;characterEncoding=utf-8"</span></span><br><span class="line"><span class="xml">     user="root"  password="123456"/&gt;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">修改 ID 为 3 的名字：菜鸟教程改为 RUNOOB</span></span><br><span class="line"><span class="xml"> --&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">c:set</span> <span class="attr">var</span>=<span class="string">"SiteId"</span> <span class="attr">value</span>=<span class="string">"3"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:update</span> <span class="attr">dataSource</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;snapshot&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"count"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  UPDATE websites SET name = 'RUNOOB' WHERE Id = ?</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">sql:param</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;SiteId&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">sql:update</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sql:query</span> <span class="attr">dataSource</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;snapshot&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">var</span>=<span class="string">"result"</span>&gt;</span></span></span><br><span class="line"><span class="xml">SELECT * from websites;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">sql:query</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>JSP 数据库实例 - 菜鸟教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>站点名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>站点地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"row"</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;result.rows&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.id&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.name&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;row.url&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微信开发--网页授权access_token与全局access_token获取用户信息的接口</title>
      <link href="/2019/02/19/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91-%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83access-token%E4%B8%8E%E5%85%A8%E5%B1%80access-token%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E7%9A%84%E6%8E%A5%E5%8F%A3/"/>
      <url>/2019/02/19/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91-%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83access-token%E4%B8%8E%E5%85%A8%E5%B1%80access-token%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E7%9A%84%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="微信开发——网页授权access-token与全局access-token获取用户信息的接口"><a href="#微信开发——网页授权access-token与全局access-token获取用户信息的接口" class="headerlink" title="微信开发——网页授权access_token与全局access_token获取用户信息的接口"></a>微信开发——网页授权access_token与全局access_token获取用户信息的接口</h1><h2 id="网页授权access-token"><a href="#网页授权access-token" class="headerlink" title="网页授权access_token"></a>网页授权access_token</h2><p>微信网页授权是通过OAuth2.0机制实现的。在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证——网页授权access_token。通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息。网页授权access_token是通过code换取的凭证，用于获取用户的基本信息，次数不限，时间最长5分钟。</p><p>获取网页授权access_token接口地址为：<br><a href="https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</a></p><p>获取code接口地址为:<br><a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a></p><p>获取用户信息接口:<br><a href="https://api.weixin.qq.com/sns/userinfo?access_token={0}&amp;openid={1}&amp;lang=zh_CN" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/userinfo?access_token={0}&amp;openid={1}&amp;lang=zh_CN</a></p><h2 id="全局access-token"><a href="#全局access-token" class="headerlink" title="全局access_token"></a>全局access_token</h2><p>其他微信接口需要通过基础支持中的“获取access_token”接口来获取到的全局access_token调用。全局access_token是HTML5网页调用基础接口的全局唯一凭证，有效时间为2小时，每天最多调用2000次。</p><p>获取全局access_token接口地址为：<br><a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET</a></p><p>获取用户OpenID接口地址：<br><a href="https://api.weixin.qq.com/cgi-bin/user/info/batchget?access_token=ACCESS_TOKEN" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/user/info/batchget?access_token=ACCESS_TOKEN</a></p><p>如果想用这个全局access_token获取用户信息，那么要求用户已经关注了你的公众号。此时才能根据用户的OpenID来获取用户的基本信息。</p>]]></content>
      
      
      <categories>
          
          <category> java-access_token </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2019/02/19/Markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/02/19/Markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>相比WYSIWYG编辑器<br>优点：<br>1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。<br>2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可<br>缺点：<br>1、需要记一些语法（当然，是很简单。五分钟学会）。<br>2、有些平台不支持Markdown编辑模式。<br>还好，简书是支持Markdown编辑模式的。<br>开启方式：设置-&gt;默认编辑器-&gt;Markdown编辑器</p><p>一、标题<br>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。<br>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。<br>示例：</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><p>二、字体</p><p>加粗</p><p>要加粗的文字左右分别用两个*号包起来</p><p>斜体</p><p>要倾斜的文字左右分别用一个*号包起来</p><p>斜体加粗</p><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><p>删除线</p><p>要加删除线的文字左右分别用两个<del>号包起来<br>示例：<br><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>`<br><strong><em>这是斜体加粗的文字</em></strong><br>~~这是加删除线的文字</del></p><p>三、引用<br>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>貌似可以一直加下去，但没神马卵用<br>示例：</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><p>四、分割线<br>三个或者三个以上的 - 或者 * 都可以。</p><h2 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h2><hr><hr><hr><p>五、图片<br>语法：<br><img src="图片地址" alt="图片alt" title="&#39;图片title&#39;"></p><p>图片alt就是显示在图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</p><p>示例：<br><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg" alt="blockchain" title="区块链"></p><p>blockchain</p><p>上传本地图片直接点击导航栏的图片标志，选择图片即可<br>六、超链接<br>语法：<br><a href="超链接地址" title="超链接title">超链接名</a><br>title可加可不加</p><p>示例：<br><a href="http://jianshu.com" target="_blank" rel="noopener">简书</a><br><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><p>效果如下：<br>简书<br>百度<br>注：Markdown本身语法不支持链接在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面中打开的话可以用html语言的a标签代替。<br><a href="超链接地址" target="_blank">超链接名</a></p><p>示例<br><a href="https://www.jianshu.com/u/1f5ac0cf6a8b" target="_blank">简书</a></p><p>七、列表</p><p>无序列表</p><p>语法：<br>无序列表用 - + * 任何一种都可以</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><p>注意：- + * 跟内容之间都要有一个空格</p><p>语法：<br>数字加点<br>1.列表内容<br>2.列表内容<br>3.列表内容</p><p>注意：序号跟内容之间要有空格</p><p>列表嵌套</p><p>上一级和下一级之间敲三个空格即可</p><p>八、表格<br>语法：<br>表头|表头|表头<br>—|:–:|—:<br>内容|内容|内容<br>内容|内容|内容</p><p>第二行分割表头和内容。</p><ul><li>有一个就行，为了对齐，多加了几个<br>文字默认居左<br>-两边加：表示文字居中<br>-右边加：表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略</li></ul><p>示例：<br>姓名|技能|排行<br>–|:–:|–:<br>刘备|哭|大哥<br>关羽|打|二哥<br>张飞|骂|三弟</p><p>九、代码<br>语法：<br>单行代码：代码之间分别用一个反引号包起来<br>    <code>代码内容</code></p><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行<br>(<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">(```)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">单行代码</span><br><span class="line">`create database hero;`</span><br><span class="line"></span><br><span class="line">代码块</span><br><span class="line">(```)</span><br><span class="line">    function fun()&#123;</span><br><span class="line">         echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    fun();</span><br><span class="line">(```)</span><br><span class="line"></span><br><span class="line">十、流程图</span><br><span class="line">```flow</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>access_token</title>
      <link href="/2019/02/19/access-token/"/>
      <url>/2019/02/19/access-token/</url>
      
        <content type="html"><![CDATA[<p><em>微信公众号之access_token获取与管理</em></p><p>转自：<a href="https://www.cnblogs.com/fengzheng/p/5027630.html" target="_blank" rel="noopener">https://www.cnblogs.com/fengzheng/p/5027630.html</a></p><p>在将access_token之前，还有两个重要参数需要知晓，这两个参数分别是appID和appsecret，这是在申请公众号的时候自动分配给公众号的，相当于公众号的身份标示，在很多接口中需要这两个参数，接下来在请求access_token的时候就需要这两个参数。</p><p>公众号接入成功之后，接下来就要实现相应的逻辑了。在使用微信公众号接口中，发现有许多请求都需要access_token。access_token是公众号的全局唯一凭证，公众号调用各接口时都需使用access_token。开发者需要进行妥善保存。access_token的存储至少要保留512个字符空间。access_token的有效期目前为2个小时，需定时刷新，重复获取将导致上次获取的access_token失效。并且每天调用获取access_token接口的上限是2000次。</p><p>总结以上说明，access_token需要做到以下两点：</p><p>1.因为access_token有2个小时的时效性，要有一个机制保证最长2个小时重新获取一次；</p><p>2.因为接口调用上限每天2000次，所以不能调用太频繁；</p><p>就此，这里采用的方案是这样的，定义一个默认启动的servlet，在init方法中启动一个Thread,这个进程中定义一个无限循环的方法，用来获取access_token，当获取成功后，此进程休眠7000秒，否则休眠3秒钟继续获取。流程图如下：</p><p>下面正式开始在工程中实现以上思路，因为返回的数据都是json格式，这里会用到阿里的fastjson库，为构造请求和处理请求后的数据序列化和反序列化提供支持。后续的其它接口也会用到。</p><p>1.定义一个AccessToken实体</p><p>public class AccessToken {<br>    public String getAccessToken() {<br>        return accessToken;<br>    }</p><pre><code>public void setAccessToken(String accessToken) {    this.accessToken = accessToken;}public int getExpiresin() {    return expiresin;}public void setExpiresin(int expiresin) {    this.expiresin = expiresin;}private String accessToken;private int expiresin;</code></pre><p>}<br>2.定义一个默认启动的servlet，在init方法中启动一个Thread，并在web.xml中将这个servlet设置为默认自启动的。</p><p>import javax.servlet.ServletException;<br>import javax.servlet.annotation.WebServlet;<br>import javax.servlet.http.HttpServlet;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpServletResponse;<br>import java.io.IOException;</p><p>/**</p><ul><li>Created by huzhicheng on 2015/12/8.<br>*/<br>@WebServlet(name = “AccessTokenServlet”)<br>public class AccessTokenServlet extends HttpServlet {<br> public void init() throws ServletException {<pre><code>TokenThread.appId = getInitParameter(&quot;appid&quot;);  //获取servlet初始参数appid和appsecretTokenThread.appSecret = getInitParameter(&quot;appsecret&quot;);System.out.println(&quot;appid:&quot;+TokenThread.appId);System.out.println(&quot;appSecret:&quot;+TokenThread.appSecret);new Thread(new TokenThread()).start(); //启动进程</code></pre> }<br> protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<br> }<br> protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<br> }<br>}<br>在web.xml中设置servlet自启动，并设置初始化参数appid和appsecret</li></ul><p><servlet><br>        <servlet-name>initAccessTokenServlet</servlet-name><br>        <servlet-class><br>            org.fengzheng.wechat.accesstoken.AccessTokenServlet<br>        </servlet-class><br>        <init-param><br>            <param-name>appid</param-name><br>            <param-value>your appid</param-value><br>        </init-param><br>        <init-param><br>            <param-name>appsecret</param-name><br>            <param-value>your appsecret</param-value><br>        </init-param><br>        <load-on-startup>0</load-on-startup><br> </servlet><br>3.定义Thread类，在此类中调用access_token获取接口，并将得到的数据抽象到静态实体，以便在其它地方使用。接口地址为<a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET，其中grant_type固定写为client_credential即可。此请求为https的get请求，返回的数据格式为{&quot;access_token&quot;:&quot;ACCESS_TOKEN&quot;,&quot;expires_in&quot;:7200}。" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET，其中grant_type固定写为client_credential即可。此请求为https的get请求，返回的数据格式为{&quot;access_token&quot;:&quot;ACCESS_TOKEN&quot;,&quot;expires_in&quot;:7200}。</a></p><p>进程类实现如下：</p><p>import com.alibaba.fastjson.JSON;<br>import com.alibaba.fastjson.JSONObject;<br>import org.fengzheng.wechat.common.NetWorkHelper;</p><p>/**</p><ul><li><p>Created by huzhicheng on 2015/11/5.<br>*/<br>public class TokenThread implements Runnable {<br> public static String appId = “”;</p><p> public static String appSecret= “”;<br><br>　　//注意是静态的<br> public static AccessToken accessToken = null;</p><p> public void run(){</p><pre><code>while (true){    try{        accessToken = this.getAccessToken();        if(null!=accessToken){            System.out.println(accessToken.getAccessToken());            Thread.sleep(7000 * 1000); //获取到access_token 休眠7000秒        }else{            Thread.sleep(1000*3); //获取的access_token为空 休眠3秒        }    }catch(Exception e){        System.out.println(&quot;发生异常：&quot;+e.getMessage());        e.printStackTrace();        try{            Thread.sleep(1000*10); //发生异常休眠1秒        }catch (Exception e1){        }    }}</code></pre><p> }</p></li></ul><pre><code>/** * 获取access_token * @return */private AccessToken getAccessToken(){    NetWorkHelper netHelper = new NetWorkHelper();    String Url = String.format(&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=%s&amp;secret=%s&quot;,this.appId,this.appSecret);    String result = netHelper.getHttpsResponse(Url,&quot;&quot;);    System.out.println(result);    //response.getWriter().println(result);    JSONObject json = JSON.parseObject(result);    AccessToken token = new AccessToken();    token.setAccessToken(json.getString(&quot;access_token&quot;));    token.setExpiresin(json.getInteger(&quot;expires_in&quot;));    return token;}</code></pre><p>}<br>其中NetWorkHelper中getHttpsResponse方法是请求一个https地址，参数requestMethod为字符串“GET”或者“POST”，传null或者“”默认为get方式。</p><p>实现如下：</p><p>public String getHttpsResponse(String hsUrl,String requestMethod) {<br>        URL url;<br>        InputStream is = null;<br>        String resultData = “”;<br>        try {<br>            url = new URL(hsUrl);<br>            HttpsURLConnection con = (HttpsURLConnection) url.openConnection();<br>            TrustManager[] tm = {xtm};</p><pre><code>        SSLContext ctx = SSLContext.getInstance(&quot;TLS&quot;);        ctx.init(null, tm, null);        con.setSSLSocketFactory(ctx.getSocketFactory());        con.setHostnameVerifier(new HostnameVerifier() {            @Override            public boolean verify(String arg0, SSLSession arg1) {                return true;            }        });        con.setDoInput(true); //允许输入流，即允许下载        //在android中必须将此项设置为false        con.setDoOutput(false); //允许输出流，即允许上传        con.setUseCaches(false); //不使用缓冲        if(null!=requestMethod &amp;&amp; !requestMethod.equals(&quot;&quot;)) {            con.setRequestMethod(requestMethod); //使用指定的方式        }        else{            con.setRequestMethod(&quot;GET&quot;); //使用get请求        }        is = con.getInputStream();   //获取输入流，此时才真正建立链接        InputStreamReader isr = new InputStreamReader(is);        BufferedReader bufferReader = new BufferedReader(isr);        String inputLine = &quot;&quot;;        while ((inputLine = bufferReader.readLine()) != null) {            resultData += inputLine + &quot;\n&quot;;        }        System.out.println(resultData);        Certificate[] certs = con.getServerCertificates();        int certNum = 1;        for (Certificate cert : certs) {            X509Certificate xcert = (X509Certificate) cert;        }    } catch (Exception e) {        e.printStackTrace();    }    return resultData;}</code></pre><p>X509TrustManager xtm = new X509TrustManager() {<br>        @Override<br>        public X509Certificate[] getAcceptedIssuers() {<br>            // TODO Auto-generated method stub<br>            return null;<br>        }</p><pre><code>    @Override    public void checkServerTrusted(X509Certificate[] arg0, String arg1)            throws CertificateException {        // TODO Auto-generated method stub    }    @Override    public void checkClientTrusted(X509Certificate[] arg0, String arg1)            throws CertificateException {        // TODO Auto-generated method stub    }};</code></pre><p>至此代码实现完毕，将项目部署，看到控制台输出如下：</p><p>　　</p><p>为方面看效果，可以把休眠时间设置短一点，比如30秒获取一次，然后将access_token输出。下面做一个测试jsp页面，并把休眠时间设置为30秒，这样过30秒刷新页面，就可以看到变化，顺便演示一下在其它地方如何拿到access_token</p><p>&lt;%@ page contentType=”text/html;charset=UTF-8” language=”java” %&gt;<br>&lt;%@ page import=”org.fengzheng.wechat.accesstoken.TokenThread” %&gt;</p><html><br>  <head><meta name="generator" content="Hexo 3.8.0"><br>    <title></title><br>  </head><br>  <body><br>  access_token为：&lt;%=TokenThread.accessToken.getAccessToken()%&gt;<br>  </body><br></html>]]></content>
      
      
      <categories>
          
          <category> java-access_token </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrpy使用方法</title>
      <link href="/2019/02/01/scrapy%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2019/02/01/scrapy%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Scrapy教程center-gt"><a href="#Scrapy教程center-gt" class="headerlink" title="Scrapy教程center&gt;"></a><center>Scrapy教程</center>center&gt;</h1><h2 id="将要抓取-quotes-toscrape-com网站。"><a href="#将要抓取-quotes-toscrape-com网站。" class="headerlink" title="将要抓取 quotes.toscrape.com网站。"></a>将要抓取 quotes.toscrape.com网站。</h2><p>此教程指导你完成以下任务：</p><p><em>新建Scrapy工程<br>编写一个spider爬网站提取数据<br>用命令行导出爬取的数据<br>改变spider递归爬行链接<br>使用spider参数<br>创建一个项目</em><br>在抓取之前，先要构建Scrapy项目：<br>scrapy startproject tutorial<br>此命令创建以下内容的tutorial目录：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">tutorial/</span><br><span class="line">    scrapy.cfg            <span class="comment"># deploy configuration file</span></span><br><span class="line"></span><br><span class="line">    tutorial/             <span class="comment"># project's Python module, you'll import your code from here</span></span><br><span class="line">        __init__.py</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">items</span>.py          <span class="comment"># project items definition file</span></span><br><span class="line">    </span><br><span class="line">        pipelines.py      <span class="comment"># project pipelines file</span></span><br><span class="line">    </span><br><span class="line">        settings.py       <span class="comment"># project settings file</span></span><br><span class="line">    </span><br><span class="line">        spiders/          <span class="comment"># a directory where you'll later put your spiders</span></span><br><span class="line">            __init__.py</span><br></pre></td></tr></table></figure></p><h2 id="第一个爬虫"><a href="#第一个爬虫" class="headerlink" title="第一个爬虫"></a>第一个爬虫</h2><p>Spider是定义为爬取网站信息的类。必须继承自scrapy.Spider，定义初始请求，如何选择页面爬取url，以及如何解析页面内容提取数据。</p><p>这是我们第一个Spider的代码，把它保存在tutorial/spiders目录的 quotes_spider.py 中文件。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuotesSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"quotes"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">        urls = [</span><br><span class="line">            <span class="string">'http://quotes.toscrape.com/page/1/'</span>,</span><br><span class="line">            <span class="string">'http://quotes.toscrape.com/page/2/'</span>,</span><br><span class="line">        ]</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=url, callback=self.parse)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        page = response.url.split(<span class="string">"/"</span>)[<span class="number">-2</span>]</span><br><span class="line">        filename = <span class="string">'quotes-%s.html'</span> % page</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.body)</span><br><span class="line">        self.log(<span class="string">'Saved file %s'</span> % filename)</span><br></pre></td></tr></table></figure></p><p>如上，spider继承自 scrapy.Spider<br>并且定义了一些属性和方法。</p><p>name:标识spider。在项目中必须是唯一的，不能给不同的spider设置相同的名称。<br>start_requests():必须返回一个请求的迭代（可以返回一个请求的列表或者写一个生成器函数），spider从这里开始爬去。子序列请求从这些初始的请求自动生成。<br>parse():在每个请求完成时回掉方法。response参数是TextResponse类的实例，包含页面内容和一些选择器等函数操作。<br>parse()函数通常解析html，把抓到的数据提取为dicts，随后查找新的URLS创建新的请求。</p><p>如何运行我们的蜘蛛<br>在项目的最顶层目录运行：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">scrapy crawl quotes</span></span><br></pre></td></tr></table></figure></p><p>这条命令执行我们刚添加的名为quotes的蜘蛛。它发送一些请求到quotes.toscrape.com。你将得到如下输出：<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">... (omitted for brevity)</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [scrapy.core.engine] INFO: Spider opened</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [scrapy.extensions.telnet] DEBUG: Telnet console listening on 127.0.0.1:6023</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [scrapy.core.engine] DEBUG: Crawled (404) &lt;GET http://quotes.toscrape.com/robots.txt&gt; (referer: None)</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [scrapy.core.engine] DEBUG: Crawled (200) &lt;GET http://quotes.toscrape.com/page/1/&gt; (referer: None)</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [scrapy.core.engine] DEBUG: Crawled (200) &lt;GET http://quotes.toscrape.com/page/2/&gt; (referer: None)</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [quotes] DEBUG: Saved file quotes<span class="string">-1</span>.html</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [quotes] DEBUG: Saved file quotes<span class="string">-2</span>.html</span><br><span class="line">2016<span class="string">-12</span><span class="string">-16</span> 21:24:05 [scrapy.core.engine] INFO: Closing spider (finished)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>现在，检查当前目录。你会注意到创建了两个新文件quotes-1.html 和quotes-2.html，里面包含了urls的响应数据。</p><p>内部机制是什么<br>Scrapy调用蜘蛛的start_requests方法，一旦接收到一个响应，立马初始化Response对象然后调用请求的回掉函数（在此例中，时parse()函数）把response对象作为参数。</p><p>start_requests函数简写<br>作为start_requests函数的替代，可以定义start_urls的种子列表。默认的start_requests()函数实现中会使用start_urls创建初始请求。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuotesSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"quotes"</span></span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">'http://quotes.toscrape.com/page/1/'</span>,</span><br><span class="line">        <span class="string">'http://quotes.toscrape.com/page/2/'</span>,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        page = response.url.split(<span class="string">"/"</span>)[<span class="number">-2</span>]</span><br><span class="line">        filename = <span class="string">'quotes-%s.html'</span> % page</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.body)</span><br></pre></td></tr></table></figure></p><p>urls的每次请求都会调用parse()。这是因为parse()是Scrapy在没有显式给回掉函数赋值时的默认回掉函数。</p><p>提取数据<br>最好的学习使用Scrapy的选择器的方式是使用Scrapy shell。<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy <span class="keyword">shell</span><span class="bash"> <span class="string">'http://quotes.toscrape.com/page/1/'</span></span></span><br></pre></td></tr></table></figure></p><p><strong><em>提示<br>记住使用单引号包裹地址否则包含参数（如&amp;字符）将不会工作</em></strong></p><p>在windows中，使用双引号</p><p>你将看到：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[ ... Scrapy log here ... ]</span><br><span class="line"><span class="number">2016</span>-09-<span class="number">19</span> <span class="number">12</span><span class="symbol">:</span>09<span class="symbol">:</span><span class="number">27</span> [scrapy.core.engine] <span class="symbol">DEBUG:</span> Crawled (<span class="number">200</span>) &lt;GET <span class="symbol">http:</span>/<span class="regexp">/quotes.toscrape.com/page</span><span class="regexp">/1/</span>&gt; (<span class="symbol">referer:</span> None)</span><br><span class="line">[s] Available Scrapy <span class="symbol">objects:</span></span><br><span class="line">[s]   scrapy     scrapy <span class="class"><span class="keyword">module</span> (<span class="title">contains</span> <span class="title">scrapy</span>.<span class="title">Request</span>, <span class="title">scrapy</span>.<span class="title">Selector</span>, <span class="title">etc</span>)</span></span><br><span class="line">[s]   crawler    &lt;scrapy.crawler.Crawler object at <span class="number">0x7fa91d888c90</span>&gt;</span><br><span class="line">[s]   item       &#123;&#125;</span><br><span class="line">[s]   request    &lt;GET <span class="symbol">http:</span>/<span class="regexp">/quotes.toscrape.com/page</span><span class="regexp">/1/</span>&gt;</span><br><span class="line">[s]   response   &lt;<span class="number">200</span> <span class="symbol">http:</span>/<span class="regexp">/quotes.toscrape.com/page</span><span class="regexp">/1/</span>&gt;</span><br><span class="line">[s]   settings   &lt;scrapy.settings.Settings object at <span class="number">0x7fa91d888c10</span>&gt;</span><br><span class="line">[s]   spider     &lt;DefaultSpider <span class="string">'default'</span> at <span class="number">0x7fa91c8af990</span>&gt;</span><br><span class="line">[s] Useful <span class="symbol">shortcuts:</span></span><br><span class="line">[s]   shelp()           Shell help (print this help)</span><br><span class="line">[s]   fetch(req_or_url) Fetch request (<span class="keyword">or</span> URL) <span class="keyword">and</span> update local objects</span><br><span class="line">[s]   view(response)    View response <span class="keyword">in</span> a browser</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;在shell中，可以使用response对象的CSS 函数选择元素。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; [&lt;Selector xpath=<span class="string">'descendant-or-self::title'</span> data=<span class="string">'&lt;title&gt;Quotes to Scrape&lt;/title&gt;'</span>&gt;]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title'</span>)的运行结果是一个名为SelectorList的list-like对象，它是包含XML/HTML元素的 Selector</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 对象列表允许你进一步查询选择和提取数据。</span><br><span class="line"></span><br><span class="line">为了导出title的文本，你可以：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title::text'</span>).extract()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; [<span class="string">'Quotes to Scrape'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 此处有两点要注意：一、我们添加了<span class="symbol">:</span><span class="symbol">:text</span>到CSS查询中，意味着只选择了&lt;title&gt;元素的text属性。如果不指定<span class="symbol">:</span><span class="symbol">:text</span>，我们会得到的是整个title元素。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title'</span>).extract()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; [<span class="string">'&lt;title&gt;Quotes to Scrape&lt;/title&gt;'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 二、.extract()返回SelectorList的文本列表。只取第一个元素的文本：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title::text'</span>).extract_first()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'Quotes to Scrape'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 也可以使用python的列表写法：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title::text'</span>)[<span class="number">0</span>].extract()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'Quotes to Scrape'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 但是，使用extract()和extract_first()方法可以在没有找到任何匹配元素时返回None，避免IndexError。</span><br><span class="line"></span><br><span class="line">除了extract()和extract_first()方法，你还可以使用re()的正则表达式方法。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title::text'</span>).re(r<span class="string">'Quotes.*'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; [<span class="string">'Quotes to Scrape'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title::text'</span>).re(r<span class="string">'Q\w+'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; [<span class="string">'Quotes'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'title::text'</span>).re(r<span class="string">'(\w+) to (\w+)'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; [<span class="string">'Quotes'</span>, <span class="string">'Scrape'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 为了找到适当的CSS选择器，你可从shell中使用view(response)浏览响应界面。你可以使用浏览器开发工具或插件如Firebug（此处请看使用Firebug 抓取和使用FireFox抓取）。</span><br></pre></td></tr></table></figure></p><p>选择器小工具也是一个查找CSS选择器很好的工具，可以可视化的查找元素，可在很多浏览器中工作。</p><p>XPATH:简介<br>除了css，Scrapy选择器也支持XPath表达式：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.xpath(<span class="string">'//title'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; [&lt;Selector xpath=<span class="string">'//title'</span> data=<span class="string">'&lt;title&gt;Quotes to Scrape&lt;/title&gt;'</span>&gt;]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.xpath(<span class="string">'//title/text()'</span>).extract_first()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'Quotes to Scrape'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; XPATH表达式很强大，是Scrapy选择器的基础。事实上，CSS选择器在内部转换为Xpath。你可以在shell查看文本选择器的对象类型。</span><br></pre></td></tr></table></figure></p><p>尽管不如CSS选择器流行，Xpath表达式却更强大。它除了可以导航到结构也可以查找内容。使用xpath，你能这么选择如：选择包含Next Page的文本连接。这使得xpath非常适合抓取，我们鼓励你学习Xpath，即使你已经知道如何构造CSS选择器，它会更简单。</p><p>我们在这不会涉及XPath太多，你可以阅读使用XPath.为了学习Xpath，我们建议通过例子学习XPath教程，和如何使用XPath思考。</p><p>提取quotes和authors<br>现在你知道了一点关于选择和提取的知识了，让我们完善我们的spider，写代码从网站页面提取quotes。</p><p><a href="http://quotes.toscrape.com中的每个quote的HTML形式类似下面：" target="_blank" rel="noopener">http://quotes.toscrape.com中的每个quote的HTML形式类似下面：</a><br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> class=<span class="string">"quote"</span>&gt;</span><br><span class="line">    &lt;span class=<span class="string">"text"</span>&gt;“The world <span class="keyword">as</span> we have created <span class="keyword">it</span> is <span class="keyword">a</span> <span class="built_in">process</span> <span class="keyword">of</span> our</span><br><span class="line">    thinking. It cannot be changed <span class="keyword">without</span> changing our thinking.”&lt;/span&gt;</span><br><span class="line">    &lt;span&gt;</span><br><span class="line">        <span class="keyword">by</span> &lt;small class=<span class="string">"author"</span>&gt;Albert Einstein&lt;/small&gt;</span><br><span class="line">        &lt;<span class="keyword">a</span> href=<span class="string">"/author/Albert-Einstein"</span>&gt;(about)&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> class=<span class="string">"tags"</span>&gt;</span><br><span class="line">        Tags:</span><br><span class="line">        &lt;<span class="keyword">a</span> class=<span class="string">"tag"</span> href=<span class="string">"/tag/change/page/1/"</span>&gt;change&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">a</span> class=<span class="string">"tag"</span> href=<span class="string">"/tag/deep-thoughts/page/1/"</span>&gt;deep-thoughts&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">a</span> class=<span class="string">"tag"</span> href=<span class="string">"/tag/thinking/page/1/"</span>&gt;thinking&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">a</span> class=<span class="string">"tag"</span> href=<span class="string">"/tag/world/page/1/"</span>&gt;world&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></p><p>打开scrapy shell尝试提取我们想要的数据。</p><p>$ scrapy shell ‘<a href="http://quotes.toscrape.com&#39;" target="_blank" rel="noopener">http://quotes.toscrape.com&#39;</a><br>我们使用下面语法得到一系列的quote元素的选择器：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">"div.quote"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 每个选择器都可以查询它们的子元素。我们把第一个选择器赋值给变量，这样我们可以直接运行指定的quote选择器。</span><br><span class="line"></span><br><span class="line">quote = response.css(<span class="string">"div.quote"</span>)[<span class="number">0</span>]</span><br><span class="line">现在我们从quote导出title,author和tags使用我们刚创建的quote对象。当你知道你只需要第一个结果时，你可以：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; title = quote.css(<span class="string">"span.text::text"</span>).extract_first()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; title</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; author = quote.css(<span class="string">"small.author::text"</span>).extract_first()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; author</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'Albert Einstein'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 考虑到标签是字符串列表，我们可以使用.extract()方法获取他们。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; tags = quote.css(<span class="string">"div.tags a.tag::text"</span>).extract()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; tags</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; [<span class="string">'change'</span>, <span class="string">'deep-thoughts'</span>, <span class="string">'thinking'</span>, <span class="string">'world'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 解决了如何导出每个，我们现在可迭代所有quotes元素把他们保存到Python字典中。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; for quote in response.css(<span class="string">"div.quote"</span>)<span class="symbol">:</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; ...     text = quote.css(<span class="string">"span.text::text"</span>).extract_first()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; ...     author = quote.css(<span class="string">"small.author::text"</span>).extract_first()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; ...     tags = quote.css(<span class="string">"div.tags a.tag::text"</span>).extract()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; ...     print(dict(text=text, author=author, tags=tags))</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; &#123;<span class="string">'tags'</span>: [<span class="string">'change'</span>, <span class="string">'deep-thoughts'</span>, <span class="string">'thinking'</span>, <span class="string">'world'</span>], <span class="string">'author'</span>: <span class="string">'Albert Einstein'</span>, <span class="string">'text'</span>: <span class="string">'“The world as we have created it is a process of our thinking. It cannot be changed without changing our thinking.”'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; &#123;<span class="string">'tags'</span>: [<span class="string">'abilities'</span>, <span class="string">'choices'</span>], <span class="string">'author'</span>: <span class="string">'J.K. Rowling'</span>, <span class="string">'text'</span>: <span class="string">'“It is our choices, Harry, that show what we truly are, far more than our abilities.”'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;     ... a few more of these, omitted for brevity</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 使用spider导出数据</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 让我们回到spider。直到现在，仍然没有导出任何数据，只是把HTML页面保存到本地文件中。我们把导出逻辑集成到spider中。</span><br></pre></td></tr></table></figure></p><p>一个Scrapy蜘蛛通常包含多个页面抓取数据的字典。这样，我们可以使用在回调函数中使用yieldPython关键字，如下所示：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuotesSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"quotes"</span></span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">'http://quotes.toscrape.com/page/1/'</span>,</span><br><span class="line">        <span class="string">'http://quotes.toscrape.com/page/2/'</span>,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> quote <span class="keyword">in</span> response.css(<span class="string">'div.quote'</span>):</span><br><span class="line">            <span class="keyword">yield</span> &#123;</span><br><span class="line">                <span class="string">'text'</span>: quote.css(<span class="string">'span.text::text'</span>).extract_first(),</span><br><span class="line">                <span class="string">'author'</span>: quote.css(<span class="string">'span small::text'</span>).extract_first(),</span><br><span class="line">                <span class="string">'tags'</span>: quote.css(<span class="string">'div.tags a.tag::text'</span>).extract(),</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure></p><p>如果你运行这个蜘蛛，它把导出数据输出到日志中：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016</span>-<span class="number">09</span>-<span class="number">19</span> <span class="number">18</span>:<span class="number">57</span>:<span class="number">19</span> [scrapy<span class="selector-class">.core</span><span class="selector-class">.scraper</span>] DEBUG: Scraped from &lt;<span class="number">200</span> http:<span class="comment">//quotes.toscrape.com/page/1/&gt;</span></span><br><span class="line">&#123;<span class="string">'tags'</span>: [<span class="string">'life'</span>, <span class="string">'love'</span>], <span class="string">'author'</span>: <span class="string">'André Gide'</span>, <span class="string">'text'</span>: <span class="string">'“It is better to be hated for what you are than to be loved for what you are not.”'</span>&#125;</span><br><span class="line"><span class="number">2016</span>-<span class="number">09</span>-<span class="number">19</span> <span class="number">18</span>:<span class="number">57</span>:<span class="number">19</span> [scrapy<span class="selector-class">.core</span><span class="selector-class">.scraper</span>] DEBUG: Scraped from &lt;<span class="number">200</span> http:<span class="comment">//quotes.toscrape.com/page/1/&gt;</span></span><br><span class="line">&#123;<span class="string">'tags'</span>: [<span class="string">'edison'</span>, <span class="string">'failure'</span>, <span class="string">'inspirational'</span>, <span class="string">'paraphrased'</span>], <span class="string">'author'</span>: <span class="string">'Thomas A. Edison'</span>, <span class="string">'text'</span>: <span class="string">"“I have not failed. I've just found 10,000 ways that won't work.”"</span>&#125;</span><br></pre></td></tr></table></figure></p><p>保存抓取到的数据<br>最简单的保存抓取数据是使用Feed exports, 使用下面的命令行：</p><p>scrapy crawl quotes -o quotes.json<br>这将生成一个quotes.json文件包含所有抓取像序列化为json。</p><p>由于历史原因，Scrapy使用追加而不是覆盖，如果你运行两次此命令而没有在第二次删除之前的文件，你将得到一个损毁的JSON文件。</p><p>你也可以使用其他格式，如Json Lines</p><p>scrapy crawl quotes -o quotes.jl<br>Json Lines格式很有用，因为她是stream-like。你可以往里面轻松的添加新纪录。他没有上面的JSON文件的问题当你运行两次的时候。同时，因为每条记录是一行，你可以处理超大文件而不必担心内存问题，有很多工具如JQ可在命令行处理。</p><p>在小项目里（例如此教程），这样就够了。然而，如果你想处理更复杂的抓取项，你可以编写[Item 管道]。当创建项目的时候，会在tutorial/pipelines.py构建一个Item 管道文件。这样如果你只是想保存抓取到的项，就不需要实现任何的Item管道。</p><p>下面的连接<br>假如你不仅想抓取 <a href="http://quotes.toscrape.com网站中的两个页面，而是想抓取所有的网站页面。" target="_blank" rel="noopener">http://quotes.toscrape.com网站中的两个页面，而是想抓取所有的网站页面。</a></p><p>现在你知道如何从页面抓取数据，让我们看看下面的连接如何得到。</p><p>首先从页面中提取我们想要的连接。查看我们的页面，我们可以看见页面中的下一页连接如下所示标志：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pager"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/page/2/"</span>&gt;</span>Next <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>→<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>试着在shell中提取它：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'li.next a'</span>).extract_first()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'&lt;a href="/page/2/"&gt;Next &lt;span aria-hidden="true"&gt;→&lt;/span&gt;&lt;/a&gt;'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 这得到了整个anchor元素，但是我们想要href属性。为了如此，Scrapu提供了CSS的扩展使你可以选择属性内容，如下：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; response.css(<span class="string">'li.next a::attr(href)'</span>).extract_first()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'/page/2/'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; 现在我们的spider被改成了可以跟踪下一页从中导出数据：</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuotesSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"quotes"</span></span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">'http://quotes.toscrape.com/page/1/'</span>,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> quote <span class="keyword">in</span> response.css(<span class="string">'div.quote'</span>):</span><br><span class="line">            <span class="keyword">yield</span> &#123;</span><br><span class="line">                <span class="string">'text'</span>: quote.css(<span class="string">'span.text::text'</span>).extract_first(),</span><br><span class="line">                <span class="string">'author'</span>: quote.css(<span class="string">'span small::text'</span>).extract_first(),</span><br><span class="line">                <span class="string">'tags'</span>: quote.css(<span class="string">'div.tags a.tag::text'</span>).extract(),</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">        next_page = response.css(<span class="string">'li.next a::attr(href)'</span>).extract_first()</span><br><span class="line">        <span class="keyword">if</span> next_page <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            next_page = response.urljoin(next_page)</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(next_page, callback=self.parse)</span><br></pre></td></tr></table></figure><p>现在，导出数据后，parse()函数查找下一页，使用urljoin构建一个绝对路径URL并生成一个到下一页的新请求，把下一页的请求注册为回调使得蜘蛛可以爬到所有的页面。</p><p>这是Scrapy跟踪页面的机制：当你在回调中生成一个请求对象，Scrapy会安排请求发送并注册回调函数在请求结束时运行。</p><p>使用这些，你可以构建复杂的爬虫系统，链接规则可以自定义，根据访问页面导出各种各样的数据。</p><p>在我们的例子中，它创建了一系列循环跟踪所有的链接到下一页直到找不到任何连接——方便爬取博客，论坛或其他的导航网站。</p><p>更多示例和模式<br>这是另一个蜘蛛用来解释回调和跟踪连接，这次抓取作者信息：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthorSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'author'</span></span><br><span class="line"></span><br><span class="line">    start_urls = [<span class="string">'http://quotes.toscrape.com/'</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="comment"># follow links to author pages</span></span><br><span class="line">        <span class="keyword">for</span> href <span class="keyword">in</span> response.css(<span class="string">'.author+a::attr(href)'</span>).extract():</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(response.urljoin(href),</span><br><span class="line">                                 callback=self.parse_author)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># follow pagination links</span></span><br><span class="line">        next_page = response.css(<span class="string">'li.next a::attr(href)'</span>).extract_first()</span><br><span class="line">        <span class="keyword">if</span> next_page <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            next_page = response.urljoin(next_page)</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(next_page, callback=self.parse)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_author</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">extract_with_css</span><span class="params">(query)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> response.css(query).extract_first().strip()</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">'name'</span>: extract_with_css(<span class="string">'h3.author-title::text'</span>),</span><br><span class="line">            <span class="string">'birthdate'</span>: extract_with_css(<span class="string">'.author-born-date::text'</span>),</span><br><span class="line">            <span class="string">'bio'</span>: extract_with_css(<span class="string">'.author-description::text'</span>),</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>蜘蛛从主页面开始，使用parse_author回调函数跟踪所有的作者页面连接，同时用parse回调函数跟踪导航连接如我们之前看到的。</p><p>parse_author回调函数定义了一个帮助方法，从CSS查询提取和清理并使用作者数据生成Python dict。</p><p>另一件关于蜘蛛的有趣的事情是，即使有很多名言出自同一作者，我们也不必担心多次访问相同作者的页面。默认情况下，Scrapy过滤掉重复的已访问的请求地址，避免程序太多次点击服务器的问题。这是用DUPEFILTER_CLASS配置。</p><p>希望你已理解了Scrapy如何跟踪页面和回调的机制。</p><p>这个程序利用跟踪链接机制实现，查看CrawlSpider类,它是一个通用的蜘蛛实现了一个小的规则引擎，你可以在这之上编写自己的爬虫。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/01/30/hello-world/"/>
      <url>/2019/01/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
